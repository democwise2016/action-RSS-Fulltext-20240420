<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:googleplay="http://www.google.com/schemas/play-podcasts/1.0" xmlns:media="http://www.rssboard.org/media-rss" version="2.0">
  <channel>
    <title><![CDATA[Ivon的部落格[RSS+]]]></title>
    <link>https://ivonblog.com/index.xml</link>
    <image>
      <url>https://fastly.picsum.photos/id/690/800/800.jpg?hmac=DabppFN5gw8Iby2TsCWPBv5VJq7k5Cds5JPM5_kcQzQ</url>
      <title>Ivon的部落格[RSS+]</title>
      <link>https://ivonblog.com/index.xml</link>
    </image>
    <language>zh-TW</language>
    <atom:link href="https://ivonblog.com/index.xml" rel="self" type="application/rss+xml"/>
    <copyright><![CDATA[Ivon的部落格[RSS+]]]></copyright>
    <itunes:author><![CDATA[Ivon的部落格[RSS+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[
      Recent content on Ivon的部落格<br />
<br />
<a href="https://ivonblog.com/index.xml" target="_blank">https://ivonblog.com/index.xml</a>
      ]]>
    </itunes:summary>
    <description>
      <![CDATA[
      Recent content on Ivon的部落格<br />
<br />
<a href="https://ivonblog.com/index.xml" target="_blank">https://ivonblog.com/index.xml</a>
      ]]>
    </description>
    <itunes:owner>
      <itunes:name><![CDATA[Ivon的部落格[RSS+]]]></itunes:name>
    </itunes:owner>
    <itunes:image href="https://fastly.picsum.photos/id/690/800/800.jpg?hmac=DabppFN5gw8Iby2TsCWPBv5VJq7k5Cds5JPM5_kcQzQ"/>
<item>
    <title><![CDATA[Ext4Fsd：在Windows讀取Ubuntu的EXT4硬碟磁區]]></title>
    <link>https://ivonblog.com/posts/ext4fsd-windows/</link>
    <itunes:title><![CDATA[Ext4Fsd：在Windows讀取Ubuntu的EXT4硬碟磁區]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p>EXT4是許多Linux發行版預設採用的檔案系統，未來可能會流行BTRFS，但在那之前，EXT4仍是最穩定的選擇，包括撰文當下的Ubuntu 24.04。</p><p>對Linux與Windows雙重開機的用戶來說，如何存取另一個系統的磁碟就會成為一個問題。</p><p>Linux系統可以透過<a href="https://ivonblog.com/posts/mount-ntfs-drives-on-linux/" target="_blank">ntfs-3g</a>讀取Windows的NTFS分區，那麼Windows要如何讀取Linux的EXT4分區呢？</p><p>Windows當然是不支援EXT4檔案系統的，在磁碟管理員會顯示無法辨識磁碟，要你格式化，這時不要真的按下去呀！</p><p>Windows需要手動安裝驅動才能讀取EXT4。通常會安裝Matt Wu開發的<a href="https://www.ext2fsd.com/" target="_blank">Ext2Fsd</a>這個軟體來讀，不過這個專案已經很久沒更新了，只支援到EXT3而已。</p><p>今次要分享的專案Ext4Fsd，是老專案Ext2Fsd的更新版，由Bo Brantén維護，支援最新EXT4檔案系統，能夠讀取也能寫入。</p><h2>1. 確定Linux硬碟使用的檔案系統<span><a href="#1-%E7%A2%BA%E5%AE%9Alinux%E7%A1%AC%E7%A2%9F%E4%BD%BF%E7%94%A8%E7%9A%84%E6%AA%94%E6%A1%88%E7%B3%BB%E7%B5%B1" aria-label="定位點">#</a></span></h2><p>在Linux系統使用這個指令確認根目錄分區使用的檔案系統，應該會是EXT4</p><div><pre tabindex="0"><code data-lang="bash"><span><span>df -T /
</span></span></code></pre></div><h2>2. 在Windows掛載EXT4分區<span><a href="#2-%E5%9C%A8windows%E6%8E%9B%E8%BC%89ext4%E5%88%86%E5%8D%80" aria-label="定位點">#</a></span></h2><p>Ext4Fsd是自由軟體，關於支援與不支援的檔案系統特性，請到<a href="https://github.com/bobranten/Ext4Fsd" target="_blank">GitHub</a>查看。</p><ol><li><p>到<a href="https://github.com/bobranten/Ext4Fsd/releases" target="_blank">GitHub</a>下載Ext4Fsd，這個軟體需要Window 10以上系統</p></li><li><p>在開始工作列開啟Ext2Mgr，會顯示電腦上所有的硬碟，找到Linux的EXT4分區，右鍵Assign Letter，賦予磁碟機代號</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ab99ef28e2.webp"></li><li><p>然後在Windows檔案總管就能看到Linux的檔案，例如<code>/home/user/</code>就是Linux使用者家目錄。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a68a3f2e7a.webp"></li><li><p>Ext4Fsd開機會自動掛載上面指定的磁碟機代號。這點可以透過Windows服務確認。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9005aa3950.webp"></li></ol>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p>EXT4是許多Linux發行版預設採用的檔案系統，未來可能會流行BTRFS，但在那之前，EXT4仍是最穩定的選擇，包括撰文當下的Ubuntu 24.04。</p><p>對Linux與Windows雙重開機的用戶來說，如何存取另一個系統的磁碟就會成為一個問題。</p><p>Linux系統可以透過<a href="https://ivonblog.com/posts/mount-ntfs-drives-on-linux/" target="_blank">ntfs-3g</a>讀取Windows的NTFS分區，那麼Windows要如何讀取Linux的EXT4分區呢？</p><p>Windows當然是不支援EXT4檔案系統的，在磁碟管理員會顯示無法辨識磁碟，要你格式化，這時不要真的按下去呀！</p><p>Windows需要手動安裝驅動才能讀取EXT4。通常會安裝Matt Wu開發的<a href="https://www.ext2fsd.com/" target="_blank">Ext2Fsd</a>這個軟體來讀，不過這個專案已經很久沒更新了，只支援到EXT3而已。</p><p>今次要分享的專案Ext4Fsd，是老專案Ext2Fsd的更新版，由Bo Brantén維護，支援最新EXT4檔案系統，能夠讀取也能寫入。</p><h2>1. 確定Linux硬碟使用的檔案系統<span><a href="#1-%E7%A2%BA%E5%AE%9Alinux%E7%A1%AC%E7%A2%9F%E4%BD%BF%E7%94%A8%E7%9A%84%E6%AA%94%E6%A1%88%E7%B3%BB%E7%B5%B1" aria-label="定位點">#</a></span></h2><p>在Linux系統使用這個指令確認根目錄分區使用的檔案系統，應該會是EXT4</p><div><pre tabindex="0"><code data-lang="bash"><span><span>df -T /
</span></span></code></pre></div><h2>2. 在Windows掛載EXT4分區<span><a href="#2-%E5%9C%A8windows%E6%8E%9B%E8%BC%89ext4%E5%88%86%E5%8D%80" aria-label="定位點">#</a></span></h2><p>Ext4Fsd是自由軟體，關於支援與不支援的檔案系統特性，請到<a href="https://github.com/bobranten/Ext4Fsd" target="_blank">GitHub</a>查看。</p><ol><li><p>到<a href="https://github.com/bobranten/Ext4Fsd/releases" target="_blank">GitHub</a>下載Ext4Fsd，這個軟體需要Window 10以上系統</p></li><li><p>在開始工作列開啟Ext2Mgr，會顯示電腦上所有的硬碟，找到Linux的EXT4分區，右鍵Assign Letter，賦予磁碟機代號</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ab99ef28e2.webp"></li><li><p>然後在Windows檔案總管就能看到Linux的檔案，例如<code>/home/user/</code>就是Linux使用者家目錄。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a68a3f2e7a.webp"></li><li><p>Ext4Fsd開機會自動掛載上面指定的磁碟機代號。這點可以透過Windows服務確認。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9005aa3950.webp"></li></ol>]]>
    </description>
    <content:encoded><![CDATA[<p>EXT4是許多Linux發行版預設採用的檔案系統，未來可能會流行BTRFS，但在那之前，EXT4仍是最穩定的選擇，包括撰文當下的Ubuntu 24.04。</p><p>對Linux與Windows雙重開機的用戶來說，如何存取另一個系統的磁碟就會成為一個問題。</p><p>Linux系統可以透過<a href="https://ivonblog.com/posts/mount-ntfs-drives-on-linux/" target="_blank">ntfs-3g</a>讀取Windows的NTFS分區，那麼Windows要如何讀取Linux的EXT4分區呢？</p><p>Windows當然是不支援EXT4檔案系統的，在磁碟管理員會顯示無法辨識磁碟，要你格式化，這時不要真的按下去呀！</p><p>Windows需要手動安裝驅動才能讀取EXT4。通常會安裝Matt Wu開發的<a href="https://www.ext2fsd.com/" target="_blank">Ext2Fsd</a>這個軟體來讀，不過這個專案已經很久沒更新了，只支援到EXT3而已。</p><p>今次要分享的專案Ext4Fsd，是老專案Ext2Fsd的更新版，由Bo Brantén維護，支援最新EXT4檔案系統，能夠讀取也能寫入。</p><h2>1. 確定Linux硬碟使用的檔案系統<span><a href="#1-%E7%A2%BA%E5%AE%9Alinux%E7%A1%AC%E7%A2%9F%E4%BD%BF%E7%94%A8%E7%9A%84%E6%AA%94%E6%A1%88%E7%B3%BB%E7%B5%B1" aria-label="定位點">#</a></span></h2><p>在Linux系統使用這個指令確認根目錄分區使用的檔案系統，應該會是EXT4</p><div><pre tabindex="0"><code data-lang="bash"><span><span>df -T /
</span></span></code></pre></div><h2>2. 在Windows掛載EXT4分區<span><a href="#2-%E5%9C%A8windows%E6%8E%9B%E8%BC%89ext4%E5%88%86%E5%8D%80" aria-label="定位點">#</a></span></h2><p>Ext4Fsd是自由軟體，關於支援與不支援的檔案系統特性，請到<a href="https://github.com/bobranten/Ext4Fsd" target="_blank">GitHub</a>查看。</p><ol><li><p>到<a href="https://github.com/bobranten/Ext4Fsd/releases" target="_blank">GitHub</a>下載Ext4Fsd，這個軟體需要Window 10以上系統</p></li><li><p>在開始工作列開啟Ext2Mgr，會顯示電腦上所有的硬碟，找到Linux的EXT4分區，右鍵Assign Letter，賦予磁碟機代號</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ab99ef28e2.webp"></li><li><p>然後在Windows檔案總管就能看到Linux的檔案，例如<code>/home/user/</code>就是Linux使用者家目錄。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a68a3f2e7a.webp"></li><li><p>Ext4Fsd開機會自動掛載上面指定的磁碟機代號。這點可以透過Windows服務確認。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9005aa3950.webp"></li></ol>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ab99ef28e2.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ab99ef28e2.webp" medium="image"/>
    <pubDate>Sat, 11 Oct 2025 15:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[GameNative：Android手機直接玩Steam PC遊戲，非遠端串流]]></title>
    <link>https://ivonblog.com/posts/gamenative-android/</link>
    <itunes:title><![CDATA[GameNative：Android手機直接玩Steam PC遊戲，非遠端串流]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/gamenative-android/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-be8118f8f3.webp"></a></p>
<p>GameNative是一款讓你在Android手機上玩Steam遊戲的模擬器APP，操作簡單易用。</p><p>關於在Android手機玩Windows遊戲的操作，從幾年前Termux Proot跑Linux容器，加上Box86技術的出現，就讓人看到了這種可能性，是否能夠玩Steam遊戲呢？理論上是可以的，此後有很多人提出各種做法，不過操作都不是很友善，最主要是過程繁瑣，需要打指令。</p><p>所幸有許多開發者推出了整合以上資源的APP，例如<a href="https://ivonblog.com/posts/winlator-windows-emulator-for-android/" target="_blank">Winlator</a>就是整合了Linux rootfs與Box86與Wine的APP，但介面稍嫌難以操作，因為要手動選取exe。</p><p>至於本文討論的「GameNative」更為進化了！直接將Steam客戶端轉化為手機原生APP的樣子，操作更為直覺。</p><p>GameNatvie是另一個APP Pluvia的fork，加入了DRM支援。</p><p>只要登入Steam帳號，就能下載自己收藏庫的遊戲。並且支援DRM與Steam雲端存檔，遊玩時數會計入Steam雲端。</p><h2>1. 系統需求<span><a href="#1-%E7%B3%BB%E7%B5%B1%E9%9C%80%E6%B1%82" aria-label="定位點">#</a></span></h2><p><a href="https://gamenative.app/compatibility/" target="_blank">GameNative官網</a>有遊戲測試相容列表。</p><p>GameNative支援高通與聯發科處理器的手機，有對應的3D加速圖形驅動。</p><p>因為遊戲執行過程涉及x86轉譯ARM指令，效能損失很大。</p><p>推薦搭載高通8Gen1處理器以上的Android旗艦機用戶嘗試，除非你只想玩2D小遊戲。</p><p>GameNative只專注在讓玩家執行Steam遊戲，不能執行任意exe。所以你需要先在Steam網站購買遊戲才能遊玩。</p><h2>2. GameNative用法<span><a href="#2-gamenative%E7%94%A8%E6%B3%95" aria-label="定位點">#</a></span></h2><ol><li><p>到<a href="https://github.com/utkarshdalal/GameNative" target="_blank">Github</a>下載APK</p></li><li><p>安裝後登入Steam帳號，這是自由軟體，應該可以放心登入。如果擔心被盜帳號請開著Steam Guard。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-10d475cccd.webp"></p></li><li><p>然後選取遊戲下載。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-26a67ce387.webp"></p></li><li><p>遊戲第一次啟動可能要花點時間建立環境（如果長時間卡在booting…就重新啟動APP），接著螢幕上就會出現虛擬手把。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a281b4fa83.webp">
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-08bdd3534a.webp"></p></li><li><p>關於遊戲效能的調整：點選Edit Container能夠調整要用的圖形驅動程式，高通推薦用Turnip，聯發科則是Vortex，都不行的話就選VirGL。但有些遊戲仍可能會黑螢幕。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-5f96ec7dab.webp"></p></li></ol><h2>3. ProtonTricks呢？<span><a href="#3-protontricks%E5%91%A2" aria-label="定位點">#</a></span></h2><p>目前遇到的問題是，需要額外用ProtonTricks補套件的遊戲無法執行，因為沒有工具能修改容器內的檔案。</p>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/gamenative-android/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-be8118f8f3.webp"></a></p>
<p>GameNative是一款讓你在Android手機上玩Steam遊戲的模擬器APP，操作簡單易用。</p><p>關於在Android手機玩Windows遊戲的操作，從幾年前Termux Proot跑Linux容器，加上Box86技術的出現，就讓人看到了這種可能性，是否能夠玩Steam遊戲呢？理論上是可以的，此後有很多人提出各種做法，不過操作都不是很友善，最主要是過程繁瑣，需要打指令。</p><p>所幸有許多開發者推出了整合以上資源的APP，例如<a href="https://ivonblog.com/posts/winlator-windows-emulator-for-android/" target="_blank">Winlator</a>就是整合了Linux rootfs與Box86與Wine的APP，但介面稍嫌難以操作，因為要手動選取exe。</p><p>至於本文討論的「GameNative」更為進化了！直接將Steam客戶端轉化為手機原生APP的樣子，操作更為直覺。</p><p>GameNatvie是另一個APP Pluvia的fork，加入了DRM支援。</p><p>只要登入Steam帳號，就能下載自己收藏庫的遊戲。並且支援DRM與Steam雲端存檔，遊玩時數會計入Steam雲端。</p><h2>1. 系統需求<span><a href="#1-%E7%B3%BB%E7%B5%B1%E9%9C%80%E6%B1%82" aria-label="定位點">#</a></span></h2><p><a href="https://gamenative.app/compatibility/" target="_blank">GameNative官網</a>有遊戲測試相容列表。</p><p>GameNative支援高通與聯發科處理器的手機，有對應的3D加速圖形驅動。</p><p>因為遊戲執行過程涉及x86轉譯ARM指令，效能損失很大。</p><p>推薦搭載高通8Gen1處理器以上的Android旗艦機用戶嘗試，除非你只想玩2D小遊戲。</p><p>GameNative只專注在讓玩家執行Steam遊戲，不能執行任意exe。所以你需要先在Steam網站購買遊戲才能遊玩。</p><h2>2. GameNative用法<span><a href="#2-gamenative%E7%94%A8%E6%B3%95" aria-label="定位點">#</a></span></h2><ol><li><p>到<a href="https://github.com/utkarshdalal/GameNative" target="_blank">Github</a>下載APK</p></li><li><p>安裝後登入Steam帳號，這是自由軟體，應該可以放心登入。如果擔心被盜帳號請開著Steam Guard。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-10d475cccd.webp"></p></li><li><p>然後選取遊戲下載。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-26a67ce387.webp"></p></li><li><p>遊戲第一次啟動可能要花點時間建立環境（如果長時間卡在booting…就重新啟動APP），接著螢幕上就會出現虛擬手把。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a281b4fa83.webp">
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-08bdd3534a.webp"></p></li><li><p>關於遊戲效能的調整：點選Edit Container能夠調整要用的圖形驅動程式，高通推薦用Turnip，聯發科則是Vortex，都不行的話就選VirGL。但有些遊戲仍可能會黑螢幕。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-5f96ec7dab.webp"></p></li></ol><h2>3. ProtonTricks呢？<span><a href="#3-protontricks%E5%91%A2" aria-label="定位點">#</a></span></h2><p>目前遇到的問題是，需要額外用ProtonTricks補套件的遊戲無法執行，因為沒有工具能修改容器內的檔案。</p>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/gamenative-android/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-be8118f8f3.webp"></a></p>
<p>GameNative是一款讓你在Android手機上玩Steam遊戲的模擬器APP，操作簡單易用。</p><p>關於在Android手機玩Windows遊戲的操作，從幾年前Termux Proot跑Linux容器，加上Box86技術的出現，就讓人看到了這種可能性，是否能夠玩Steam遊戲呢？理論上是可以的，此後有很多人提出各種做法，不過操作都不是很友善，最主要是過程繁瑣，需要打指令。</p><p>所幸有許多開發者推出了整合以上資源的APP，例如<a href="https://ivonblog.com/posts/winlator-windows-emulator-for-android/" target="_blank">Winlator</a>就是整合了Linux rootfs與Box86與Wine的APP，但介面稍嫌難以操作，因為要手動選取exe。</p><p>至於本文討論的「GameNative」更為進化了！直接將Steam客戶端轉化為手機原生APP的樣子，操作更為直覺。</p><p>GameNatvie是另一個APP Pluvia的fork，加入了DRM支援。</p><p>只要登入Steam帳號，就能下載自己收藏庫的遊戲。並且支援DRM與Steam雲端存檔，遊玩時數會計入Steam雲端。</p><h2>1. 系統需求<span><a href="#1-%E7%B3%BB%E7%B5%B1%E9%9C%80%E6%B1%82" aria-label="定位點">#</a></span></h2><p><a href="https://gamenative.app/compatibility/" target="_blank">GameNative官網</a>有遊戲測試相容列表。</p><p>GameNative支援高通與聯發科處理器的手機，有對應的3D加速圖形驅動。</p><p>因為遊戲執行過程涉及x86轉譯ARM指令，效能損失很大。</p><p>推薦搭載高通8Gen1處理器以上的Android旗艦機用戶嘗試，除非你只想玩2D小遊戲。</p><p>GameNative只專注在讓玩家執行Steam遊戲，不能執行任意exe。所以你需要先在Steam網站購買遊戲才能遊玩。</p><h2>2. GameNative用法<span><a href="#2-gamenative%E7%94%A8%E6%B3%95" aria-label="定位點">#</a></span></h2><ol><li><p>到<a href="https://github.com/utkarshdalal/GameNative" target="_blank">Github</a>下載APK</p></li><li><p>安裝後登入Steam帳號，這是自由軟體，應該可以放心登入。如果擔心被盜帳號請開著Steam Guard。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-10d475cccd.webp"></p></li><li><p>然後選取遊戲下載。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-26a67ce387.webp"></p></li><li><p>遊戲第一次啟動可能要花點時間建立環境（如果長時間卡在booting…就重新啟動APP），接著螢幕上就會出現虛擬手把。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a281b4fa83.webp">
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-08bdd3534a.webp"></p></li><li><p>關於遊戲效能的調整：點選Edit Container能夠調整要用的圖形驅動程式，高通推薦用Turnip，聯發科則是Vortex，都不行的話就選VirGL。但有些遊戲仍可能會黑螢幕。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-5f96ec7dab.webp"></p></li></ol><h2>3. ProtonTricks呢？<span><a href="#3-protontricks%E5%91%A2" aria-label="定位點">#</a></span></h2><p>目前遇到的問題是，需要額外用ProtonTricks補套件的遊戲無法執行，因為沒有工具能修改容器內的檔案。</p>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-be8118f8f3.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-be8118f8f3.webp" medium="image"/>
    <pubDate>Sat, 11 Oct 2025 13:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[postmarketOS安裝教學，使用pmbootstrap建立安裝檔]]></title>
    <link>https://ivonblog.com/posts/postmarketos-general-installation/</link>
    <itunes:title><![CDATA[postmarketOS安裝教學，使用pmbootstrap建立安裝檔]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/postmarketos-general-installation/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-08bd1794f3.webp"></a></p>
<p>什麼是postmarketOS？關於postmarketOS系統的介紹請看<a href="https://ivonblog.com/posts/postmarketos-introduction" target="_blank">這篇</a>。</p><p>這篇文章是用pmbootstrap安裝postmarketOS的教學，只要你的機型有在官方支援列表，都能夠按照此步驟操作，將postmarketOS安裝至裝置上。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fe79394a84.webp"><p>pmbootstrap是postmarketOS官方提供的工具，可以從無到有建立postmarketOS系統，套件內容可完全自訂，用於控制哪些套件需要安裝，打造自定義的系統。</p><p>除了建立安裝檔以外，pmbootstrap亦能進行新機移植工作。</p><p>本文Ivon示範手動在電腦上建立postmarketOS安裝檔再刷入手機。我的電腦是Ubuntu LTS，手機是小米Pocophone F1，安裝最新版原廠韌體，已解鎖Bootloader，安裝TWRP作為Recovery。</p><h2>1. 安裝pmbootstrap<span><a href="#1-%E5%AE%89%E8%A3%9Dpmbootstrap" aria-label="定位點">#</a></span></h2><p>參考<a href="https://wiki.postmarketos.org/wiki/Pmbootstrap" target="_blank">pmbootstrap - postmarketOS Wiki</a>指示</p><p>由於需要建立QEMU虛擬機，pmbootstrap僅支援x86_64架構的電腦。</p><p>第一種方法，推薦用Git與符號連結的方式安裝，能夠取得最新版pmbootstrap。</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span>cd</span> ~
</span></span><span><span>
</span></span><span><span>git clone https://gitlab.postmarketos.org/postmarketOS/pmbootstrap.git
</span></span><span><span>
</span></span><span><span>mkdir -p ~/.local/bin
</span></span><span><span>
</span></span><span><span>ln -s <span>"</span><span>$PWD</span><span>/pmbootstrap/pmbootstrap.py"</span> ~/.local/bin/pmbootstrap
</span></span><span><span>
</span></span><span><span><span>echo</span> <span>'PATH="$HOME/.local/bin:$PATH"'</span> &gt;&gt; ~/.bashrc
</span></span><span><span>
</span></span><span><span><span>source</span> ~/.bashrc
</span></span></code></pre></div><p>第二種裝法，用Linux套件管理員安裝pmbootstrap，僅適合滾動發行版，因為postmarketOS開發團隊會一直變更，所以pmbootstrap套件太舊的話容易出問題。</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span># Alpine Linux, postmarketOS</span>
</span></span><span><span>apk add pmbootstrap
</span></span><span><span>
</span></span><span><span><span># Arch Linux</span>
</span></span><span><span>pacman -S pmbootstrap
</span></span><span><span>
</span></span><span><span><span># Debian</span>
</span></span><span><span>apt install pmbootstrap
</span></span><span><span>
</span></span><span><span><span># Fedora</span>
</span></span><span><span>dnf install pmbootstrap
</span></span></code></pre></div><h2>2. 選擇機型並設定選項<span><a href="#2-%E9%81%B8%E6%93%87%E6%A9%9F%E5%9E%8B%E4%B8%A6%E8%A8%AD%E5%AE%9A%E9%81%B8%E9%A0%85" aria-label="定位點">#</a></span></h2><ol><li>執行pmbootstrap init指令</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap init
</span></span></code></pre></div><ol start="2"><li>並按照指示填入。在初始化時會從Gitlab上下載最新版的機型設定檔。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 按Enter使用預設工作目錄 (~/.local/var/pmbootstrap)</span>
</span></span><span><span>Work path: Enter
</span></span><span><span>
</span></span><span><span><span># 更新頻道選擇edge，或者填入寫有Recommended for best stability的穩定版數字。</span>
</span></span><span><span>Channel: edge
</span></span><span><span>
</span></span><span><span><span># 選擇手機廠牌</span>
</span></span><span><span>Vendor: xiaomi
</span></span><span><span>
</span></span><span><span><span># 選擇手機的裝置代號</span>
</span></span><span><span>Device codename: beryllium
</span></span><span><span>
</span></span><span><span><span># 建立postmarketOS的使用者帳戶</span>
</span></span><span><span>Username: User
</span></span><span><span>
</span></span><span><span><span># 選擇桌面環境，XFCE4(x11)適合沒有硬體加速的裝置；Phosh(Wayland，需要3D加速)適合當手機介面。在開機後可以再另外安裝其他桌面環境。</span>
</span></span><span><span>User Interface: phosh
</span></span><span><span>
</span></span><span><span><span># 是否使用Systemd作為init系統？推薦使用。舊版postmarketOS是使用OpenRC</span>
</span></span><span><span>Install systemd? <span>(</span>default/always/never<span>)</span> <span>[</span>default<span>]</span>: always
</span></span><span><span>
</span></span><span><span><span># 剩下全部Enter</span>
</span></span></code></pre></div><ol start="3"><li>這就是每次建立對應機型的安裝檔要先做的工作，你必須告訴pmbootstrap你的postmarketOS應該長什麼樣子，才能開始建立安裝檔案。</li></ol><h2>3. 選擇安裝postmarketOS到手機的方法<span><a href="#3-%E9%81%B8%E6%93%87%E5%AE%89%E8%A3%9Dpostmarketos%E5%88%B0%E6%89%8B%E6%A9%9F%E7%9A%84%E6%96%B9%E6%B3%95" aria-label="定位點">#</a></span></h2><p>如果是Android手機，請確保在刷機之前安裝原廠最新版韌體，並解鎖Bootloader。</p><p>這個步驟就要建立安裝檔案了，主要有3種安裝postmarketOS的方法：</p><ol><li>用fastboot刷入 (需清除資料，推薦)</li><li>安裝至SD卡 (不會影響到原有手機系統，不推薦)</li><li>用刷機包刷入 (需清除資料，太耗時不推薦)</li></ol><p>除此之外還有一些比較奇怪的安裝方法，列在後面。</p><h3>用fastboot刷入<span><a href="#%E7%94%A8fastboot%E5%88%B7%E5%85%A5" aria-label="定位點">#</a></span></h3><p>這個方法將清除手機所有的資料。</p><ol><li>建立安裝檔</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap install
</span></span></code></pre></div><p>2.手機進入fastboot模式，接到電腦刷入：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap flasher flash_rootfs
</span></span><span><span>
</span></span><span><span><span>#如果刷入的分區容量太小，加上--partition參數，改刷入到其他分區:</span>
</span></span><span><span>pmbootstrap flasher flash_rootfs --partition userdata
</span></span></code></pre></div><ol start="3"><li>再刷入kernel到boot分區，重開機：</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap flasher flash_kernel
</span></span><span><span>
</span></span><span><span>fastboot reboot
</span></span></code></pre></div><h3>安裝至SD卡<span><a href="#%E5%AE%89%E8%A3%9D%E8%87%B3sd%E5%8D%A1" aria-label="定位點">#</a></span></h3><p>這個方法不會修改手機的資料，可以做雙系統，但是開機需要靠電腦下指令才能進入postmarketOS。注意有些手機可能不支援從fastboot以<code>boot.img</code>開機。</p><ol><li>SD卡插到電腦，用指令<code>lsblk</code>確定SD卡的裝置代號，以及掛載點：</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sdb      8:16   <span>1</span>  29.7G  <span>0</span> disk /media/ivon/E8D8-4246
</span></span></code></pre></div><ol start="2"><li>先取消掛載</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>umount /media/ivon/E8D8-4246
</span></span></code></pre></div><ol start="3"><li>然後再開始安裝</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap install --sdcard<span>=</span>/dev/sdb
</span></span></code></pre></div><ol start="4"><li><p>pmbootstrap會自動格式化SD卡，並將系統安裝進去。過程中會要求建立使用者密碼，並會再確認是否要將SD卡格式化。</p></li><li><p>接著把SD卡裝到手機，讓手機進入fastboot模式，接到電腦，輸入指令開機:</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap flasher boot
</span></span></code></pre></div><h3>用刷機包安裝<span><a href="#%E7%94%A8%E5%88%B7%E6%A9%9F%E5%8C%85%E5%AE%89%E8%A3%9D" aria-label="定位點">#</a></span></h3><p>這個方法將清除手機所有的資料，可sideload或者傳輸刷機包到手機上再用TWRP安裝。不過建立刷機包很耗時。</p><ol><li>建立刷機包，大約5分鐘。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap install --android-recovery-zip
</span></span><span><span>
</span></span><span><span><span>#如果要安裝到其他較大的分區，可以加上--partition的選項</span>
</span></span><span><span>
</span></span><span><span>pmbootstrap install --android-recovery-zip --recovery-install-partition<span>=</span>data
</span></span></code></pre></div><ol start="2"><li><p>手機接上電腦，重開機進入TWRP。從電腦的工作目錄找到建立的pmos-*.zip刷機包，例如我的檔案是在<code>~/.local/var/pmbootstrap/chroot_buildroot_aarch64/var/lib/postmarketos-android-recovery-installer</code>。</p></li><li><p>將檔案傳到手機，用TWRP安裝，之後重新開機。</p></li><li><p>將電腦上的pmbootstrap關閉：</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap shutdown
</span></span></code></pre></div><h3>其他刷入方法<span><a href="#%E5%85%B6%E4%BB%96%E5%88%B7%E5%85%A5%E6%96%B9%E6%B3%95" aria-label="定位點">#</a></span></h3><ul><li><a href="https://ivonblog.com/posts/postmarketos-netboot/" target="_blank">Netboot</a>：用postmarketOS的boot.img暫時開機後，掛載電腦上的檔案系統，不用清除手機資料。</li><li><a href="https://gitlab.com/postmarketOS/pmbootstrap/-/issues/456" target="_blank">用Netcat開機</a></li><li><a href="https://gitlab.com/postmarketOS/pmbootstrap/-/merge_requests/547" target="_blank">用NFS開機</a></li></ul><h2>4. postmarketOS後續安裝優化<span><a href="#4-postmarketos%E5%BE%8C%E7%BA%8C%E5%AE%89%E8%A3%9D%E5%84%AA%E5%8C%96" aria-label="定位點">#</a></span></h2><p>就算開機無法進入桌面，手機用USB線連著電腦的情況下，也能用SSH連線到手機：</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span>#這個IP是固定的，只需將「@」前面改成你的使用者帳號</span>
</span></span><span><span>ssh user@172.16.42.1
</span></span></code></pre></div><p>假設你的裝置順利進入postmarketOS桌面環境，並且GPU加速、觸控、網路、音效都正常的話，接下來請參考這篇：<a href="https://ivonblog.com/posts/postmarketos-tips/" target="_blank">postmarketOS使用技巧</a>了解postmarketOS的設定眉角，以及如何將postmarketOS當作手機系統用。</p>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/postmarketos-general-installation/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-08bd1794f3.webp"></a></p>
<p>什麼是postmarketOS？關於postmarketOS系統的介紹請看<a href="https://ivonblog.com/posts/postmarketos-introduction" target="_blank">這篇</a>。</p><p>這篇文章是用pmbootstrap安裝postmarketOS的教學，只要你的機型有在官方支援列表，都能夠按照此步驟操作，將postmarketOS安裝至裝置上。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fe79394a84.webp"><p>pmbootstrap是postmarketOS官方提供的工具，可以從無到有建立postmarketOS系統，套件內容可完全自訂，用於控制哪些套件需要安裝，打造自定義的系統。</p><p>除了建立安裝檔以外，pmbootstrap亦能進行新機移植工作。</p><p>本文Ivon示範手動在電腦上建立postmarketOS安裝檔再刷入手機。我的電腦是Ubuntu LTS，手機是小米Pocophone F1，安裝最新版原廠韌體，已解鎖Bootloader，安裝TWRP作為Recovery。</p><h2>1. 安裝pmbootstrap<span><a href="#1-%E5%AE%89%E8%A3%9Dpmbootstrap" aria-label="定位點">#</a></span></h2><p>參考<a href="https://wiki.postmarketos.org/wiki/Pmbootstrap" target="_blank">pmbootstrap - postmarketOS Wiki</a>指示</p><p>由於需要建立QEMU虛擬機，pmbootstrap僅支援x86_64架構的電腦。</p><p>第一種方法，推薦用Git與符號連結的方式安裝，能夠取得最新版pmbootstrap。</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span>cd</span> ~
</span></span><span><span>
</span></span><span><span>git clone https://gitlab.postmarketos.org/postmarketOS/pmbootstrap.git
</span></span><span><span>
</span></span><span><span>mkdir -p ~/.local/bin
</span></span><span><span>
</span></span><span><span>ln -s <span>"</span><span>$PWD</span><span>/pmbootstrap/pmbootstrap.py"</span> ~/.local/bin/pmbootstrap
</span></span><span><span>
</span></span><span><span><span>echo</span> <span>'PATH="$HOME/.local/bin:$PATH"'</span> &gt;&gt; ~/.bashrc
</span></span><span><span>
</span></span><span><span><span>source</span> ~/.bashrc
</span></span></code></pre></div><p>第二種裝法，用Linux套件管理員安裝pmbootstrap，僅適合滾動發行版，因為postmarketOS開發團隊會一直變更，所以pmbootstrap套件太舊的話容易出問題。</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span># Alpine Linux, postmarketOS</span>
</span></span><span><span>apk add pmbootstrap
</span></span><span><span>
</span></span><span><span><span># Arch Linux</span>
</span></span><span><span>pacman -S pmbootstrap
</span></span><span><span>
</span></span><span><span><span># Debian</span>
</span></span><span><span>apt install pmbootstrap
</span></span><span><span>
</span></span><span><span><span># Fedora</span>
</span></span><span><span>dnf install pmbootstrap
</span></span></code></pre></div><h2>2. 選擇機型並設定選項<span><a href="#2-%E9%81%B8%E6%93%87%E6%A9%9F%E5%9E%8B%E4%B8%A6%E8%A8%AD%E5%AE%9A%E9%81%B8%E9%A0%85" aria-label="定位點">#</a></span></h2><ol><li>執行pmbootstrap init指令</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap init
</span></span></code></pre></div><ol start="2"><li>並按照指示填入。在初始化時會從Gitlab上下載最新版的機型設定檔。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 按Enter使用預設工作目錄 (~/.local/var/pmbootstrap)</span>
</span></span><span><span>Work path: Enter
</span></span><span><span>
</span></span><span><span><span># 更新頻道選擇edge，或者填入寫有Recommended for best stability的穩定版數字。</span>
</span></span><span><span>Channel: edge
</span></span><span><span>
</span></span><span><span><span># 選擇手機廠牌</span>
</span></span><span><span>Vendor: xiaomi
</span></span><span><span>
</span></span><span><span><span># 選擇手機的裝置代號</span>
</span></span><span><span>Device codename: beryllium
</span></span><span><span>
</span></span><span><span><span># 建立postmarketOS的使用者帳戶</span>
</span></span><span><span>Username: User
</span></span><span><span>
</span></span><span><span><span># 選擇桌面環境，XFCE4(x11)適合沒有硬體加速的裝置；Phosh(Wayland，需要3D加速)適合當手機介面。在開機後可以再另外安裝其他桌面環境。</span>
</span></span><span><span>User Interface: phosh
</span></span><span><span>
</span></span><span><span><span># 是否使用Systemd作為init系統？推薦使用。舊版postmarketOS是使用OpenRC</span>
</span></span><span><span>Install systemd? <span>(</span>default/always/never<span>)</span> <span>[</span>default<span>]</span>: always
</span></span><span><span>
</span></span><span><span><span># 剩下全部Enter</span>
</span></span></code></pre></div><ol start="3"><li>這就是每次建立對應機型的安裝檔要先做的工作，你必須告訴pmbootstrap你的postmarketOS應該長什麼樣子，才能開始建立安裝檔案。</li></ol><h2>3. 選擇安裝postmarketOS到手機的方法<span><a href="#3-%E9%81%B8%E6%93%87%E5%AE%89%E8%A3%9Dpostmarketos%E5%88%B0%E6%89%8B%E6%A9%9F%E7%9A%84%E6%96%B9%E6%B3%95" aria-label="定位點">#</a></span></h2><p>如果是Android手機，請確保在刷機之前安裝原廠最新版韌體，並解鎖Bootloader。</p><p>這個步驟就要建立安裝檔案了，主要有3種安裝postmarketOS的方法：</p><ol><li>用fastboot刷入 (需清除資料，推薦)</li><li>安裝至SD卡 (不會影響到原有手機系統，不推薦)</li><li>用刷機包刷入 (需清除資料，太耗時不推薦)</li></ol><p>除此之外還有一些比較奇怪的安裝方法，列在後面。</p><h3>用fastboot刷入<span><a href="#%E7%94%A8fastboot%E5%88%B7%E5%85%A5" aria-label="定位點">#</a></span></h3><p>這個方法將清除手機所有的資料。</p><ol><li>建立安裝檔</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap install
</span></span></code></pre></div><p>2.手機進入fastboot模式，接到電腦刷入：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap flasher flash_rootfs
</span></span><span><span>
</span></span><span><span><span>#如果刷入的分區容量太小，加上--partition參數，改刷入到其他分區:</span>
</span></span><span><span>pmbootstrap flasher flash_rootfs --partition userdata
</span></span></code></pre></div><ol start="3"><li>再刷入kernel到boot分區，重開機：</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap flasher flash_kernel
</span></span><span><span>
</span></span><span><span>fastboot reboot
</span></span></code></pre></div><h3>安裝至SD卡<span><a href="#%E5%AE%89%E8%A3%9D%E8%87%B3sd%E5%8D%A1" aria-label="定位點">#</a></span></h3><p>這個方法不會修改手機的資料，可以做雙系統，但是開機需要靠電腦下指令才能進入postmarketOS。注意有些手機可能不支援從fastboot以<code>boot.img</code>開機。</p><ol><li>SD卡插到電腦，用指令<code>lsblk</code>確定SD卡的裝置代號，以及掛載點：</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sdb      8:16   <span>1</span>  29.7G  <span>0</span> disk /media/ivon/E8D8-4246
</span></span></code></pre></div><ol start="2"><li>先取消掛載</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>umount /media/ivon/E8D8-4246
</span></span></code></pre></div><ol start="3"><li>然後再開始安裝</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap install --sdcard<span>=</span>/dev/sdb
</span></span></code></pre></div><ol start="4"><li><p>pmbootstrap會自動格式化SD卡，並將系統安裝進去。過程中會要求建立使用者密碼，並會再確認是否要將SD卡格式化。</p></li><li><p>接著把SD卡裝到手機，讓手機進入fastboot模式，接到電腦，輸入指令開機:</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap flasher boot
</span></span></code></pre></div><h3>用刷機包安裝<span><a href="#%E7%94%A8%E5%88%B7%E6%A9%9F%E5%8C%85%E5%AE%89%E8%A3%9D" aria-label="定位點">#</a></span></h3><p>這個方法將清除手機所有的資料，可sideload或者傳輸刷機包到手機上再用TWRP安裝。不過建立刷機包很耗時。</p><ol><li>建立刷機包，大約5分鐘。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap install --android-recovery-zip
</span></span><span><span>
</span></span><span><span><span>#如果要安裝到其他較大的分區，可以加上--partition的選項</span>
</span></span><span><span>
</span></span><span><span>pmbootstrap install --android-recovery-zip --recovery-install-partition<span>=</span>data
</span></span></code></pre></div><ol start="2"><li><p>手機接上電腦，重開機進入TWRP。從電腦的工作目錄找到建立的pmos-*.zip刷機包，例如我的檔案是在<code>~/.local/var/pmbootstrap/chroot_buildroot_aarch64/var/lib/postmarketos-android-recovery-installer</code>。</p></li><li><p>將檔案傳到手機，用TWRP安裝，之後重新開機。</p></li><li><p>將電腦上的pmbootstrap關閉：</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap shutdown
</span></span></code></pre></div><h3>其他刷入方法<span><a href="#%E5%85%B6%E4%BB%96%E5%88%B7%E5%85%A5%E6%96%B9%E6%B3%95" aria-label="定位點">#</a></span></h3><ul><li><a href="https://ivonblog.com/posts/postmarketos-netboot/" target="_blank">Netboot</a>：用postmarketOS的boot.img暫時開機後，掛載電腦上的檔案系統，不用清除手機資料。</li><li><a href="https://gitlab.com/postmarketOS/pmbootstrap/-/issues/456" target="_blank">用Netcat開機</a></li><li><a href="https://gitlab.com/postmarketOS/pmbootstrap/-/merge_requests/547" target="_blank">用NFS開機</a></li></ul><h2>4. postmarketOS後續安裝優化<span><a href="#4-postmarketos%E5%BE%8C%E7%BA%8C%E5%AE%89%E8%A3%9D%E5%84%AA%E5%8C%96" aria-label="定位點">#</a></span></h2><p>就算開機無法進入桌面，手機用USB線連著電腦的情況下，也能用SSH連線到手機：</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span>#這個IP是固定的，只需將「@」前面改成你的使用者帳號</span>
</span></span><span><span>ssh user@172.16.42.1
</span></span></code></pre></div><p>假設你的裝置順利進入postmarketOS桌面環境，並且GPU加速、觸控、網路、音效都正常的話，接下來請參考這篇：<a href="https://ivonblog.com/posts/postmarketos-tips/" target="_blank">postmarketOS使用技巧</a>了解postmarketOS的設定眉角，以及如何將postmarketOS當作手機系統用。</p>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/postmarketos-general-installation/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-08bd1794f3.webp"></a></p>
<p>什麼是postmarketOS？關於postmarketOS系統的介紹請看<a href="https://ivonblog.com/posts/postmarketos-introduction" target="_blank">這篇</a>。</p><p>這篇文章是用pmbootstrap安裝postmarketOS的教學，只要你的機型有在官方支援列表，都能夠按照此步驟操作，將postmarketOS安裝至裝置上。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fe79394a84.webp"><p>pmbootstrap是postmarketOS官方提供的工具，可以從無到有建立postmarketOS系統，套件內容可完全自訂，用於控制哪些套件需要安裝，打造自定義的系統。</p><p>除了建立安裝檔以外，pmbootstrap亦能進行新機移植工作。</p><p>本文Ivon示範手動在電腦上建立postmarketOS安裝檔再刷入手機。我的電腦是Ubuntu LTS，手機是小米Pocophone F1，安裝最新版原廠韌體，已解鎖Bootloader，安裝TWRP作為Recovery。</p><h2>1. 安裝pmbootstrap<span><a href="#1-%E5%AE%89%E8%A3%9Dpmbootstrap" aria-label="定位點">#</a></span></h2><p>參考<a href="https://wiki.postmarketos.org/wiki/Pmbootstrap" target="_blank">pmbootstrap - postmarketOS Wiki</a>指示</p><p>由於需要建立QEMU虛擬機，pmbootstrap僅支援x86_64架構的電腦。</p><p>第一種方法，推薦用Git與符號連結的方式安裝，能夠取得最新版pmbootstrap。</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span>cd</span> ~
</span></span><span><span>
</span></span><span><span>git clone https://gitlab.postmarketos.org/postmarketOS/pmbootstrap.git
</span></span><span><span>
</span></span><span><span>mkdir -p ~/.local/bin
</span></span><span><span>
</span></span><span><span>ln -s <span>"</span><span>$PWD</span><span>/pmbootstrap/pmbootstrap.py"</span> ~/.local/bin/pmbootstrap
</span></span><span><span>
</span></span><span><span><span>echo</span> <span>'PATH="$HOME/.local/bin:$PATH"'</span> &gt;&gt; ~/.bashrc
</span></span><span><span>
</span></span><span><span><span>source</span> ~/.bashrc
</span></span></code></pre></div><p>第二種裝法，用Linux套件管理員安裝pmbootstrap，僅適合滾動發行版，因為postmarketOS開發團隊會一直變更，所以pmbootstrap套件太舊的話容易出問題。</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span># Alpine Linux, postmarketOS</span>
</span></span><span><span>apk add pmbootstrap
</span></span><span><span>
</span></span><span><span><span># Arch Linux</span>
</span></span><span><span>pacman -S pmbootstrap
</span></span><span><span>
</span></span><span><span><span># Debian</span>
</span></span><span><span>apt install pmbootstrap
</span></span><span><span>
</span></span><span><span><span># Fedora</span>
</span></span><span><span>dnf install pmbootstrap
</span></span></code></pre></div><h2>2. 選擇機型並設定選項<span><a href="#2-%E9%81%B8%E6%93%87%E6%A9%9F%E5%9E%8B%E4%B8%A6%E8%A8%AD%E5%AE%9A%E9%81%B8%E9%A0%85" aria-label="定位點">#</a></span></h2><ol><li>執行pmbootstrap init指令</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap init
</span></span></code></pre></div><ol start="2"><li>並按照指示填入。在初始化時會從Gitlab上下載最新版的機型設定檔。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 按Enter使用預設工作目錄 (~/.local/var/pmbootstrap)</span>
</span></span><span><span>Work path: Enter
</span></span><span><span>
</span></span><span><span><span># 更新頻道選擇edge，或者填入寫有Recommended for best stability的穩定版數字。</span>
</span></span><span><span>Channel: edge
</span></span><span><span>
</span></span><span><span><span># 選擇手機廠牌</span>
</span></span><span><span>Vendor: xiaomi
</span></span><span><span>
</span></span><span><span><span># 選擇手機的裝置代號</span>
</span></span><span><span>Device codename: beryllium
</span></span><span><span>
</span></span><span><span><span># 建立postmarketOS的使用者帳戶</span>
</span></span><span><span>Username: User
</span></span><span><span>
</span></span><span><span><span># 選擇桌面環境，XFCE4(x11)適合沒有硬體加速的裝置；Phosh(Wayland，需要3D加速)適合當手機介面。在開機後可以再另外安裝其他桌面環境。</span>
</span></span><span><span>User Interface: phosh
</span></span><span><span>
</span></span><span><span><span># 是否使用Systemd作為init系統？推薦使用。舊版postmarketOS是使用OpenRC</span>
</span></span><span><span>Install systemd? <span>(</span>default/always/never<span>)</span> <span>[</span>default<span>]</span>: always
</span></span><span><span>
</span></span><span><span><span># 剩下全部Enter</span>
</span></span></code></pre></div><ol start="3"><li>這就是每次建立對應機型的安裝檔要先做的工作，你必須告訴pmbootstrap你的postmarketOS應該長什麼樣子，才能開始建立安裝檔案。</li></ol><h2>3. 選擇安裝postmarketOS到手機的方法<span><a href="#3-%E9%81%B8%E6%93%87%E5%AE%89%E8%A3%9Dpostmarketos%E5%88%B0%E6%89%8B%E6%A9%9F%E7%9A%84%E6%96%B9%E6%B3%95" aria-label="定位點">#</a></span></h2><p>如果是Android手機，請確保在刷機之前安裝原廠最新版韌體，並解鎖Bootloader。</p><p>這個步驟就要建立安裝檔案了，主要有3種安裝postmarketOS的方法：</p><ol><li>用fastboot刷入 (需清除資料，推薦)</li><li>安裝至SD卡 (不會影響到原有手機系統，不推薦)</li><li>用刷機包刷入 (需清除資料，太耗時不推薦)</li></ol><p>除此之外還有一些比較奇怪的安裝方法，列在後面。</p><h3>用fastboot刷入<span><a href="#%E7%94%A8fastboot%E5%88%B7%E5%85%A5" aria-label="定位點">#</a></span></h3><p>這個方法將清除手機所有的資料。</p><ol><li>建立安裝檔</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap install
</span></span></code></pre></div><p>2.手機進入fastboot模式，接到電腦刷入：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap flasher flash_rootfs
</span></span><span><span>
</span></span><span><span><span>#如果刷入的分區容量太小，加上--partition參數，改刷入到其他分區:</span>
</span></span><span><span>pmbootstrap flasher flash_rootfs --partition userdata
</span></span></code></pre></div><ol start="3"><li>再刷入kernel到boot分區，重開機：</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap flasher flash_kernel
</span></span><span><span>
</span></span><span><span>fastboot reboot
</span></span></code></pre></div><h3>安裝至SD卡<span><a href="#%E5%AE%89%E8%A3%9D%E8%87%B3sd%E5%8D%A1" aria-label="定位點">#</a></span></h3><p>這個方法不會修改手機的資料，可以做雙系統，但是開機需要靠電腦下指令才能進入postmarketOS。注意有些手機可能不支援從fastboot以<code>boot.img</code>開機。</p><ol><li>SD卡插到電腦，用指令<code>lsblk</code>確定SD卡的裝置代號，以及掛載點：</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sdb      8:16   <span>1</span>  29.7G  <span>0</span> disk /media/ivon/E8D8-4246
</span></span></code></pre></div><ol start="2"><li>先取消掛載</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>umount /media/ivon/E8D8-4246
</span></span></code></pre></div><ol start="3"><li>然後再開始安裝</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap install --sdcard<span>=</span>/dev/sdb
</span></span></code></pre></div><ol start="4"><li><p>pmbootstrap會自動格式化SD卡，並將系統安裝進去。過程中會要求建立使用者密碼，並會再確認是否要將SD卡格式化。</p></li><li><p>接著把SD卡裝到手機，讓手機進入fastboot模式，接到電腦，輸入指令開機:</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap flasher boot
</span></span></code></pre></div><h3>用刷機包安裝<span><a href="#%E7%94%A8%E5%88%B7%E6%A9%9F%E5%8C%85%E5%AE%89%E8%A3%9D" aria-label="定位點">#</a></span></h3><p>這個方法將清除手機所有的資料，可sideload或者傳輸刷機包到手機上再用TWRP安裝。不過建立刷機包很耗時。</p><ol><li>建立刷機包，大約5分鐘。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap install --android-recovery-zip
</span></span><span><span>
</span></span><span><span><span>#如果要安裝到其他較大的分區，可以加上--partition的選項</span>
</span></span><span><span>
</span></span><span><span>pmbootstrap install --android-recovery-zip --recovery-install-partition<span>=</span>data
</span></span></code></pre></div><ol start="2"><li><p>手機接上電腦，重開機進入TWRP。從電腦的工作目錄找到建立的pmos-*.zip刷機包，例如我的檔案是在<code>~/.local/var/pmbootstrap/chroot_buildroot_aarch64/var/lib/postmarketos-android-recovery-installer</code>。</p></li><li><p>將檔案傳到手機，用TWRP安裝，之後重新開機。</p></li><li><p>將電腦上的pmbootstrap關閉：</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pmbootstrap shutdown
</span></span></code></pre></div><h3>其他刷入方法<span><a href="#%E5%85%B6%E4%BB%96%E5%88%B7%E5%85%A5%E6%96%B9%E6%B3%95" aria-label="定位點">#</a></span></h3><ul><li><a href="https://ivonblog.com/posts/postmarketos-netboot/" target="_blank">Netboot</a>：用postmarketOS的boot.img暫時開機後，掛載電腦上的檔案系統，不用清除手機資料。</li><li><a href="https://gitlab.com/postmarketOS/pmbootstrap/-/issues/456" target="_blank">用Netcat開機</a></li><li><a href="https://gitlab.com/postmarketOS/pmbootstrap/-/merge_requests/547" target="_blank">用NFS開機</a></li></ul><h2>4. postmarketOS後續安裝優化<span><a href="#4-postmarketos%E5%BE%8C%E7%BA%8C%E5%AE%89%E8%A3%9D%E5%84%AA%E5%8C%96" aria-label="定位點">#</a></span></h2><p>就算開機無法進入桌面，手機用USB線連著電腦的情況下，也能用SSH連線到手機：</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span>#這個IP是固定的，只需將「@」前面改成你的使用者帳號</span>
</span></span><span><span>ssh user@172.16.42.1
</span></span></code></pre></div><p>假設你的裝置順利進入postmarketOS桌面環境，並且GPU加速、觸控、網路、音效都正常的話，接下來請參考這篇：<a href="https://ivonblog.com/posts/postmarketos-tips/" target="_blank">postmarketOS使用技巧</a>了解postmarketOS的設定眉角，以及如何將postmarketOS當作手機系統用。</p>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-08bd1794f3.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-08bd1794f3.webp" medium="image"/>
    <pubDate>Fri, 10 Oct 2025 23:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[Lutris使用教學，安裝與管理Linux的遊戲收藏]]></title>
    <link>https://ivonblog.com/posts/lutris-game-manager/</link>
    <itunes:title><![CDATA[Lutris使用教學，安裝與管理Linux的遊戲收藏]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/lutris-game-manager/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4ac0e26998.webp"></a></p>
<p>你是否覺得Linux電腦上的遊戲多到無法管理？</p><p>比如從Steam安裝的、依賴特定啟動器才能開的遊戲、遊戲主機模擬器的遊戲，還有硬碟裡數不清的免安裝版Windows遊戲exe檔…</p><p>不喜歡在電腦桌面新增一堆有的沒有的捷徑嗎？你需要一款遊戲收藏管理器！這個時候你可能會想到Steam，儘管Steam能夠啟動許多遊戲，但是它的UI仍不方便管理收藏，且目前Linux的Steam客戶端也不是很順暢，不是好的遊戲收藏管理器。</p><p>Lutris，這款開源軟體能夠擔當管理遊戲收藏的任務，它的圖示是一隻海獺。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3fb70dbc4b.webp"><p>Lutris有幾個主要功能：</p><p>第一，Lutris可作為Wine（Windows exe轉譯器）的前端，透過社群維護的指令稿，一鍵設定好Wine環境，安裝許多Windows exe遊戲。（相關文章：<a href="/posts/linux-wine-introduction">Linux Wine指令使用教學</a>）</p><p>第二，Lutris具備管理遊戲功能，內部界面整合了Steam、Ubisoft Connect、EA app、Epic Games Launcher、GOG、itch.io的啟動捷徑。此外，Lutris支援模擬遊戲主機，例如搭配PPSSPP、Yuzu、xemu模擬器，遊玩Playstation、Nintendo、Xbox平台的遊戲，替代一部份<a href="https://ivonblog.com/posts/retroarch-linux" target="_blank">RetroArch模擬器</a>的功能。</p><p>第三，自動紀錄遊玩時長，跟Steam的「遊戲時數」類似。Steam無法追蹤沒有在Steam商店上架的遊戲，而Lutris是任意遊戲都可以。並且Lutris有自己的線上遊戲資料庫系統，不依賴Steam。</p><hr><p>Lutris的作者Mathieu Comandon最初開發本軟體的目的是為了更好地管理Linux上的遊戲收藏。</p><p>Lutris與同類產品<a href="https://ivonblog.com/posts/setup-linux-bottles" target="_blank">Bottles</a>、<a href="https://ivonblog.com/posts/install-steam-on-linux" target="_blank">Steam</a>不同的點在於，Lutris旨在讓玩家方便管理Linux電腦的遊戲，讓它不單單只是遊戲啟動器，而是成為「遊戲收藏平台」。</p><p>不論你的遊戲是Windows遊戲、Linux原生，還是模擬器，你都可以把它加入到Lutris的啟動界面，統一管理。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bc025ebfa5.webp"><h2>1. 安裝Lutris<span><a href="#1-%E5%AE%89%E8%A3%9Dlutris" aria-label="定位點">#</a></span></h2><p><a href="https://lutris.net/downloads" target="_blank">Lutris的官網</a>有提供Ubuntu、Fedora、Arch Linux的套件。</p><p>例如Ubuntu就是先<a href="https://ivonblog.com/posts/linux-wine-introduction/" target="_blank">安裝原生的Wine</a>。再下載Lutris的.deb檔安裝：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt install ./lutris*.deb
</span></span></code></pre></div><hr><p>或者，考慮使用Flatpak版本，它內建Wine，這個Steam Deck也能裝。</p><p>請先裝<a href="https://ivonblog.com/posts/linux-flatpak-introduction/" target="_blank">Flatpak</a>，再裝Lutris</p><div><pre tabindex="0"><code data-lang="bash"><span><span>flatpak --user install flathub net.lutris.Lutris
</span></span></code></pre></div><p>用Flatpak安裝的話，把你裝有遊戲的目錄預先開放給Lutris存取，例如下面我開放的是Steam遊戲收藏庫的所在目錄</p><div><pre tabindex="0"><code data-lang="bash"><span><span>flatpak --user override --user --filesystem<span>=</span>~/.steam/steam/
</span></span></code></pre></div><h2>2. 透過Lutris安裝遊戲<span><a href="#2-%E9%80%8F%E9%81%8Elutris%E5%AE%89%E8%A3%9D%E9%81%8A%E6%88%B2" aria-label="定位點">#</a></span></h2><p>你可以自行安裝遊戲，再將其匯入到Lutris收藏庫（後述）</p><p>Lutris主要是透過網友撰寫的指令稿來安裝遊戲（不含破解，付費遊戲你要持有副本）。</p><p>點選Lutris主界面左上角＋號 → 在Lutris網站上搜索遊戲，從<a href="https://lutris.net/games" target="_blank">Lutris.net</a>下載網友製作的指令稿，自動安裝遊戲。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f71ef62018.webp"><p>不論該遊戲是Windows還是PSP的遊戲，指令稿應該都會幫你裝好Wine之類的執行環境，基本上不需要手動介入。</p><p>Lutris安裝的遊戲預設目錄為<code>~/Games</code></p><p>遊戲加入Lutris選單後，按右鍵，點選配置，可設定縮圖。按箭頭符號讓Lutris嘗試從資料庫下載縮圖。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-5e3d80d45a.webp"><h2>3. 將Steam的遊戲匯入Lutris<span><a href="#3-%E5%B0%87steam%E7%9A%84%E9%81%8A%E6%88%B2%E5%8C%AF%E5%85%A5lutris" aria-label="定位點">#</a></span></h2><p>Lutris可以啟動Steam安裝的遊戲，但啟動的過程還是得經過Steam客戶端執行。</p><ol><li><p>安裝<a href="https://ivonblog.com/posts/install-steam-on-linux" target="_blank">Linux版Steam客戶端</a></p></li><li><p>再<a href="https://help.steampowered.com/zh-tw/faqs/view/588C-C67D-0251-C276" target="_blank">將自己的Steam遊戲收藏庫設定為公開</a>，Lutris才能讀取</p></li><li><p>如果Steam和Lutris都是使用Flatpak安裝的，需要執行以下步驟Lutris才抓得到遊戲。將.steam目錄，連結到Flatpak的Steam目錄</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>flatpak --user override --filesystem<span>=</span>~/.var/app/com.valvesoftware.Steam:ro net.lutris.Lutris
</span></span><span><span>
</span></span><span><span>flatpak --user override --filesystem<span>=</span>~/.steam/steam/  net.lutris.Lutris
</span></span><span><span>
</span></span><span><span>ln -s ~/.var/app/com.valvesoftware.Steam/.steam .steam
</span></span></code></pre></div><ol start="4"><li>這樣Lutris左邊的Steam選單應該就會列出Steam遊戲了<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-002375cc72.webp"></li></ol><h2>4. 手動將遊戲匯入Lutris<span><a href="#4-%E6%89%8B%E5%8B%95%E5%B0%87%E9%81%8A%E6%88%B2%E5%8C%AF%E5%85%A5lutris" aria-label="定位點">#</a></span></h2><p>單獨的exe、Flatpak遊戲、二進位檔、非經過Lutris安裝的遊戲，都得手動加入到Lutris收藏庫。</p><h3>Flatpak遊戲<span><a href="#flatpak%E9%81%8A%E6%88%B2" aria-label="定位點">#</a></span></h3><ol><li><p>例如我這裡有用Flatpak安裝的Luanti，點選＋號 → 手動配置遊戲環境，設定啟動指令。像這裡因為是Flatpak，所以運行環境勾選Flatpak</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fa0d03c5c1.webp"></li><li><p>遊戲選項的應用ID輸入<code>org.luanti.luanti</code>，如此一來便完成設定。</p></li></ol><h3>單獨的Windows exe<span><a href="#%E5%96%AE%E7%8D%A8%E7%9A%84windows-exe" aria-label="定位點">#</a></span></h3><p>鑑於Windows程式很多都需要跑Winetricks額外裝Windows的套件，我不是很建議手動加入EXE。建議先試試用Lutris指令稿或者Steam安裝，沒有的話再手動裝。</p><ol><li><p>點選＋號 → 手動配置遊戲環境，運行環境選Wine。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6b6a5e2bed.webp"></li><li><p>遊戲選項填入EXE所在目錄，以及容器目錄（WINEPREFIX，即Wine的模擬C槽所在路徑）</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9fe50a0600.webp"></li><li><p>運行環境選擇Wine版本。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4a993521f2.webp"></li><li><p>若有特殊需求，你可以在Lutris首頁右上角按Preferences → 執行環境，手動下載其他版本的Wine。</p></li></ol><h3>加入遊戲主機ROM<span><a href="#%E5%8A%A0%E5%85%A5%E9%81%8A%E6%88%B2%E4%B8%BB%E6%A9%9From" aria-label="定位點">#</a></span></h3><p>以PPSSPP為例子，你必須先安裝PPSSSPP主程式，才可以從Lutris側邊欄新增PSP遊戲。（若PPSSPP以Flatpak格式安裝，也得以上述的Flatpak方法手動新增至Lutris）</p><p>新增遊戲執行環境選取PPSSPP，再填入ROM路徑即可。其他模擬器所需的執行環境，可在Lutris首頁右上角按Preferences → 執行環境，手動下載。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-66705de730.webp"><h2>5. 透過Lutris帳號同步遊戲收藏庫<span><a href="#5-%E9%80%8F%E9%81%8Elutris%E5%B8%B3%E8%99%9F%E5%90%8C%E6%AD%A5%E9%81%8A%E6%88%B2%E6%94%B6%E8%97%8F%E5%BA%AB" aria-label="定位點">#</a></span></h2><p>類似Steam遊戲收藏庫的功能，不同的是，Lutris官網收錄了更多沒在Steam上架的遊戲。</p><p>同步收藏庫的同時也會同步遊玩時長。</p><ol><li><p>到<a href="https://lutris.net/user/register" target="_blank">Lutris官網</a>註冊一個帳號</p></li><li><p>點右上角 → Preferences → Accounts，點Login登入Lutris帳號，再點選Sync。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-cd45c6c281.webp"></li><li><p>在同步遊戲資料庫之前，檢查一下本機的遊戲是否有被Lutris線上資料庫辨識到，若遊戲無法辨識就會顯示空白縮圖。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-84b472c9f4.webp"></li><li><p>這時你要對其按右鍵 → Configure，點選修改Identifier，Lutris線上資料庫無法辨識的遊戲會改以一組UUID替代。嘗試輸入Lutris官網的網址（例如<code>https://lutris.net/games/ace-combattm-7-skies-unknown/</code>就輸入<code>ace-combattm-7-skies-unknown</code>），這樣它就會應該抓到縮圖了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-1295f89ce8.webp"></li></ol>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/lutris-game-manager/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4ac0e26998.webp"></a></p>
<p>你是否覺得Linux電腦上的遊戲多到無法管理？</p><p>比如從Steam安裝的、依賴特定啟動器才能開的遊戲、遊戲主機模擬器的遊戲，還有硬碟裡數不清的免安裝版Windows遊戲exe檔…</p><p>不喜歡在電腦桌面新增一堆有的沒有的捷徑嗎？你需要一款遊戲收藏管理器！這個時候你可能會想到Steam，儘管Steam能夠啟動許多遊戲，但是它的UI仍不方便管理收藏，且目前Linux的Steam客戶端也不是很順暢，不是好的遊戲收藏管理器。</p><p>Lutris，這款開源軟體能夠擔當管理遊戲收藏的任務，它的圖示是一隻海獺。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3fb70dbc4b.webp"><p>Lutris有幾個主要功能：</p><p>第一，Lutris可作為Wine（Windows exe轉譯器）的前端，透過社群維護的指令稿，一鍵設定好Wine環境，安裝許多Windows exe遊戲。（相關文章：<a href="/posts/linux-wine-introduction">Linux Wine指令使用教學</a>）</p><p>第二，Lutris具備管理遊戲功能，內部界面整合了Steam、Ubisoft Connect、EA app、Epic Games Launcher、GOG、itch.io的啟動捷徑。此外，Lutris支援模擬遊戲主機，例如搭配PPSSPP、Yuzu、xemu模擬器，遊玩Playstation、Nintendo、Xbox平台的遊戲，替代一部份<a href="https://ivonblog.com/posts/retroarch-linux" target="_blank">RetroArch模擬器</a>的功能。</p><p>第三，自動紀錄遊玩時長，跟Steam的「遊戲時數」類似。Steam無法追蹤沒有在Steam商店上架的遊戲，而Lutris是任意遊戲都可以。並且Lutris有自己的線上遊戲資料庫系統，不依賴Steam。</p><hr><p>Lutris的作者Mathieu Comandon最初開發本軟體的目的是為了更好地管理Linux上的遊戲收藏。</p><p>Lutris與同類產品<a href="https://ivonblog.com/posts/setup-linux-bottles" target="_blank">Bottles</a>、<a href="https://ivonblog.com/posts/install-steam-on-linux" target="_blank">Steam</a>不同的點在於，Lutris旨在讓玩家方便管理Linux電腦的遊戲，讓它不單單只是遊戲啟動器，而是成為「遊戲收藏平台」。</p><p>不論你的遊戲是Windows遊戲、Linux原生，還是模擬器，你都可以把它加入到Lutris的啟動界面，統一管理。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bc025ebfa5.webp"><h2>1. 安裝Lutris<span><a href="#1-%E5%AE%89%E8%A3%9Dlutris" aria-label="定位點">#</a></span></h2><p><a href="https://lutris.net/downloads" target="_blank">Lutris的官網</a>有提供Ubuntu、Fedora、Arch Linux的套件。</p><p>例如Ubuntu就是先<a href="https://ivonblog.com/posts/linux-wine-introduction/" target="_blank">安裝原生的Wine</a>。再下載Lutris的.deb檔安裝：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt install ./lutris*.deb
</span></span></code></pre></div><hr><p>或者，考慮使用Flatpak版本，它內建Wine，這個Steam Deck也能裝。</p><p>請先裝<a href="https://ivonblog.com/posts/linux-flatpak-introduction/" target="_blank">Flatpak</a>，再裝Lutris</p><div><pre tabindex="0"><code data-lang="bash"><span><span>flatpak --user install flathub net.lutris.Lutris
</span></span></code></pre></div><p>用Flatpak安裝的話，把你裝有遊戲的目錄預先開放給Lutris存取，例如下面我開放的是Steam遊戲收藏庫的所在目錄</p><div><pre tabindex="0"><code data-lang="bash"><span><span>flatpak --user override --user --filesystem<span>=</span>~/.steam/steam/
</span></span></code></pre></div><h2>2. 透過Lutris安裝遊戲<span><a href="#2-%E9%80%8F%E9%81%8Elutris%E5%AE%89%E8%A3%9D%E9%81%8A%E6%88%B2" aria-label="定位點">#</a></span></h2><p>你可以自行安裝遊戲，再將其匯入到Lutris收藏庫（後述）</p><p>Lutris主要是透過網友撰寫的指令稿來安裝遊戲（不含破解，付費遊戲你要持有副本）。</p><p>點選Lutris主界面左上角＋號 → 在Lutris網站上搜索遊戲，從<a href="https://lutris.net/games" target="_blank">Lutris.net</a>下載網友製作的指令稿，自動安裝遊戲。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f71ef62018.webp"><p>不論該遊戲是Windows還是PSP的遊戲，指令稿應該都會幫你裝好Wine之類的執行環境，基本上不需要手動介入。</p><p>Lutris安裝的遊戲預設目錄為<code>~/Games</code></p><p>遊戲加入Lutris選單後，按右鍵，點選配置，可設定縮圖。按箭頭符號讓Lutris嘗試從資料庫下載縮圖。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-5e3d80d45a.webp"><h2>3. 將Steam的遊戲匯入Lutris<span><a href="#3-%E5%B0%87steam%E7%9A%84%E9%81%8A%E6%88%B2%E5%8C%AF%E5%85%A5lutris" aria-label="定位點">#</a></span></h2><p>Lutris可以啟動Steam安裝的遊戲，但啟動的過程還是得經過Steam客戶端執行。</p><ol><li><p>安裝<a href="https://ivonblog.com/posts/install-steam-on-linux" target="_blank">Linux版Steam客戶端</a></p></li><li><p>再<a href="https://help.steampowered.com/zh-tw/faqs/view/588C-C67D-0251-C276" target="_blank">將自己的Steam遊戲收藏庫設定為公開</a>，Lutris才能讀取</p></li><li><p>如果Steam和Lutris都是使用Flatpak安裝的，需要執行以下步驟Lutris才抓得到遊戲。將.steam目錄，連結到Flatpak的Steam目錄</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>flatpak --user override --filesystem<span>=</span>~/.var/app/com.valvesoftware.Steam:ro net.lutris.Lutris
</span></span><span><span>
</span></span><span><span>flatpak --user override --filesystem<span>=</span>~/.steam/steam/  net.lutris.Lutris
</span></span><span><span>
</span></span><span><span>ln -s ~/.var/app/com.valvesoftware.Steam/.steam .steam
</span></span></code></pre></div><ol start="4"><li>這樣Lutris左邊的Steam選單應該就會列出Steam遊戲了<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-002375cc72.webp"></li></ol><h2>4. 手動將遊戲匯入Lutris<span><a href="#4-%E6%89%8B%E5%8B%95%E5%B0%87%E9%81%8A%E6%88%B2%E5%8C%AF%E5%85%A5lutris" aria-label="定位點">#</a></span></h2><p>單獨的exe、Flatpak遊戲、二進位檔、非經過Lutris安裝的遊戲，都得手動加入到Lutris收藏庫。</p><h3>Flatpak遊戲<span><a href="#flatpak%E9%81%8A%E6%88%B2" aria-label="定位點">#</a></span></h3><ol><li><p>例如我這裡有用Flatpak安裝的Luanti，點選＋號 → 手動配置遊戲環境，設定啟動指令。像這裡因為是Flatpak，所以運行環境勾選Flatpak</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fa0d03c5c1.webp"></li><li><p>遊戲選項的應用ID輸入<code>org.luanti.luanti</code>，如此一來便完成設定。</p></li></ol><h3>單獨的Windows exe<span><a href="#%E5%96%AE%E7%8D%A8%E7%9A%84windows-exe" aria-label="定位點">#</a></span></h3><p>鑑於Windows程式很多都需要跑Winetricks額外裝Windows的套件，我不是很建議手動加入EXE。建議先試試用Lutris指令稿或者Steam安裝，沒有的話再手動裝。</p><ol><li><p>點選＋號 → 手動配置遊戲環境，運行環境選Wine。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6b6a5e2bed.webp"></li><li><p>遊戲選項填入EXE所在目錄，以及容器目錄（WINEPREFIX，即Wine的模擬C槽所在路徑）</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9fe50a0600.webp"></li><li><p>運行環境選擇Wine版本。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4a993521f2.webp"></li><li><p>若有特殊需求，你可以在Lutris首頁右上角按Preferences → 執行環境，手動下載其他版本的Wine。</p></li></ol><h3>加入遊戲主機ROM<span><a href="#%E5%8A%A0%E5%85%A5%E9%81%8A%E6%88%B2%E4%B8%BB%E6%A9%9From" aria-label="定位點">#</a></span></h3><p>以PPSSPP為例子，你必須先安裝PPSSSPP主程式，才可以從Lutris側邊欄新增PSP遊戲。（若PPSSPP以Flatpak格式安裝，也得以上述的Flatpak方法手動新增至Lutris）</p><p>新增遊戲執行環境選取PPSSPP，再填入ROM路徑即可。其他模擬器所需的執行環境，可在Lutris首頁右上角按Preferences → 執行環境，手動下載。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-66705de730.webp"><h2>5. 透過Lutris帳號同步遊戲收藏庫<span><a href="#5-%E9%80%8F%E9%81%8Elutris%E5%B8%B3%E8%99%9F%E5%90%8C%E6%AD%A5%E9%81%8A%E6%88%B2%E6%94%B6%E8%97%8F%E5%BA%AB" aria-label="定位點">#</a></span></h2><p>類似Steam遊戲收藏庫的功能，不同的是，Lutris官網收錄了更多沒在Steam上架的遊戲。</p><p>同步收藏庫的同時也會同步遊玩時長。</p><ol><li><p>到<a href="https://lutris.net/user/register" target="_blank">Lutris官網</a>註冊一個帳號</p></li><li><p>點右上角 → Preferences → Accounts，點Login登入Lutris帳號，再點選Sync。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-cd45c6c281.webp"></li><li><p>在同步遊戲資料庫之前，檢查一下本機的遊戲是否有被Lutris線上資料庫辨識到，若遊戲無法辨識就會顯示空白縮圖。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-84b472c9f4.webp"></li><li><p>這時你要對其按右鍵 → Configure，點選修改Identifier，Lutris線上資料庫無法辨識的遊戲會改以一組UUID替代。嘗試輸入Lutris官網的網址（例如<code>https://lutris.net/games/ace-combattm-7-skies-unknown/</code>就輸入<code>ace-combattm-7-skies-unknown</code>），這樣它就會應該抓到縮圖了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-1295f89ce8.webp"></li></ol>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/lutris-game-manager/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4ac0e26998.webp"></a></p>
<p>你是否覺得Linux電腦上的遊戲多到無法管理？</p><p>比如從Steam安裝的、依賴特定啟動器才能開的遊戲、遊戲主機模擬器的遊戲，還有硬碟裡數不清的免安裝版Windows遊戲exe檔…</p><p>不喜歡在電腦桌面新增一堆有的沒有的捷徑嗎？你需要一款遊戲收藏管理器！這個時候你可能會想到Steam，儘管Steam能夠啟動許多遊戲，但是它的UI仍不方便管理收藏，且目前Linux的Steam客戶端也不是很順暢，不是好的遊戲收藏管理器。</p><p>Lutris，這款開源軟體能夠擔當管理遊戲收藏的任務，它的圖示是一隻海獺。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3fb70dbc4b.webp"><p>Lutris有幾個主要功能：</p><p>第一，Lutris可作為Wine（Windows exe轉譯器）的前端，透過社群維護的指令稿，一鍵設定好Wine環境，安裝許多Windows exe遊戲。（相關文章：<a href="/posts/linux-wine-introduction">Linux Wine指令使用教學</a>）</p><p>第二，Lutris具備管理遊戲功能，內部界面整合了Steam、Ubisoft Connect、EA app、Epic Games Launcher、GOG、itch.io的啟動捷徑。此外，Lutris支援模擬遊戲主機，例如搭配PPSSPP、Yuzu、xemu模擬器，遊玩Playstation、Nintendo、Xbox平台的遊戲，替代一部份<a href="https://ivonblog.com/posts/retroarch-linux" target="_blank">RetroArch模擬器</a>的功能。</p><p>第三，自動紀錄遊玩時長，跟Steam的「遊戲時數」類似。Steam無法追蹤沒有在Steam商店上架的遊戲，而Lutris是任意遊戲都可以。並且Lutris有自己的線上遊戲資料庫系統，不依賴Steam。</p><hr><p>Lutris的作者Mathieu Comandon最初開發本軟體的目的是為了更好地管理Linux上的遊戲收藏。</p><p>Lutris與同類產品<a href="https://ivonblog.com/posts/setup-linux-bottles" target="_blank">Bottles</a>、<a href="https://ivonblog.com/posts/install-steam-on-linux" target="_blank">Steam</a>不同的點在於，Lutris旨在讓玩家方便管理Linux電腦的遊戲，讓它不單單只是遊戲啟動器，而是成為「遊戲收藏平台」。</p><p>不論你的遊戲是Windows遊戲、Linux原生，還是模擬器，你都可以把它加入到Lutris的啟動界面，統一管理。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bc025ebfa5.webp"><h2>1. 安裝Lutris<span><a href="#1-%E5%AE%89%E8%A3%9Dlutris" aria-label="定位點">#</a></span></h2><p><a href="https://lutris.net/downloads" target="_blank">Lutris的官網</a>有提供Ubuntu、Fedora、Arch Linux的套件。</p><p>例如Ubuntu就是先<a href="https://ivonblog.com/posts/linux-wine-introduction/" target="_blank">安裝原生的Wine</a>。再下載Lutris的.deb檔安裝：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt install ./lutris*.deb
</span></span></code></pre></div><hr><p>或者，考慮使用Flatpak版本，它內建Wine，這個Steam Deck也能裝。</p><p>請先裝<a href="https://ivonblog.com/posts/linux-flatpak-introduction/" target="_blank">Flatpak</a>，再裝Lutris</p><div><pre tabindex="0"><code data-lang="bash"><span><span>flatpak --user install flathub net.lutris.Lutris
</span></span></code></pre></div><p>用Flatpak安裝的話，把你裝有遊戲的目錄預先開放給Lutris存取，例如下面我開放的是Steam遊戲收藏庫的所在目錄</p><div><pre tabindex="0"><code data-lang="bash"><span><span>flatpak --user override --user --filesystem<span>=</span>~/.steam/steam/
</span></span></code></pre></div><h2>2. 透過Lutris安裝遊戲<span><a href="#2-%E9%80%8F%E9%81%8Elutris%E5%AE%89%E8%A3%9D%E9%81%8A%E6%88%B2" aria-label="定位點">#</a></span></h2><p>你可以自行安裝遊戲，再將其匯入到Lutris收藏庫（後述）</p><p>Lutris主要是透過網友撰寫的指令稿來安裝遊戲（不含破解，付費遊戲你要持有副本）。</p><p>點選Lutris主界面左上角＋號 → 在Lutris網站上搜索遊戲，從<a href="https://lutris.net/games" target="_blank">Lutris.net</a>下載網友製作的指令稿，自動安裝遊戲。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f71ef62018.webp"><p>不論該遊戲是Windows還是PSP的遊戲，指令稿應該都會幫你裝好Wine之類的執行環境，基本上不需要手動介入。</p><p>Lutris安裝的遊戲預設目錄為<code>~/Games</code></p><p>遊戲加入Lutris選單後，按右鍵，點選配置，可設定縮圖。按箭頭符號讓Lutris嘗試從資料庫下載縮圖。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-5e3d80d45a.webp"><h2>3. 將Steam的遊戲匯入Lutris<span><a href="#3-%E5%B0%87steam%E7%9A%84%E9%81%8A%E6%88%B2%E5%8C%AF%E5%85%A5lutris" aria-label="定位點">#</a></span></h2><p>Lutris可以啟動Steam安裝的遊戲，但啟動的過程還是得經過Steam客戶端執行。</p><ol><li><p>安裝<a href="https://ivonblog.com/posts/install-steam-on-linux" target="_blank">Linux版Steam客戶端</a></p></li><li><p>再<a href="https://help.steampowered.com/zh-tw/faqs/view/588C-C67D-0251-C276" target="_blank">將自己的Steam遊戲收藏庫設定為公開</a>，Lutris才能讀取</p></li><li><p>如果Steam和Lutris都是使用Flatpak安裝的，需要執行以下步驟Lutris才抓得到遊戲。將.steam目錄，連結到Flatpak的Steam目錄</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>flatpak --user override --filesystem<span>=</span>~/.var/app/com.valvesoftware.Steam:ro net.lutris.Lutris
</span></span><span><span>
</span></span><span><span>flatpak --user override --filesystem<span>=</span>~/.steam/steam/  net.lutris.Lutris
</span></span><span><span>
</span></span><span><span>ln -s ~/.var/app/com.valvesoftware.Steam/.steam .steam
</span></span></code></pre></div><ol start="4"><li>這樣Lutris左邊的Steam選單應該就會列出Steam遊戲了<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-002375cc72.webp"></li></ol><h2>4. 手動將遊戲匯入Lutris<span><a href="#4-%E6%89%8B%E5%8B%95%E5%B0%87%E9%81%8A%E6%88%B2%E5%8C%AF%E5%85%A5lutris" aria-label="定位點">#</a></span></h2><p>單獨的exe、Flatpak遊戲、二進位檔、非經過Lutris安裝的遊戲，都得手動加入到Lutris收藏庫。</p><h3>Flatpak遊戲<span><a href="#flatpak%E9%81%8A%E6%88%B2" aria-label="定位點">#</a></span></h3><ol><li><p>例如我這裡有用Flatpak安裝的Luanti，點選＋號 → 手動配置遊戲環境，設定啟動指令。像這裡因為是Flatpak，所以運行環境勾選Flatpak</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fa0d03c5c1.webp"></li><li><p>遊戲選項的應用ID輸入<code>org.luanti.luanti</code>，如此一來便完成設定。</p></li></ol><h3>單獨的Windows exe<span><a href="#%E5%96%AE%E7%8D%A8%E7%9A%84windows-exe" aria-label="定位點">#</a></span></h3><p>鑑於Windows程式很多都需要跑Winetricks額外裝Windows的套件，我不是很建議手動加入EXE。建議先試試用Lutris指令稿或者Steam安裝，沒有的話再手動裝。</p><ol><li><p>點選＋號 → 手動配置遊戲環境，運行環境選Wine。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6b6a5e2bed.webp"></li><li><p>遊戲選項填入EXE所在目錄，以及容器目錄（WINEPREFIX，即Wine的模擬C槽所在路徑）</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9fe50a0600.webp"></li><li><p>運行環境選擇Wine版本。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4a993521f2.webp"></li><li><p>若有特殊需求，你可以在Lutris首頁右上角按Preferences → 執行環境，手動下載其他版本的Wine。</p></li></ol><h3>加入遊戲主機ROM<span><a href="#%E5%8A%A0%E5%85%A5%E9%81%8A%E6%88%B2%E4%B8%BB%E6%A9%9From" aria-label="定位點">#</a></span></h3><p>以PPSSPP為例子，你必須先安裝PPSSSPP主程式，才可以從Lutris側邊欄新增PSP遊戲。（若PPSSPP以Flatpak格式安裝，也得以上述的Flatpak方法手動新增至Lutris）</p><p>新增遊戲執行環境選取PPSSPP，再填入ROM路徑即可。其他模擬器所需的執行環境，可在Lutris首頁右上角按Preferences → 執行環境，手動下載。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-66705de730.webp"><h2>5. 透過Lutris帳號同步遊戲收藏庫<span><a href="#5-%E9%80%8F%E9%81%8Elutris%E5%B8%B3%E8%99%9F%E5%90%8C%E6%AD%A5%E9%81%8A%E6%88%B2%E6%94%B6%E8%97%8F%E5%BA%AB" aria-label="定位點">#</a></span></h2><p>類似Steam遊戲收藏庫的功能，不同的是，Lutris官網收錄了更多沒在Steam上架的遊戲。</p><p>同步收藏庫的同時也會同步遊玩時長。</p><ol><li><p>到<a href="https://lutris.net/user/register" target="_blank">Lutris官網</a>註冊一個帳號</p></li><li><p>點右上角 → Preferences → Accounts，點Login登入Lutris帳號，再點選Sync。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-cd45c6c281.webp"></li><li><p>在同步遊戲資料庫之前，檢查一下本機的遊戲是否有被Lutris線上資料庫辨識到，若遊戲無法辨識就會顯示空白縮圖。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-84b472c9f4.webp"></li><li><p>這時你要對其按右鍵 → Configure，點選修改Identifier，Lutris線上資料庫無法辨識的遊戲會改以一組UUID替代。嘗試輸入Lutris官網的網址（例如<code>https://lutris.net/games/ace-combattm-7-skies-unknown/</code>就輸入<code>ace-combattm-7-skies-unknown</code>），這樣它就會應該抓到縮圖了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-1295f89ce8.webp"></li></ol>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4ac0e26998.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4ac0e26998.webp" medium="image"/>
    <pubDate>Wed, 08 Oct 2025 17:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[自架音樂串流平台，使用ListenBrainz與last.fm替代Spotify的音樂聆聽回顧]]></title>
    <link>https://ivonblog.com/posts/selt-hosting-a-streaming-music-platform/</link>
    <itunes:title><![CDATA[自架音樂串流平台，使用ListenBrainz與last.fm替代Spotify的音樂聆聽回顧]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/selt-hosting-a-streaming-music-platform/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e5596b42de.webp"></a></p>
<p>自從把音樂下載下來後，我考慮把串流服務都退訂了。</p><p>Spotify、Apple Music、Youtube Music、KKBox、Tidal都有音樂聆聽紀錄，在使用大約一年後，就會寄「年度回顧」的報告給你看，讓你知道過去都在聽什麼歌。</p><p>但是多次換平台之後，我始終找不到能長久待著的大平台。</p><p>最主要是曲庫吧，每個平台都有唱片公司搞平台限定，致使有些歌曲就是聽不到，不然就是音質很爛。</p><p>這樣要弄聆聽紀錄會很困擾，不知道過去到底聽過哪些歌，實際上愛聽哪些，聆聽紀錄是分散的。</p><p>我希望聆聽紀錄是能夠與平台無關的，並且資料是能掌控在手中，能夠自由匯出分析的。</p><p>那麼，果然還是得回到離線音樂的老路吧！讓軟體協助你統計聆聽紀錄。</p><p>但是，用foobar2000這種離線播放器聽音樂的作法已經過時了，音樂檔案儲存需要大量空間，我不會一直坐在電腦前面，且這年頭誰會把一大坨音樂檔存在手機帶著走呀？</p><p>所以解決方法，就是自己架一個音樂串流服務平台，最好能透過瀏覽器執行，方面跨平台，比如<a href="https://ivonblog.com/posts/navidrome-music-server/" target="_blank">Navidrome</a>、<a href="https://ivonblog.com/posts/self-hosting-jellyfin/" target="_blank">Jellyfin</a>、<a href="https://ivonblog.com/posts/gonic-music-streaming-server/" target="_blank">Gonic</a>等等</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f5709a2a81.webp"><p>將感興趣的音樂用<a href="https://ivonblog.com/posts/yt-dlp-usage/" target="_blank">yt-dlp</a>（不追求極致品質，通常是流行樂）或者torrent下載到硬碟，讓這些軟體掃描，整理成一個類似商業串流服務的界面，方便我隨時隨地遠端播放。</p><p>我知道這會涉及盜版啦…真的很喜歡的專輯，我還是會花錢買CD來rip。</p><p>接著，在音樂串流的伺服端設定，透過<a href="https://listenbrainz.org/" target="_blank">ListenBrainz</a>與<a href="https://www.last.fm" target="_blank">last.fm</a>的第三方服務，在背後默默紀錄音樂聆聽紀錄</p><p>ListenBrainz比last.fm好一點的地方在於，它算是一個公益平台，音樂資料庫很齊全，資料是能夠自由匯出為json格式的，雖然網頁界面比較醜。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ebdc95e541.webp"><p>而last.fm就是社群媒體屬性比較強，有點像是分享音樂聆聽紀錄的Facebook。並有付費解鎖深度分析報表的功能。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f4fbe04135.webp"><p>總之，以上萬事具備之後，一個最基本的，屬於自己的串流平台就建好了！</p>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/selt-hosting-a-streaming-music-platform/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e5596b42de.webp"></a></p>
<p>自從把音樂下載下來後，我考慮把串流服務都退訂了。</p><p>Spotify、Apple Music、Youtube Music、KKBox、Tidal都有音樂聆聽紀錄，在使用大約一年後，就會寄「年度回顧」的報告給你看，讓你知道過去都在聽什麼歌。</p><p>但是多次換平台之後，我始終找不到能長久待著的大平台。</p><p>最主要是曲庫吧，每個平台都有唱片公司搞平台限定，致使有些歌曲就是聽不到，不然就是音質很爛。</p><p>這樣要弄聆聽紀錄會很困擾，不知道過去到底聽過哪些歌，實際上愛聽哪些，聆聽紀錄是分散的。</p><p>我希望聆聽紀錄是能夠與平台無關的，並且資料是能掌控在手中，能夠自由匯出分析的。</p><p>那麼，果然還是得回到離線音樂的老路吧！讓軟體協助你統計聆聽紀錄。</p><p>但是，用foobar2000這種離線播放器聽音樂的作法已經過時了，音樂檔案儲存需要大量空間，我不會一直坐在電腦前面，且這年頭誰會把一大坨音樂檔存在手機帶著走呀？</p><p>所以解決方法，就是自己架一個音樂串流服務平台，最好能透過瀏覽器執行，方面跨平台，比如<a href="https://ivonblog.com/posts/navidrome-music-server/" target="_blank">Navidrome</a>、<a href="https://ivonblog.com/posts/self-hosting-jellyfin/" target="_blank">Jellyfin</a>、<a href="https://ivonblog.com/posts/gonic-music-streaming-server/" target="_blank">Gonic</a>等等</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f5709a2a81.webp"><p>將感興趣的音樂用<a href="https://ivonblog.com/posts/yt-dlp-usage/" target="_blank">yt-dlp</a>（不追求極致品質，通常是流行樂）或者torrent下載到硬碟，讓這些軟體掃描，整理成一個類似商業串流服務的界面，方便我隨時隨地遠端播放。</p><p>我知道這會涉及盜版啦…真的很喜歡的專輯，我還是會花錢買CD來rip。</p><p>接著，在音樂串流的伺服端設定，透過<a href="https://listenbrainz.org/" target="_blank">ListenBrainz</a>與<a href="https://www.last.fm" target="_blank">last.fm</a>的第三方服務，在背後默默紀錄音樂聆聽紀錄</p><p>ListenBrainz比last.fm好一點的地方在於，它算是一個公益平台，音樂資料庫很齊全，資料是能夠自由匯出為json格式的，雖然網頁界面比較醜。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ebdc95e541.webp"><p>而last.fm就是社群媒體屬性比較強，有點像是分享音樂聆聽紀錄的Facebook。並有付費解鎖深度分析報表的功能。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f4fbe04135.webp"><p>總之，以上萬事具備之後，一個最基本的，屬於自己的串流平台就建好了！</p>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/selt-hosting-a-streaming-music-platform/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e5596b42de.webp"></a></p>
<p>自從把音樂下載下來後，我考慮把串流服務都退訂了。</p><p>Spotify、Apple Music、Youtube Music、KKBox、Tidal都有音樂聆聽紀錄，在使用大約一年後，就會寄「年度回顧」的報告給你看，讓你知道過去都在聽什麼歌。</p><p>但是多次換平台之後，我始終找不到能長久待著的大平台。</p><p>最主要是曲庫吧，每個平台都有唱片公司搞平台限定，致使有些歌曲就是聽不到，不然就是音質很爛。</p><p>這樣要弄聆聽紀錄會很困擾，不知道過去到底聽過哪些歌，實際上愛聽哪些，聆聽紀錄是分散的。</p><p>我希望聆聽紀錄是能夠與平台無關的，並且資料是能掌控在手中，能夠自由匯出分析的。</p><p>那麼，果然還是得回到離線音樂的老路吧！讓軟體協助你統計聆聽紀錄。</p><p>但是，用foobar2000這種離線播放器聽音樂的作法已經過時了，音樂檔案儲存需要大量空間，我不會一直坐在電腦前面，且這年頭誰會把一大坨音樂檔存在手機帶著走呀？</p><p>所以解決方法，就是自己架一個音樂串流服務平台，最好能透過瀏覽器執行，方面跨平台，比如<a href="https://ivonblog.com/posts/navidrome-music-server/" target="_blank">Navidrome</a>、<a href="https://ivonblog.com/posts/self-hosting-jellyfin/" target="_blank">Jellyfin</a>、<a href="https://ivonblog.com/posts/gonic-music-streaming-server/" target="_blank">Gonic</a>等等</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f5709a2a81.webp"><p>將感興趣的音樂用<a href="https://ivonblog.com/posts/yt-dlp-usage/" target="_blank">yt-dlp</a>（不追求極致品質，通常是流行樂）或者torrent下載到硬碟，讓這些軟體掃描，整理成一個類似商業串流服務的界面，方便我隨時隨地遠端播放。</p><p>我知道這會涉及盜版啦…真的很喜歡的專輯，我還是會花錢買CD來rip。</p><p>接著，在音樂串流的伺服端設定，透過<a href="https://listenbrainz.org/" target="_blank">ListenBrainz</a>與<a href="https://www.last.fm" target="_blank">last.fm</a>的第三方服務，在背後默默紀錄音樂聆聽紀錄</p><p>ListenBrainz比last.fm好一點的地方在於，它算是一個公益平台，音樂資料庫很齊全，資料是能夠自由匯出為json格式的，雖然網頁界面比較醜。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ebdc95e541.webp"><p>而last.fm就是社群媒體屬性比較強，有點像是分享音樂聆聽紀錄的Facebook。並有付費解鎖深度分析報表的功能。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f4fbe04135.webp"><p>總之，以上萬事具備之後，一個最基本的，屬於自己的串流平台就建好了！</p>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e5596b42de.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e5596b42de.webp" medium="image"/>
    <pubDate>Wed, 08 Oct 2025 13:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[在Linux玩柚子社的遊戲，譬如千戀萬花、魔女的夜宴]]></title>
    <link>https://ivonblog.com/posts/yuzusoft-games-on-linux/</link>
    <itunes:title><![CDATA[在Linux玩柚子社的遊戲，譬如千戀萬花、魔女的夜宴]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/yuzusoft-games-on-linux/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-adf4371d03.webp"></a></p>
<p>我在Linux版Steaam測試了一些柚子社(YouzuSoft)遊戲的執行</p><p>開箱即用…是嗎？</p><p>雖然遊戲正常執行，不過要播放影片的時候就會出問題，破壞遊戲體驗。玩魔女的夜宴，在寧寧脫衣變身到一半的時候Proton跳出Fatal Error的心情誰懂。因為不想在玩Galgame到劇情高潮之時遇到錯誤，所以我決定重新在實體機器安裝Windows，以備不時之需，執行那些容易在Linux出錯的遊戲。不過這個問題後來用ProtonTricks解決了，原來是缺一些東西～</p><p>我測試了千戀＊萬花 (Senren＊Banka) 、魔女的夜宴(Sabbat of the Witch) 兩款最著名的遊戲，我都是透過Steam購買的。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-61f7d2a3ac.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-728fe62699.webp"><p>根據ProtonDB資料彙整而成，需要額外裝套件才能正常遊玩。</p><h2>1. 共通的問題：無法播放遊戲內影片<span><a href="#1-%E5%85%B1%E9%80%9A%E7%9A%84%E5%95%8F%E9%A1%8C%E7%84%A1%E6%B3%95%E6%92%AD%E6%94%BE%E9%81%8A%E6%88%B2%E5%85%A7%E5%BD%B1%E7%89%87" aria-label="定位點">#</a></span></h2><p>可以在鑑賞模式觀察到，影片要嘛無法播，不然就是沒聲音。</p><ol><li><p>在下載遊戲後，在收藏庫點選右鍵 → 內容 → 相容性，選取Proton 9.0。或是透過<a href="https://ivonblog.com/posts/steam-protonup-qt-protontricks-usage/" target="_blank">ProtonUp-QT</a>切換為GE-Proton 9版本。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ce67c4badf.webp"></li><li><p>然後，透過<a href="https://ivonblog.com/posts/steam-protonup-qt-protontricks-usage/" target="_blank">ProtonTricks</a>安裝<code>wmp9</code>與<code>directshow</code>。如果還是不能播放影片，再安裝<code>wmp11</code>。</p></li><li><p>不需要在啟動參數加上<code>PROTON_USE_WINED3D=1</code>，那是更舊版的Wine才要做的步驟。</p></li></ol><h2>2. 打R18補丁<span><a href="#2-%E6%89%93r18%E8%A3%9C%E4%B8%81" aria-label="定位點">#</a></span></h2><p>我買的都是國際中文版（《魔女的夜宴》有英文版和中文版二個頁面，注意不要買錯）</p><p>一般來說只要到補丁網站，例如<a href="https://patches.nekonyansoft.com" target="_blank">patches.nekonyansoft.com</a>或<a href="https://appendingpulse.jp" target="_blank">appendingpulse.jp</a>，下載指定.xp3檔案，放到遊戲目錄即會自動載入。</p><p>對遊戲點右鍵，開啟遊戲目錄，把檔案放進去即可。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f238d03ef4.webp"><p>如果需要執行程式的，需要透過ProtonTricks Launcher執行。</p><h2>參考資料<span><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99" aria-label="定位點">#</a></span></h2><ul><li><a href="https://steamcommunity.com/sharedfiles/filedetails/?id=3011343802" target="_blank">Proj Steam Deck: 在Steam Deck上完美體驗魔女的夜宴(最新方法) - Steam Community</a></li><li><a href="https://www.protondb.com/app/1144400" target="_blank">Game Details for Senren＊Banka - ProtonDB</a></li><li><a href="https://www.protondb.com/app/888790" target="_blank">Game Details for Sabbat of the Witch</a></li></ul>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/yuzusoft-games-on-linux/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-adf4371d03.webp"></a></p>
<p>我在Linux版Steaam測試了一些柚子社(YouzuSoft)遊戲的執行</p><p>開箱即用…是嗎？</p><p>雖然遊戲正常執行，不過要播放影片的時候就會出問題，破壞遊戲體驗。玩魔女的夜宴，在寧寧脫衣變身到一半的時候Proton跳出Fatal Error的心情誰懂。因為不想在玩Galgame到劇情高潮之時遇到錯誤，所以我決定重新在實體機器安裝Windows，以備不時之需，執行那些容易在Linux出錯的遊戲。不過這個問題後來用ProtonTricks解決了，原來是缺一些東西～</p><p>我測試了千戀＊萬花 (Senren＊Banka) 、魔女的夜宴(Sabbat of the Witch) 兩款最著名的遊戲，我都是透過Steam購買的。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-61f7d2a3ac.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-728fe62699.webp"><p>根據ProtonDB資料彙整而成，需要額外裝套件才能正常遊玩。</p><h2>1. 共通的問題：無法播放遊戲內影片<span><a href="#1-%E5%85%B1%E9%80%9A%E7%9A%84%E5%95%8F%E9%A1%8C%E7%84%A1%E6%B3%95%E6%92%AD%E6%94%BE%E9%81%8A%E6%88%B2%E5%85%A7%E5%BD%B1%E7%89%87" aria-label="定位點">#</a></span></h2><p>可以在鑑賞模式觀察到，影片要嘛無法播，不然就是沒聲音。</p><ol><li><p>在下載遊戲後，在收藏庫點選右鍵 → 內容 → 相容性，選取Proton 9.0。或是透過<a href="https://ivonblog.com/posts/steam-protonup-qt-protontricks-usage/" target="_blank">ProtonUp-QT</a>切換為GE-Proton 9版本。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ce67c4badf.webp"></li><li><p>然後，透過<a href="https://ivonblog.com/posts/steam-protonup-qt-protontricks-usage/" target="_blank">ProtonTricks</a>安裝<code>wmp9</code>與<code>directshow</code>。如果還是不能播放影片，再安裝<code>wmp11</code>。</p></li><li><p>不需要在啟動參數加上<code>PROTON_USE_WINED3D=1</code>，那是更舊版的Wine才要做的步驟。</p></li></ol><h2>2. 打R18補丁<span><a href="#2-%E6%89%93r18%E8%A3%9C%E4%B8%81" aria-label="定位點">#</a></span></h2><p>我買的都是國際中文版（《魔女的夜宴》有英文版和中文版二個頁面，注意不要買錯）</p><p>一般來說只要到補丁網站，例如<a href="https://patches.nekonyansoft.com" target="_blank">patches.nekonyansoft.com</a>或<a href="https://appendingpulse.jp" target="_blank">appendingpulse.jp</a>，下載指定.xp3檔案，放到遊戲目錄即會自動載入。</p><p>對遊戲點右鍵，開啟遊戲目錄，把檔案放進去即可。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f238d03ef4.webp"><p>如果需要執行程式的，需要透過ProtonTricks Launcher執行。</p><h2>參考資料<span><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99" aria-label="定位點">#</a></span></h2><ul><li><a href="https://steamcommunity.com/sharedfiles/filedetails/?id=3011343802" target="_blank">Proj Steam Deck: 在Steam Deck上完美體驗魔女的夜宴(最新方法) - Steam Community</a></li><li><a href="https://www.protondb.com/app/1144400" target="_blank">Game Details for Senren＊Banka - ProtonDB</a></li><li><a href="https://www.protondb.com/app/888790" target="_blank">Game Details for Sabbat of the Witch</a></li></ul>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/yuzusoft-games-on-linux/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-adf4371d03.webp"></a></p>
<p>我在Linux版Steaam測試了一些柚子社(YouzuSoft)遊戲的執行</p><p>開箱即用…是嗎？</p><p>雖然遊戲正常執行，不過要播放影片的時候就會出問題，破壞遊戲體驗。玩魔女的夜宴，在寧寧脫衣變身到一半的時候Proton跳出Fatal Error的心情誰懂。因為不想在玩Galgame到劇情高潮之時遇到錯誤，所以我決定重新在實體機器安裝Windows，以備不時之需，執行那些容易在Linux出錯的遊戲。不過這個問題後來用ProtonTricks解決了，原來是缺一些東西～</p><p>我測試了千戀＊萬花 (Senren＊Banka) 、魔女的夜宴(Sabbat of the Witch) 兩款最著名的遊戲，我都是透過Steam購買的。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-61f7d2a3ac.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-728fe62699.webp"><p>根據ProtonDB資料彙整而成，需要額外裝套件才能正常遊玩。</p><h2>1. 共通的問題：無法播放遊戲內影片<span><a href="#1-%E5%85%B1%E9%80%9A%E7%9A%84%E5%95%8F%E9%A1%8C%E7%84%A1%E6%B3%95%E6%92%AD%E6%94%BE%E9%81%8A%E6%88%B2%E5%85%A7%E5%BD%B1%E7%89%87" aria-label="定位點">#</a></span></h2><p>可以在鑑賞模式觀察到，影片要嘛無法播，不然就是沒聲音。</p><ol><li><p>在下載遊戲後，在收藏庫點選右鍵 → 內容 → 相容性，選取Proton 9.0。或是透過<a href="https://ivonblog.com/posts/steam-protonup-qt-protontricks-usage/" target="_blank">ProtonUp-QT</a>切換為GE-Proton 9版本。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ce67c4badf.webp"></li><li><p>然後，透過<a href="https://ivonblog.com/posts/steam-protonup-qt-protontricks-usage/" target="_blank">ProtonTricks</a>安裝<code>wmp9</code>與<code>directshow</code>。如果還是不能播放影片，再安裝<code>wmp11</code>。</p></li><li><p>不需要在啟動參數加上<code>PROTON_USE_WINED3D=1</code>，那是更舊版的Wine才要做的步驟。</p></li></ol><h2>2. 打R18補丁<span><a href="#2-%E6%89%93r18%E8%A3%9C%E4%B8%81" aria-label="定位點">#</a></span></h2><p>我買的都是國際中文版（《魔女的夜宴》有英文版和中文版二個頁面，注意不要買錯）</p><p>一般來說只要到補丁網站，例如<a href="https://patches.nekonyansoft.com" target="_blank">patches.nekonyansoft.com</a>或<a href="https://appendingpulse.jp" target="_blank">appendingpulse.jp</a>，下載指定.xp3檔案，放到遊戲目錄即會自動載入。</p><p>對遊戲點右鍵，開啟遊戲目錄，把檔案放進去即可。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f238d03ef4.webp"><p>如果需要執行程式的，需要透過ProtonTricks Launcher執行。</p><h2>參考資料<span><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99" aria-label="定位點">#</a></span></h2><ul><li><a href="https://steamcommunity.com/sharedfiles/filedetails/?id=3011343802" target="_blank">Proj Steam Deck: 在Steam Deck上完美體驗魔女的夜宴(最新方法) - Steam Community</a></li><li><a href="https://www.protondb.com/app/1144400" target="_blank">Game Details for Senren＊Banka - ProtonDB</a></li><li><a href="https://www.protondb.com/app/888790" target="_blank">Game Details for Sabbat of the Witch</a></li></ul>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-adf4371d03.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-adf4371d03.webp" medium="image"/>
    <pubDate>Wed, 08 Oct 2025 12:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[Virt Manager直通Linux的硬碟給Windows虛擬機，替代共享資料夾（Raw Disk Passthrough）]]></title>
    <link>https://ivonblog.com/posts/libvirt-raw-disk-passthrough/</link>
    <itunes:title><![CDATA[Virt Manager直通Linux的硬碟給Windows虛擬機，替代共享資料夾（Raw Disk Passthrough）]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p>動機：我之前寫過一篇<a href="https://ivonblog.com/posts/sharing-steam-game-library-between-linux-and-windows/" target="_blank">在Linux與Windows雙重開機的電腦共享Steam收藏庫</a>的操作，兩個系統之間能共享大部分遊戲檔案，不需要重新下載。</p><p>事實上，這不一定是物理上的雙重開機，實體機搭配虛擬機也是可行的。</p><p>大部分時候我都在Linux Host玩Steam遊戲，但是遇到怎麼樣都不能用Proton轉譯的遊戲的時候，我就會用Windows虛擬機玩。然後就會遇到如何與虛擬機分享遊戲目錄的問題。</p><p>從效能方面考慮，我肯定不會同意網路檔案系統，不論是NFS、SSHFS、SMB都是太慢了。</p><p>不像Virtual Bix，Virt Manager沒有好的共享資料夾方案。</p><p>雖然說，目前有一個很有潛力的方案叫做<a href="https://ivonblog.com/posts/libvirt-virtiofs/" target="_blank">virtio-fs</a>能夠共享資料夾，讓兩個系統同時存取硬碟，不過實務上我測試這不是很穩定的方案，exe放在共享的資料夾直接執行很容易出錯。</p><p>所以我只好直通硬碟了。把Steam收藏庫放在一個獨立的硬碟。</p><p>嚴格來說這不是直通啦，因為虛擬機裡面的作業系統依然是透過QEMU提供的驅動與硬碟互動，並非是完全將硬碟的控制器直通進去。所以應該稱作raw disk passthrough比較正確。</p><h2>1. 硬碟掛載的設定<span><a href="#1-%E7%A1%AC%E7%A2%9F%E6%8E%9B%E8%BC%89%E7%9A%84%E8%A8%AD%E5%AE%9A" aria-label="定位點">#</a></span></h2><p>我的想法是，讓硬碟能夠自由被Linux或Windows虛擬機掛載，所以開機不要自動掛載。確保要使用的硬碟不在<code>/etc/fstab</code>裡面。</p><p>使用桌面環境的時候，通常檔案管理員允許點一下重新掛載硬碟。</p><p>另外，關於檔案系統問題，如果是偏向Windows的話當然是把硬碟格式化為NTFS比較好。</p><p>如果檔案系統為EXT4或BTRFS，Windows需要另外裝驅動才能讀取。例如裝<a href="https://ivonblog.com/posts/winbtrfs-usage/" target="_blank">WinBtrfs</a>讀BTRFS。</p><h2>2. Virt Manager直通實體硬碟給虛擬機<span><a href="#2-virt-manager%E7%9B%B4%E9%80%9A%E5%AF%A6%E9%AB%94%E7%A1%AC%E7%A2%9F%E7%B5%A6%E8%99%9B%E6%93%AC%E6%A9%9F" aria-label="定位點">#</a></span></h2><ol><li>Linux需要先取消掛載硬碟：</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>lsblk
</span></span><span><span>
</span></span><span><span>sudo umount <span>"掛載點"</span>
</span></span></code></pre></div><ol start="2"><li><p>接著使用<code>ls -l /dev/disk/by-id/</code>指令找出硬碟代號</p></li><li><p>Virt Mavnager點選新增硬體，點選新增硬碟，在方框輸入<code>/dev/disk/by-id/ata-硬碟代號</code>，匯流排選VirtIO</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a6c85e12f9.webp"></li><li><p>如果Windows開機後讀不到硬碟，首要的步驟是安裝VirtIO驅動，然後再安裝對應檔案系統的驅動。不要傻傻地格式化呀。</p></li><li><p>虛擬機關機之後，方能在宿主機將硬碟重新掛載。</p></li></ol>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p>動機：我之前寫過一篇<a href="https://ivonblog.com/posts/sharing-steam-game-library-between-linux-and-windows/" target="_blank">在Linux與Windows雙重開機的電腦共享Steam收藏庫</a>的操作，兩個系統之間能共享大部分遊戲檔案，不需要重新下載。</p><p>事實上，這不一定是物理上的雙重開機，實體機搭配虛擬機也是可行的。</p><p>大部分時候我都在Linux Host玩Steam遊戲，但是遇到怎麼樣都不能用Proton轉譯的遊戲的時候，我就會用Windows虛擬機玩。然後就會遇到如何與虛擬機分享遊戲目錄的問題。</p><p>從效能方面考慮，我肯定不會同意網路檔案系統，不論是NFS、SSHFS、SMB都是太慢了。</p><p>不像Virtual Bix，Virt Manager沒有好的共享資料夾方案。</p><p>雖然說，目前有一個很有潛力的方案叫做<a href="https://ivonblog.com/posts/libvirt-virtiofs/" target="_blank">virtio-fs</a>能夠共享資料夾，讓兩個系統同時存取硬碟，不過實務上我測試這不是很穩定的方案，exe放在共享的資料夾直接執行很容易出錯。</p><p>所以我只好直通硬碟了。把Steam收藏庫放在一個獨立的硬碟。</p><p>嚴格來說這不是直通啦，因為虛擬機裡面的作業系統依然是透過QEMU提供的驅動與硬碟互動，並非是完全將硬碟的控制器直通進去。所以應該稱作raw disk passthrough比較正確。</p><h2>1. 硬碟掛載的設定<span><a href="#1-%E7%A1%AC%E7%A2%9F%E6%8E%9B%E8%BC%89%E7%9A%84%E8%A8%AD%E5%AE%9A" aria-label="定位點">#</a></span></h2><p>我的想法是，讓硬碟能夠自由被Linux或Windows虛擬機掛載，所以開機不要自動掛載。確保要使用的硬碟不在<code>/etc/fstab</code>裡面。</p><p>使用桌面環境的時候，通常檔案管理員允許點一下重新掛載硬碟。</p><p>另外，關於檔案系統問題，如果是偏向Windows的話當然是把硬碟格式化為NTFS比較好。</p><p>如果檔案系統為EXT4或BTRFS，Windows需要另外裝驅動才能讀取。例如裝<a href="https://ivonblog.com/posts/winbtrfs-usage/" target="_blank">WinBtrfs</a>讀BTRFS。</p><h2>2. Virt Manager直通實體硬碟給虛擬機<span><a href="#2-virt-manager%E7%9B%B4%E9%80%9A%E5%AF%A6%E9%AB%94%E7%A1%AC%E7%A2%9F%E7%B5%A6%E8%99%9B%E6%93%AC%E6%A9%9F" aria-label="定位點">#</a></span></h2><ol><li>Linux需要先取消掛載硬碟：</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>lsblk
</span></span><span><span>
</span></span><span><span>sudo umount <span>"掛載點"</span>
</span></span></code></pre></div><ol start="2"><li><p>接著使用<code>ls -l /dev/disk/by-id/</code>指令找出硬碟代號</p></li><li><p>Virt Mavnager點選新增硬體，點選新增硬碟，在方框輸入<code>/dev/disk/by-id/ata-硬碟代號</code>，匯流排選VirtIO</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a6c85e12f9.webp"></li><li><p>如果Windows開機後讀不到硬碟，首要的步驟是安裝VirtIO驅動，然後再安裝對應檔案系統的驅動。不要傻傻地格式化呀。</p></li><li><p>虛擬機關機之後，方能在宿主機將硬碟重新掛載。</p></li></ol>]]>
    </description>
    <content:encoded><![CDATA[<p>動機：我之前寫過一篇<a href="https://ivonblog.com/posts/sharing-steam-game-library-between-linux-and-windows/" target="_blank">在Linux與Windows雙重開機的電腦共享Steam收藏庫</a>的操作，兩個系統之間能共享大部分遊戲檔案，不需要重新下載。</p><p>事實上，這不一定是物理上的雙重開機，實體機搭配虛擬機也是可行的。</p><p>大部分時候我都在Linux Host玩Steam遊戲，但是遇到怎麼樣都不能用Proton轉譯的遊戲的時候，我就會用Windows虛擬機玩。然後就會遇到如何與虛擬機分享遊戲目錄的問題。</p><p>從效能方面考慮，我肯定不會同意網路檔案系統，不論是NFS、SSHFS、SMB都是太慢了。</p><p>不像Virtual Bix，Virt Manager沒有好的共享資料夾方案。</p><p>雖然說，目前有一個很有潛力的方案叫做<a href="https://ivonblog.com/posts/libvirt-virtiofs/" target="_blank">virtio-fs</a>能夠共享資料夾，讓兩個系統同時存取硬碟，不過實務上我測試這不是很穩定的方案，exe放在共享的資料夾直接執行很容易出錯。</p><p>所以我只好直通硬碟了。把Steam收藏庫放在一個獨立的硬碟。</p><p>嚴格來說這不是直通啦，因為虛擬機裡面的作業系統依然是透過QEMU提供的驅動與硬碟互動，並非是完全將硬碟的控制器直通進去。所以應該稱作raw disk passthrough比較正確。</p><h2>1. 硬碟掛載的設定<span><a href="#1-%E7%A1%AC%E7%A2%9F%E6%8E%9B%E8%BC%89%E7%9A%84%E8%A8%AD%E5%AE%9A" aria-label="定位點">#</a></span></h2><p>我的想法是，讓硬碟能夠自由被Linux或Windows虛擬機掛載，所以開機不要自動掛載。確保要使用的硬碟不在<code>/etc/fstab</code>裡面。</p><p>使用桌面環境的時候，通常檔案管理員允許點一下重新掛載硬碟。</p><p>另外，關於檔案系統問題，如果是偏向Windows的話當然是把硬碟格式化為NTFS比較好。</p><p>如果檔案系統為EXT4或BTRFS，Windows需要另外裝驅動才能讀取。例如裝<a href="https://ivonblog.com/posts/winbtrfs-usage/" target="_blank">WinBtrfs</a>讀BTRFS。</p><h2>2. Virt Manager直通實體硬碟給虛擬機<span><a href="#2-virt-manager%E7%9B%B4%E9%80%9A%E5%AF%A6%E9%AB%94%E7%A1%AC%E7%A2%9F%E7%B5%A6%E8%99%9B%E6%93%AC%E6%A9%9F" aria-label="定位點">#</a></span></h2><ol><li>Linux需要先取消掛載硬碟：</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>lsblk
</span></span><span><span>
</span></span><span><span>sudo umount <span>"掛載點"</span>
</span></span></code></pre></div><ol start="2"><li><p>接著使用<code>ls -l /dev/disk/by-id/</code>指令找出硬碟代號</p></li><li><p>Virt Mavnager點選新增硬體，點選新增硬碟，在方框輸入<code>/dev/disk/by-id/ata-硬碟代號</code>，匯流排選VirtIO</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a6c85e12f9.webp"></li><li><p>如果Windows開機後讀不到硬碟，首要的步驟是安裝VirtIO驅動，然後再安裝對應檔案系統的驅動。不要傻傻地格式化呀。</p></li><li><p>虛擬機關機之後，方能在宿主機將硬碟重新掛載。</p></li></ol>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a6c85e12f9.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a6c85e12f9.webp" medium="image"/>
    <pubDate>Tue, 07 Oct 2025 15:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[如何在Debian系統安裝Nvidia驅動、CUDA、NVIDIA Container Toolkit]]></title>
    <link>https://ivonblog.com/posts/debian-install-nvidia-drivers/</link>
    <itunes:title><![CDATA[如何在Debian系統安裝Nvidia驅動、CUDA、NVIDIA Container Toolkit]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/debian-install-nvidia-drivers/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4591fa5f7c.webp"></a></p>
<p>適用系統版本：Debian 13 Trixie以上</p><p>本文讓Ivon解說如何在Debian GNU/Linux系統安裝Nvidia驅動程式與CUDA套件。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3b2e558603.webp"><p>安裝方法參考自Debian Wiki與Nvidia官方文件，以APT套件管理員線上安裝(Network Installation)為主，方便升級與解除安裝。</p><p>以<code>lspci -nn | egrep -i "3d|display|vga"</code>確認電腦顯示卡型號，應會看到如下輸出。</p><div><pre tabindex="0"><code data-lang="bash"><span><span>01:00.0 VGA compatible controller: NVIDIA Corporation GP107 <span>[</span>GeForce GTX <span>1050</span> Ti<span>]</span> <span>(</span>rev a1<span>)</span>
</span></span></code></pre></div><p>在安裝Debian的時候，如果有Nvidia顯示卡，預設會載入開源的nouveau驅動。但是要使用CUDA技術，就得安裝Nvidia的專有驅動。</p><p>nouveau是含在mesa套件裡面的，一般不需要刪除套件，在安裝Nvidia專有驅動後nouveau就會自動被停用。</p><p>另外，需要多版本Python共存的請安裝<a href="https://ivonblog.com/posts/linux-anaconda/" target="_blank">Anaconda</a>。</p><h2>1. 安裝Nvidia專有驅動<span><a href="#1-%E5%AE%89%E8%A3%9Dnvidia%E5%B0%88%E6%9C%89%E9%A9%85%E5%8B%95" aria-label="定位點">#</a></span></h2><p>Debian的Nvidia驅動可以選擇從Debian套件庫安裝，或者使用Nvidia CUDA套件庫的驅動。Debian套件庫的驅動版本穩定但陳舊。Nvidia套件庫的驅動則是可以獲得上游發表的最新版本，但不一定穩定。</p><h3>1.1. 桌電與伺服器<span><a href="#11-%E6%A1%8C%E9%9B%BB%E8%88%87%E4%BC%BA%E6%9C%8D%E5%99%A8" aria-label="定位點">#</a></span></h3><p>Debian官方非自由(non-free)的套件庫有收錄Nvidia驅動的套件。</p><p>首先要檢查手上的顯示卡是否仍受Nvidia官方支援，如果有的話就直接裝最新版驅動。</p><ol><li>查看現在Nvidia GPU是使用哪個驅動。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo lspci -k <span>|</span> grep -A <span>2</span> -i <span>"NVIDIA"</span>
</span></span></code></pre></div><ol start="2"><li>沒安裝Nvidia專有驅動前，Linux應該會載入nouveau核心模組。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 範例輸出</span>
</span></span><span><span>07:00.0 VGA compatible controller: NVIDIA Corporation GP107 <span>[</span>GeForce GTX <span>1050</span> Ti<span>]</span> <span>(</span>rev a1<span>)</span>
</span></span><span><span>        Subsystem: ASUSTeK Computer Inc. Device 85d6
</span></span><span><span>        Kernel modules: nouveau
</span></span></code></pre></div><ol start="3"><li>編輯<code>/etc/apt/sources.list</code>，啟用非自由的套件庫</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>deb http://deb.debian.org/debian trixie main non-free-firmware on-free contrib
</span></span><span><span>deb http://deb.debian.org/debian trixie-updates main non-free-firmware on-free contrib
</span></span></code></pre></div><ol start="4"><li>接著以DKMS安裝Nvidia驅動，這會讓Nvidia驅動自動跟著Linux核心更新</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt update
</span></span><span><span>
</span></span><span><span>sudo apt install linux-headers-amd64
</span></span><span><span>
</span></span><span><span>sudo apt install nvidia-driver firmware-misc-nonfree
</span></span></code></pre></div><ol start="5"><li><p>安裝後重開機，執行<code>nvidia-smi</code>指令查看目前驅動版本。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-299ed2c2fd.webp"></li><li><p>再度執行lspci指令</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo lspci -k <span>|</span> grep -A <span>2</span> -i <span>"NVIDIA"</span>
</span></span></code></pre></div><ol start="7"><li>查看nouveau是否已經變成nvidia。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 範例輸出</span>
</span></span><span><span>07:00.0 VGA compatible controller: NVIDIA Corporation GP107 <span>[</span>GeForce GTX <span>1050</span> Ti<span>]</span> <span>(</span>rev a1<span>)</span>
</span></span><span><span>        Subsystem: ASUSTeK Computer Inc. Device 85d6
</span></span><span><span>        Kernel modules: nvidia_drm, nvidia
</span></span></code></pre></div><ol start="8"><li><p>執行<code>nvidia-smi</code>指令，查看Nvidia驅動版本。</p></li><li><p>如果遇到<code>NVIDIA-SMI has failed because it couldn't communicate with the NVIDIA driver. Make sure that the latest NVIDIA driver is installed and running.</code>錯誤，可能是nouveau沒有成功加入黑名單。觀察上面lspci指令輸出結果，如果<code>Kernel modules:</code>後面顯示nouveau，那麼就是沒有黑名單，nouveau驅動會跟Nvidia驅動搶控制權。此時，需要手動將nouveau加入黑名單，更新核心設定，並重開機：</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span>echo</span> <span>"blacklist nouveau"</span> <span>|</span> sudo tee -a /etc/modprobe.d/blacklist-nouveau.conf
</span></span><span><span>
</span></span><span><span><span>echo</span> <span>"options nouveau modeset=0"</span> <span>|</span> sudo tee -a /etc/modprobe.d/blacklist-nouveau.conf
</span></span><span><span>
</span></span><span><span>sudo update-initramfs -u
</span></span></code></pre></div><h3>1.2. 雙GPU筆電<span><a href="#12-%E9%9B%99gpu%E7%AD%86%E9%9B%BB" aria-label="定位點">#</a></span></h3><p>搭載Nvidia獨立顯示卡的筆電安裝顯示卡驅動的方式跟桌上型電腦一樣。</p><p>不過，像Intel＋Nvidia這種的雙GPU筆電，即使裝了Nvidia驅動也可能繼續用Intel的GPU渲染3D，導致3D性能低下。</p><p>此時可以使用<code>prime-select</code>指令，指定用Nvidia顯示卡負責渲染作業。</p><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo prime-select nvidia
</span></span></code></pre></div><p>重開機後再使用指令：<code>vulkaninfo --summary</code>查看主顯示卡為何。</p><p>相關文章：<a href="https://ivonblog.com/posts/linux-nvidia-prime/" target="_blank">Nvidia PRIME指令使用方式</a></p><h2>2. 安裝CUDA<span><a href="#2-%E5%AE%89%E8%A3%9Dcuda" aria-label="定位點">#</a></span></h2><p>Debian套件庫有收錄CUDA的套件，但是要取得最新版本得用Nvidia官方的套件庫。Debian Stable提供的<code>nvidia-driver</code>套件版本可能有點舊，這沒有關係，下面安裝CUDA的時候會自動裝上新版驅動。</p><p>必須先裝Nvidia專有驅動才能裝CUDA。</p><ol><li>取得Nvidia提供的套件庫金鑰。<code>$distro</code>是Debian版本號碼，<code>$arch</code>是作業系統架構。撰文當下Nvidia尚未提供Debian 13的套件庫，所以我用Debian 12的。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span>distro</span><span>=</span>debian12
</span></span><span><span>
</span></span><span><span><span>arch</span><span>=</span>x86_64
</span></span><span><span>
</span></span><span><span>wget https://developer.download.nvidia.com/compute/cuda/repos/<span>$distro</span>/<span>$arch</span>/cuda-keyring_1.1-1_all.deb
</span></span><span><span>
</span></span><span><span>sudo apt install ./cuda-keyring_1.1-1_all.deb
</span></span></code></pre></div><ol start="2"><li>安裝CUDA套件，撰文當下目前最新版為CUDA 13。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt update
</span></span><span><span>
</span></span><span><span>sudo apt install cuda-toolkit
</span></span></code></pre></div><ol start="3"><li>CUDA會安裝至<code>/usr/local/</code>，以VIM編輯<code>~/.bashrc</code></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>vim ~/.bashrc
</span></span></code></pre></div><ol start="4"><li>將以下二行加到檔案末尾，這樣系統才找得到CUDA 13的檔案</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span>export</span> <span>PATH</span><span>=</span>/usr/local/cuda-13/bin<span>${</span><span>PATH</span><span>:+:</span><span>${</span><span>PATH</span><span>}}</span>
</span></span><span><span><span>export</span> <span>LD_LIBRARY_PATH</span><span>=</span>/usr/local/cuda-13/lib64:<span>${</span><span>LD_LIBRARY_PATH</span><span>:+:</span><span>${</span><span>LD_LIBRARY_PATH</span><span>}}</span>
</span></span></code></pre></div><ol start="5"><li>重開機，執行<code>nvcc --version</code>指令查看CUDA版本</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>nvcc: NVIDIA <span>(</span>R<span>)</span> Cuda compiler driver
</span></span><span><span>Copyright <span>(</span>c<span>)</span> 2005-2025 NVIDIA Corporation
</span></span><span><span>Built on Wed_Aug_20_01:58:59_PM_PDT_2025
</span></span><span><span>Cuda compilation tools, release 13.0, V13.0.88
</span></span><span><span>Build cuda_13.0.r13.0/compiler.36424714_0
</span></span></code></pre></div><h2>3. 安裝CUDA Container Toolkit<span><a href="#3-%E5%AE%89%E8%A3%9Dcuda-container-toolkit" aria-label="定位點">#</a></span></h2><p>這是設計給Docker和Podman容器用的Nvidia工具，使容器可以使用CUDA計算。</p><p>即使宿主機沒有安裝CUDA套件，容器內照樣可以使用CUDA計算。</p><p>必須先安裝Nvidia專有驅動才可以安裝NVIDIA Container Toolkit。</p><ol><li><p>在Debian<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">安裝Docker</a></p></li><li><p>加入Nvidia的套件庫</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey <span>|</span> sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg <span>\
</span></span></span><span><span>  <span>&amp;&amp;</span> curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list <span>|</span> <span>\
</span></span></span><span><span>    sed <span>'s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g'</span> <span>|</span> <span>\
</span></span></span><span><span>    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
</span></span></code></pre></div><ol start="3"><li>安裝NVIDIA Container Toolkit</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt update
</span></span><span><span>
</span></span><span><span>sudo apt install nvidia-container-toolkit
</span></span></code></pre></div><ol start="4"><li>向Docker註冊Nvidia裝置</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo nvidia-ctk runtime configure --runtime<span>=</span>docker
</span></span></code></pre></div><ol start="5"><li>重新啟動Docker</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo systemctl restart docker
</span></span></code></pre></div><ol start="6"><li>執行Ubuntu容器，測試能否印出Nvidia顯示卡的資訊。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo docker run --rm --runtime<span>=</span>nvidia --gpus all ubuntu nvidia-smi
</span></span></code></pre></div><h2>參考資料<span><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99" aria-label="定位點">#</a></span></h2><ul><li><a href="https://wiki.debian.org/NvidiaGraphicsDrivers" target="_blank">NvidiaGraphicsDrivers - Debian Wiki</a></li><li><a href="https://nouveau.freedesktop.org/" target="_blank">Nouveau: Accelerated Open Source driver for nVidia cards - freedesktop.org</a></li><li><a href="https://docs.nvidia.com/datacenter/tesla/tesla-installation-notes/index.html" target="_blank">NVIDIA Driver Installation Quickstart Guide</a></li><li><a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html" target="_blank">NVIDIA CUDA Installation Guide for Linux</a></li><li><a href="https://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html" target="_blank">NVIDIA Deep Learning cuDNN Documentation</a></li><li><a href="https://docs.nvidia.com/deeplearning/tensorrt/install-guide/index.html" target="_blank">NVIDIA Deep Learning TensorRT Documentation</a></li><li><a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html" target="_blank">NVIDIA Container Toolkit Installation Guide</a></li></ul>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/debian-install-nvidia-drivers/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4591fa5f7c.webp"></a></p>
<p>適用系統版本：Debian 13 Trixie以上</p><p>本文讓Ivon解說如何在Debian GNU/Linux系統安裝Nvidia驅動程式與CUDA套件。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3b2e558603.webp"><p>安裝方法參考自Debian Wiki與Nvidia官方文件，以APT套件管理員線上安裝(Network Installation)為主，方便升級與解除安裝。</p><p>以<code>lspci -nn | egrep -i "3d|display|vga"</code>確認電腦顯示卡型號，應會看到如下輸出。</p><div><pre tabindex="0"><code data-lang="bash"><span><span>01:00.0 VGA compatible controller: NVIDIA Corporation GP107 <span>[</span>GeForce GTX <span>1050</span> Ti<span>]</span> <span>(</span>rev a1<span>)</span>
</span></span></code></pre></div><p>在安裝Debian的時候，如果有Nvidia顯示卡，預設會載入開源的nouveau驅動。但是要使用CUDA技術，就得安裝Nvidia的專有驅動。</p><p>nouveau是含在mesa套件裡面的，一般不需要刪除套件，在安裝Nvidia專有驅動後nouveau就會自動被停用。</p><p>另外，需要多版本Python共存的請安裝<a href="https://ivonblog.com/posts/linux-anaconda/" target="_blank">Anaconda</a>。</p><h2>1. 安裝Nvidia專有驅動<span><a href="#1-%E5%AE%89%E8%A3%9Dnvidia%E5%B0%88%E6%9C%89%E9%A9%85%E5%8B%95" aria-label="定位點">#</a></span></h2><p>Debian的Nvidia驅動可以選擇從Debian套件庫安裝，或者使用Nvidia CUDA套件庫的驅動。Debian套件庫的驅動版本穩定但陳舊。Nvidia套件庫的驅動則是可以獲得上游發表的最新版本，但不一定穩定。</p><h3>1.1. 桌電與伺服器<span><a href="#11-%E6%A1%8C%E9%9B%BB%E8%88%87%E4%BC%BA%E6%9C%8D%E5%99%A8" aria-label="定位點">#</a></span></h3><p>Debian官方非自由(non-free)的套件庫有收錄Nvidia驅動的套件。</p><p>首先要檢查手上的顯示卡是否仍受Nvidia官方支援，如果有的話就直接裝最新版驅動。</p><ol><li>查看現在Nvidia GPU是使用哪個驅動。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo lspci -k <span>|</span> grep -A <span>2</span> -i <span>"NVIDIA"</span>
</span></span></code></pre></div><ol start="2"><li>沒安裝Nvidia專有驅動前，Linux應該會載入nouveau核心模組。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 範例輸出</span>
</span></span><span><span>07:00.0 VGA compatible controller: NVIDIA Corporation GP107 <span>[</span>GeForce GTX <span>1050</span> Ti<span>]</span> <span>(</span>rev a1<span>)</span>
</span></span><span><span>        Subsystem: ASUSTeK Computer Inc. Device 85d6
</span></span><span><span>        Kernel modules: nouveau
</span></span></code></pre></div><ol start="3"><li>編輯<code>/etc/apt/sources.list</code>，啟用非自由的套件庫</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>deb http://deb.debian.org/debian trixie main non-free-firmware on-free contrib
</span></span><span><span>deb http://deb.debian.org/debian trixie-updates main non-free-firmware on-free contrib
</span></span></code></pre></div><ol start="4"><li>接著以DKMS安裝Nvidia驅動，這會讓Nvidia驅動自動跟著Linux核心更新</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt update
</span></span><span><span>
</span></span><span><span>sudo apt install linux-headers-amd64
</span></span><span><span>
</span></span><span><span>sudo apt install nvidia-driver firmware-misc-nonfree
</span></span></code></pre></div><ol start="5"><li><p>安裝後重開機，執行<code>nvidia-smi</code>指令查看目前驅動版本。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-299ed2c2fd.webp"></li><li><p>再度執行lspci指令</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo lspci -k <span>|</span> grep -A <span>2</span> -i <span>"NVIDIA"</span>
</span></span></code></pre></div><ol start="7"><li>查看nouveau是否已經變成nvidia。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 範例輸出</span>
</span></span><span><span>07:00.0 VGA compatible controller: NVIDIA Corporation GP107 <span>[</span>GeForce GTX <span>1050</span> Ti<span>]</span> <span>(</span>rev a1<span>)</span>
</span></span><span><span>        Subsystem: ASUSTeK Computer Inc. Device 85d6
</span></span><span><span>        Kernel modules: nvidia_drm, nvidia
</span></span></code></pre></div><ol start="8"><li><p>執行<code>nvidia-smi</code>指令，查看Nvidia驅動版本。</p></li><li><p>如果遇到<code>NVIDIA-SMI has failed because it couldn't communicate with the NVIDIA driver. Make sure that the latest NVIDIA driver is installed and running.</code>錯誤，可能是nouveau沒有成功加入黑名單。觀察上面lspci指令輸出結果，如果<code>Kernel modules:</code>後面顯示nouveau，那麼就是沒有黑名單，nouveau驅動會跟Nvidia驅動搶控制權。此時，需要手動將nouveau加入黑名單，更新核心設定，並重開機：</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span>echo</span> <span>"blacklist nouveau"</span> <span>|</span> sudo tee -a /etc/modprobe.d/blacklist-nouveau.conf
</span></span><span><span>
</span></span><span><span><span>echo</span> <span>"options nouveau modeset=0"</span> <span>|</span> sudo tee -a /etc/modprobe.d/blacklist-nouveau.conf
</span></span><span><span>
</span></span><span><span>sudo update-initramfs -u
</span></span></code></pre></div><h3>1.2. 雙GPU筆電<span><a href="#12-%E9%9B%99gpu%E7%AD%86%E9%9B%BB" aria-label="定位點">#</a></span></h3><p>搭載Nvidia獨立顯示卡的筆電安裝顯示卡驅動的方式跟桌上型電腦一樣。</p><p>不過，像Intel＋Nvidia這種的雙GPU筆電，即使裝了Nvidia驅動也可能繼續用Intel的GPU渲染3D，導致3D性能低下。</p><p>此時可以使用<code>prime-select</code>指令，指定用Nvidia顯示卡負責渲染作業。</p><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo prime-select nvidia
</span></span></code></pre></div><p>重開機後再使用指令：<code>vulkaninfo --summary</code>查看主顯示卡為何。</p><p>相關文章：<a href="https://ivonblog.com/posts/linux-nvidia-prime/" target="_blank">Nvidia PRIME指令使用方式</a></p><h2>2. 安裝CUDA<span><a href="#2-%E5%AE%89%E8%A3%9Dcuda" aria-label="定位點">#</a></span></h2><p>Debian套件庫有收錄CUDA的套件，但是要取得最新版本得用Nvidia官方的套件庫。Debian Stable提供的<code>nvidia-driver</code>套件版本可能有點舊，這沒有關係，下面安裝CUDA的時候會自動裝上新版驅動。</p><p>必須先裝Nvidia專有驅動才能裝CUDA。</p><ol><li>取得Nvidia提供的套件庫金鑰。<code>$distro</code>是Debian版本號碼，<code>$arch</code>是作業系統架構。撰文當下Nvidia尚未提供Debian 13的套件庫，所以我用Debian 12的。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span>distro</span><span>=</span>debian12
</span></span><span><span>
</span></span><span><span><span>arch</span><span>=</span>x86_64
</span></span><span><span>
</span></span><span><span>wget https://developer.download.nvidia.com/compute/cuda/repos/<span>$distro</span>/<span>$arch</span>/cuda-keyring_1.1-1_all.deb
</span></span><span><span>
</span></span><span><span>sudo apt install ./cuda-keyring_1.1-1_all.deb
</span></span></code></pre></div><ol start="2"><li>安裝CUDA套件，撰文當下目前最新版為CUDA 13。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt update
</span></span><span><span>
</span></span><span><span>sudo apt install cuda-toolkit
</span></span></code></pre></div><ol start="3"><li>CUDA會安裝至<code>/usr/local/</code>，以VIM編輯<code>~/.bashrc</code></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>vim ~/.bashrc
</span></span></code></pre></div><ol start="4"><li>將以下二行加到檔案末尾，這樣系統才找得到CUDA 13的檔案</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span>export</span> <span>PATH</span><span>=</span>/usr/local/cuda-13/bin<span>${</span><span>PATH</span><span>:+:</span><span>${</span><span>PATH</span><span>}}</span>
</span></span><span><span><span>export</span> <span>LD_LIBRARY_PATH</span><span>=</span>/usr/local/cuda-13/lib64:<span>${</span><span>LD_LIBRARY_PATH</span><span>:+:</span><span>${</span><span>LD_LIBRARY_PATH</span><span>}}</span>
</span></span></code></pre></div><ol start="5"><li>重開機，執行<code>nvcc --version</code>指令查看CUDA版本</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>nvcc: NVIDIA <span>(</span>R<span>)</span> Cuda compiler driver
</span></span><span><span>Copyright <span>(</span>c<span>)</span> 2005-2025 NVIDIA Corporation
</span></span><span><span>Built on Wed_Aug_20_01:58:59_PM_PDT_2025
</span></span><span><span>Cuda compilation tools, release 13.0, V13.0.88
</span></span><span><span>Build cuda_13.0.r13.0/compiler.36424714_0
</span></span></code></pre></div><h2>3. 安裝CUDA Container Toolkit<span><a href="#3-%E5%AE%89%E8%A3%9Dcuda-container-toolkit" aria-label="定位點">#</a></span></h2><p>這是設計給Docker和Podman容器用的Nvidia工具，使容器可以使用CUDA計算。</p><p>即使宿主機沒有安裝CUDA套件，容器內照樣可以使用CUDA計算。</p><p>必須先安裝Nvidia專有驅動才可以安裝NVIDIA Container Toolkit。</p><ol><li><p>在Debian<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">安裝Docker</a></p></li><li><p>加入Nvidia的套件庫</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey <span>|</span> sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg <span>\
</span></span></span><span><span>  <span>&amp;&amp;</span> curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list <span>|</span> <span>\
</span></span></span><span><span>    sed <span>'s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g'</span> <span>|</span> <span>\
</span></span></span><span><span>    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
</span></span></code></pre></div><ol start="3"><li>安裝NVIDIA Container Toolkit</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt update
</span></span><span><span>
</span></span><span><span>sudo apt install nvidia-container-toolkit
</span></span></code></pre></div><ol start="4"><li>向Docker註冊Nvidia裝置</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo nvidia-ctk runtime configure --runtime<span>=</span>docker
</span></span></code></pre></div><ol start="5"><li>重新啟動Docker</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo systemctl restart docker
</span></span></code></pre></div><ol start="6"><li>執行Ubuntu容器，測試能否印出Nvidia顯示卡的資訊。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo docker run --rm --runtime<span>=</span>nvidia --gpus all ubuntu nvidia-smi
</span></span></code></pre></div><h2>參考資料<span><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99" aria-label="定位點">#</a></span></h2><ul><li><a href="https://wiki.debian.org/NvidiaGraphicsDrivers" target="_blank">NvidiaGraphicsDrivers - Debian Wiki</a></li><li><a href="https://nouveau.freedesktop.org/" target="_blank">Nouveau: Accelerated Open Source driver for nVidia cards - freedesktop.org</a></li><li><a href="https://docs.nvidia.com/datacenter/tesla/tesla-installation-notes/index.html" target="_blank">NVIDIA Driver Installation Quickstart Guide</a></li><li><a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html" target="_blank">NVIDIA CUDA Installation Guide for Linux</a></li><li><a href="https://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html" target="_blank">NVIDIA Deep Learning cuDNN Documentation</a></li><li><a href="https://docs.nvidia.com/deeplearning/tensorrt/install-guide/index.html" target="_blank">NVIDIA Deep Learning TensorRT Documentation</a></li><li><a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html" target="_blank">NVIDIA Container Toolkit Installation Guide</a></li></ul>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/debian-install-nvidia-drivers/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4591fa5f7c.webp"></a></p>
<p>適用系統版本：Debian 13 Trixie以上</p><p>本文讓Ivon解說如何在Debian GNU/Linux系統安裝Nvidia驅動程式與CUDA套件。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3b2e558603.webp"><p>安裝方法參考自Debian Wiki與Nvidia官方文件，以APT套件管理員線上安裝(Network Installation)為主，方便升級與解除安裝。</p><p>以<code>lspci -nn | egrep -i "3d|display|vga"</code>確認電腦顯示卡型號，應會看到如下輸出。</p><div><pre tabindex="0"><code data-lang="bash"><span><span>01:00.0 VGA compatible controller: NVIDIA Corporation GP107 <span>[</span>GeForce GTX <span>1050</span> Ti<span>]</span> <span>(</span>rev a1<span>)</span>
</span></span></code></pre></div><p>在安裝Debian的時候，如果有Nvidia顯示卡，預設會載入開源的nouveau驅動。但是要使用CUDA技術，就得安裝Nvidia的專有驅動。</p><p>nouveau是含在mesa套件裡面的，一般不需要刪除套件，在安裝Nvidia專有驅動後nouveau就會自動被停用。</p><p>另外，需要多版本Python共存的請安裝<a href="https://ivonblog.com/posts/linux-anaconda/" target="_blank">Anaconda</a>。</p><h2>1. 安裝Nvidia專有驅動<span><a href="#1-%E5%AE%89%E8%A3%9Dnvidia%E5%B0%88%E6%9C%89%E9%A9%85%E5%8B%95" aria-label="定位點">#</a></span></h2><p>Debian的Nvidia驅動可以選擇從Debian套件庫安裝，或者使用Nvidia CUDA套件庫的驅動。Debian套件庫的驅動版本穩定但陳舊。Nvidia套件庫的驅動則是可以獲得上游發表的最新版本，但不一定穩定。</p><h3>1.1. 桌電與伺服器<span><a href="#11-%E6%A1%8C%E9%9B%BB%E8%88%87%E4%BC%BA%E6%9C%8D%E5%99%A8" aria-label="定位點">#</a></span></h3><p>Debian官方非自由(non-free)的套件庫有收錄Nvidia驅動的套件。</p><p>首先要檢查手上的顯示卡是否仍受Nvidia官方支援，如果有的話就直接裝最新版驅動。</p><ol><li>查看現在Nvidia GPU是使用哪個驅動。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo lspci -k <span>|</span> grep -A <span>2</span> -i <span>"NVIDIA"</span>
</span></span></code></pre></div><ol start="2"><li>沒安裝Nvidia專有驅動前，Linux應該會載入nouveau核心模組。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 範例輸出</span>
</span></span><span><span>07:00.0 VGA compatible controller: NVIDIA Corporation GP107 <span>[</span>GeForce GTX <span>1050</span> Ti<span>]</span> <span>(</span>rev a1<span>)</span>
</span></span><span><span>        Subsystem: ASUSTeK Computer Inc. Device 85d6
</span></span><span><span>        Kernel modules: nouveau
</span></span></code></pre></div><ol start="3"><li>編輯<code>/etc/apt/sources.list</code>，啟用非自由的套件庫</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>deb http://deb.debian.org/debian trixie main non-free-firmware on-free contrib
</span></span><span><span>deb http://deb.debian.org/debian trixie-updates main non-free-firmware on-free contrib
</span></span></code></pre></div><ol start="4"><li>接著以DKMS安裝Nvidia驅動，這會讓Nvidia驅動自動跟著Linux核心更新</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt update
</span></span><span><span>
</span></span><span><span>sudo apt install linux-headers-amd64
</span></span><span><span>
</span></span><span><span>sudo apt install nvidia-driver firmware-misc-nonfree
</span></span></code></pre></div><ol start="5"><li><p>安裝後重開機，執行<code>nvidia-smi</code>指令查看目前驅動版本。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-299ed2c2fd.webp"></li><li><p>再度執行lspci指令</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo lspci -k <span>|</span> grep -A <span>2</span> -i <span>"NVIDIA"</span>
</span></span></code></pre></div><ol start="7"><li>查看nouveau是否已經變成nvidia。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 範例輸出</span>
</span></span><span><span>07:00.0 VGA compatible controller: NVIDIA Corporation GP107 <span>[</span>GeForce GTX <span>1050</span> Ti<span>]</span> <span>(</span>rev a1<span>)</span>
</span></span><span><span>        Subsystem: ASUSTeK Computer Inc. Device 85d6
</span></span><span><span>        Kernel modules: nvidia_drm, nvidia
</span></span></code></pre></div><ol start="8"><li><p>執行<code>nvidia-smi</code>指令，查看Nvidia驅動版本。</p></li><li><p>如果遇到<code>NVIDIA-SMI has failed because it couldn't communicate with the NVIDIA driver. Make sure that the latest NVIDIA driver is installed and running.</code>錯誤，可能是nouveau沒有成功加入黑名單。觀察上面lspci指令輸出結果，如果<code>Kernel modules:</code>後面顯示nouveau，那麼就是沒有黑名單，nouveau驅動會跟Nvidia驅動搶控制權。此時，需要手動將nouveau加入黑名單，更新核心設定，並重開機：</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span>echo</span> <span>"blacklist nouveau"</span> <span>|</span> sudo tee -a /etc/modprobe.d/blacklist-nouveau.conf
</span></span><span><span>
</span></span><span><span><span>echo</span> <span>"options nouveau modeset=0"</span> <span>|</span> sudo tee -a /etc/modprobe.d/blacklist-nouveau.conf
</span></span><span><span>
</span></span><span><span>sudo update-initramfs -u
</span></span></code></pre></div><h3>1.2. 雙GPU筆電<span><a href="#12-%E9%9B%99gpu%E7%AD%86%E9%9B%BB" aria-label="定位點">#</a></span></h3><p>搭載Nvidia獨立顯示卡的筆電安裝顯示卡驅動的方式跟桌上型電腦一樣。</p><p>不過，像Intel＋Nvidia這種的雙GPU筆電，即使裝了Nvidia驅動也可能繼續用Intel的GPU渲染3D，導致3D性能低下。</p><p>此時可以使用<code>prime-select</code>指令，指定用Nvidia顯示卡負責渲染作業。</p><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo prime-select nvidia
</span></span></code></pre></div><p>重開機後再使用指令：<code>vulkaninfo --summary</code>查看主顯示卡為何。</p><p>相關文章：<a href="https://ivonblog.com/posts/linux-nvidia-prime/" target="_blank">Nvidia PRIME指令使用方式</a></p><h2>2. 安裝CUDA<span><a href="#2-%E5%AE%89%E8%A3%9Dcuda" aria-label="定位點">#</a></span></h2><p>Debian套件庫有收錄CUDA的套件，但是要取得最新版本得用Nvidia官方的套件庫。Debian Stable提供的<code>nvidia-driver</code>套件版本可能有點舊，這沒有關係，下面安裝CUDA的時候會自動裝上新版驅動。</p><p>必須先裝Nvidia專有驅動才能裝CUDA。</p><ol><li>取得Nvidia提供的套件庫金鑰。<code>$distro</code>是Debian版本號碼，<code>$arch</code>是作業系統架構。撰文當下Nvidia尚未提供Debian 13的套件庫，所以我用Debian 12的。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span>distro</span><span>=</span>debian12
</span></span><span><span>
</span></span><span><span><span>arch</span><span>=</span>x86_64
</span></span><span><span>
</span></span><span><span>wget https://developer.download.nvidia.com/compute/cuda/repos/<span>$distro</span>/<span>$arch</span>/cuda-keyring_1.1-1_all.deb
</span></span><span><span>
</span></span><span><span>sudo apt install ./cuda-keyring_1.1-1_all.deb
</span></span></code></pre></div><ol start="2"><li>安裝CUDA套件，撰文當下目前最新版為CUDA 13。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt update
</span></span><span><span>
</span></span><span><span>sudo apt install cuda-toolkit
</span></span></code></pre></div><ol start="3"><li>CUDA會安裝至<code>/usr/local/</code>，以VIM編輯<code>~/.bashrc</code></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>vim ~/.bashrc
</span></span></code></pre></div><ol start="4"><li>將以下二行加到檔案末尾，這樣系統才找得到CUDA 13的檔案</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span>export</span> <span>PATH</span><span>=</span>/usr/local/cuda-13/bin<span>${</span><span>PATH</span><span>:+:</span><span>${</span><span>PATH</span><span>}}</span>
</span></span><span><span><span>export</span> <span>LD_LIBRARY_PATH</span><span>=</span>/usr/local/cuda-13/lib64:<span>${</span><span>LD_LIBRARY_PATH</span><span>:+:</span><span>${</span><span>LD_LIBRARY_PATH</span><span>}}</span>
</span></span></code></pre></div><ol start="5"><li>重開機，執行<code>nvcc --version</code>指令查看CUDA版本</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>nvcc: NVIDIA <span>(</span>R<span>)</span> Cuda compiler driver
</span></span><span><span>Copyright <span>(</span>c<span>)</span> 2005-2025 NVIDIA Corporation
</span></span><span><span>Built on Wed_Aug_20_01:58:59_PM_PDT_2025
</span></span><span><span>Cuda compilation tools, release 13.0, V13.0.88
</span></span><span><span>Build cuda_13.0.r13.0/compiler.36424714_0
</span></span></code></pre></div><h2>3. 安裝CUDA Container Toolkit<span><a href="#3-%E5%AE%89%E8%A3%9Dcuda-container-toolkit" aria-label="定位點">#</a></span></h2><p>這是設計給Docker和Podman容器用的Nvidia工具，使容器可以使用CUDA計算。</p><p>即使宿主機沒有安裝CUDA套件，容器內照樣可以使用CUDA計算。</p><p>必須先安裝Nvidia專有驅動才可以安裝NVIDIA Container Toolkit。</p><ol><li><p>在Debian<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">安裝Docker</a></p></li><li><p>加入Nvidia的套件庫</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey <span>|</span> sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg <span>\
</span></span></span><span><span>  <span>&amp;&amp;</span> curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list <span>|</span> <span>\
</span></span></span><span><span>    sed <span>'s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g'</span> <span>|</span> <span>\
</span></span></span><span><span>    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
</span></span></code></pre></div><ol start="3"><li>安裝NVIDIA Container Toolkit</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt update
</span></span><span><span>
</span></span><span><span>sudo apt install nvidia-container-toolkit
</span></span></code></pre></div><ol start="4"><li>向Docker註冊Nvidia裝置</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo nvidia-ctk runtime configure --runtime<span>=</span>docker
</span></span></code></pre></div><ol start="5"><li>重新啟動Docker</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo systemctl restart docker
</span></span></code></pre></div><ol start="6"><li>執行Ubuntu容器，測試能否印出Nvidia顯示卡的資訊。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo docker run --rm --runtime<span>=</span>nvidia --gpus all ubuntu nvidia-smi
</span></span></code></pre></div><h2>參考資料<span><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99" aria-label="定位點">#</a></span></h2><ul><li><a href="https://wiki.debian.org/NvidiaGraphicsDrivers" target="_blank">NvidiaGraphicsDrivers - Debian Wiki</a></li><li><a href="https://nouveau.freedesktop.org/" target="_blank">Nouveau: Accelerated Open Source driver for nVidia cards - freedesktop.org</a></li><li><a href="https://docs.nvidia.com/datacenter/tesla/tesla-installation-notes/index.html" target="_blank">NVIDIA Driver Installation Quickstart Guide</a></li><li><a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html" target="_blank">NVIDIA CUDA Installation Guide for Linux</a></li><li><a href="https://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html" target="_blank">NVIDIA Deep Learning cuDNN Documentation</a></li><li><a href="https://docs.nvidia.com/deeplearning/tensorrt/install-guide/index.html" target="_blank">NVIDIA Deep Learning TensorRT Documentation</a></li><li><a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html" target="_blank">NVIDIA Container Toolkit Installation Guide</a></li></ul>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4591fa5f7c.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4591fa5f7c.webp" medium="image"/>
    <pubDate>Tue, 07 Oct 2025 14:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[KRdp ~ KDE Plasma Wayland內建遠端桌面使用教學]]></title>
    <link>https://ivonblog.com/posts/krdp-remote-desktop/</link>
    <itunes:title><![CDATA[KRdp ~ KDE Plasma Wayland內建遠端桌面使用教學]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/krdp-remote-desktop/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-1d4cbee5cd.webp"></a></p>
<p>適用版本：KDE Plasma 6.0以上、Kubuntu 26.04以上、KDE Neon 24.04以上</p><p>過去很長一段時間，KDE Plasma沒有內建遠端桌面的功能，需要依賴其他Linux的遠端桌面軟體串流。現在更新到KDE 6之後，便有了內建的「KRdp」了！</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ac34d3e25e.webp"><p>KRdp是KDE Plasma內建的遠端桌面功能，不需要額外安裝軟體就能使用。</p><p>背後透過RDP協定實現，能夠使用H.264編碼器，低延遲的串流你的桌面，還可以傳輸音效！</p><p>跟其他Linux遠端桌面軟體比起來，KRdp的好處在於跟KDE Plasma桌面整合的較好，尤其是Wayland環境下，不用特別調整什麼權限就能使用。</p><h2>1. KRdp運作條件<span><a href="#1-krdp%E9%81%8B%E4%BD%9C%E6%A2%9D%E4%BB%B6" aria-label="定位點">#</a></span></h2><p>需要KDE Plasma 6以上版本。</p><p>僅限Wayland工作階段可使用。</p><p>如果你還巴著X11不放的，建議改用<a href="https://ivonblog.com/posts/krfb-remote-desktop/" target="_blank">Krfb</a>。</p><h2>2. 啟用KRdp遠端桌面<span><a href="#2-%E5%95%9F%E7%94%A8krdp%E9%81%A0%E7%AB%AF%E6%A1%8C%E9%9D%A2" aria-label="定位點">#</a></span></h2><ol><li><p>開啟KDE系統設定 → 遠端桌面，勾選啟用遠端桌面，新增帳號密碼（可以跟你的Linux使用者帳號一樣）</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-786cac23cd.webp"></li><li><p>然後開啟RDP使用的通訊埠防火牆，例如Ubuntu就是：</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo ufw allow <span>3389</span>
</span></span><span><span>
</span></span><span><span>sudo ufw reload
</span></span></code></pre></div><ol start="3"><li><p>點選KDE右下角的網路連線取得Linux的IP，這裡的範例是區域IP</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-54a3d51f17.webp"></li><li><p>在另外一部電腦開啟RDP客戶端，例如<a href="https://remmina.org/" target="_blank">Remmina</a>，通訊協定選RDP，然後輸入Linux IP連線即可。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3ba1cda42b.webp"></li></ol><h2>3. 從外網存取KRdp桌面<span><a href="#3-%E5%BE%9E%E5%A4%96%E7%B6%B2%E5%AD%98%E5%8F%96krdp%E6%A1%8C%E9%9D%A2" aria-label="定位點">#</a></span></h2><p>如果不方便取得公共IP，使用<a href="https://ivonblog.com/posts/my-self-hosting-setup/" target="_blank">內網穿透軟體</a>。</p><p>這樣你的電腦就能從外部網路存取KRdp。</p><h2>4. 使用指令啟用KRdp<span><a href="#4-%E4%BD%BF%E7%94%A8%E6%8C%87%E4%BB%A4%E5%95%9F%E7%94%A8krdp" aria-label="定位點">#</a></span></h2><p>需要注意的是，目前Krdp不能像xRDP一樣headless啟動工作階段，使用者必須要解鎖SDDM，登入KDE桌面才能順利啟動Krdp伺服器。</p><p>執行以下指令開啟Krdp服務：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>systemctl --user start plasma-krdp_server.service
</span></span></code></pre></div><p>如果之前完全沒有設定過Krdp服務，可以用以下指令產生憑證：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>mkdir --parents <span>"</span><span>$HOME</span><span>/.local/share/krdpserver"</span>
</span></span><span><span>
</span></span><span><span><span>certificatePath</span><span>=</span><span>"</span><span>$HOME</span><span>/.local/share/krdpserver/krdp.crt"</span>
</span></span><span><span>
</span></span><span><span><span>certificateKeyPath</span><span>=</span><span>"</span><span>$HOME</span><span>/.local/share/krdpserver/krdp.key"</span>
</span></span><span><span>
</span></span><span><span>openssl req -nodes -new -x509 -keyout <span>"</span><span>$certificateKeyPath</span><span>"</span> -out <span>"</span><span>$certificatePath</span><span>"</span> -days <span>1</span> -batch
</span></span><span><span>
</span></span><span><span>kwriteconfig6 --file krdpserverrc --group General --key Certificate <span>"</span><span>$certificatePath</span><span>"</span>
</span></span><span><span>
</span></span><span><span>kwriteconfig6 --file krdpserverrc --group General --key CertificateKey <span>"</span><span>$certificateKeyPath</span><span>"</span>
</span></span><span><span>
</span></span><span><span>kwriteconfig6 --file krdpserverrc --group General --key SystemUserEnabled <span>true</span>
</span></span></code></pre></div><h2>參考資料<span><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99" aria-label="定位點">#</a></span></h2><p><a href="https://invent.kde.org/plasma/krdp" target="_blank">KRdp - Library and examples for creating an RDP server. - Gitlab</a></p>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/krdp-remote-desktop/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-1d4cbee5cd.webp"></a></p>
<p>適用版本：KDE Plasma 6.0以上、Kubuntu 26.04以上、KDE Neon 24.04以上</p><p>過去很長一段時間，KDE Plasma沒有內建遠端桌面的功能，需要依賴其他Linux的遠端桌面軟體串流。現在更新到KDE 6之後，便有了內建的「KRdp」了！</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ac34d3e25e.webp"><p>KRdp是KDE Plasma內建的遠端桌面功能，不需要額外安裝軟體就能使用。</p><p>背後透過RDP協定實現，能夠使用H.264編碼器，低延遲的串流你的桌面，還可以傳輸音效！</p><p>跟其他Linux遠端桌面軟體比起來，KRdp的好處在於跟KDE Plasma桌面整合的較好，尤其是Wayland環境下，不用特別調整什麼權限就能使用。</p><h2>1. KRdp運作條件<span><a href="#1-krdp%E9%81%8B%E4%BD%9C%E6%A2%9D%E4%BB%B6" aria-label="定位點">#</a></span></h2><p>需要KDE Plasma 6以上版本。</p><p>僅限Wayland工作階段可使用。</p><p>如果你還巴著X11不放的，建議改用<a href="https://ivonblog.com/posts/krfb-remote-desktop/" target="_blank">Krfb</a>。</p><h2>2. 啟用KRdp遠端桌面<span><a href="#2-%E5%95%9F%E7%94%A8krdp%E9%81%A0%E7%AB%AF%E6%A1%8C%E9%9D%A2" aria-label="定位點">#</a></span></h2><ol><li><p>開啟KDE系統設定 → 遠端桌面，勾選啟用遠端桌面，新增帳號密碼（可以跟你的Linux使用者帳號一樣）</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-786cac23cd.webp"></li><li><p>然後開啟RDP使用的通訊埠防火牆，例如Ubuntu就是：</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo ufw allow <span>3389</span>
</span></span><span><span>
</span></span><span><span>sudo ufw reload
</span></span></code></pre></div><ol start="3"><li><p>點選KDE右下角的網路連線取得Linux的IP，這裡的範例是區域IP</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-54a3d51f17.webp"></li><li><p>在另外一部電腦開啟RDP客戶端，例如<a href="https://remmina.org/" target="_blank">Remmina</a>，通訊協定選RDP，然後輸入Linux IP連線即可。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3ba1cda42b.webp"></li></ol><h2>3. 從外網存取KRdp桌面<span><a href="#3-%E5%BE%9E%E5%A4%96%E7%B6%B2%E5%AD%98%E5%8F%96krdp%E6%A1%8C%E9%9D%A2" aria-label="定位點">#</a></span></h2><p>如果不方便取得公共IP，使用<a href="https://ivonblog.com/posts/my-self-hosting-setup/" target="_blank">內網穿透軟體</a>。</p><p>這樣你的電腦就能從外部網路存取KRdp。</p><h2>4. 使用指令啟用KRdp<span><a href="#4-%E4%BD%BF%E7%94%A8%E6%8C%87%E4%BB%A4%E5%95%9F%E7%94%A8krdp" aria-label="定位點">#</a></span></h2><p>需要注意的是，目前Krdp不能像xRDP一樣headless啟動工作階段，使用者必須要解鎖SDDM，登入KDE桌面才能順利啟動Krdp伺服器。</p><p>執行以下指令開啟Krdp服務：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>systemctl --user start plasma-krdp_server.service
</span></span></code></pre></div><p>如果之前完全沒有設定過Krdp服務，可以用以下指令產生憑證：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>mkdir --parents <span>"</span><span>$HOME</span><span>/.local/share/krdpserver"</span>
</span></span><span><span>
</span></span><span><span><span>certificatePath</span><span>=</span><span>"</span><span>$HOME</span><span>/.local/share/krdpserver/krdp.crt"</span>
</span></span><span><span>
</span></span><span><span><span>certificateKeyPath</span><span>=</span><span>"</span><span>$HOME</span><span>/.local/share/krdpserver/krdp.key"</span>
</span></span><span><span>
</span></span><span><span>openssl req -nodes -new -x509 -keyout <span>"</span><span>$certificateKeyPath</span><span>"</span> -out <span>"</span><span>$certificatePath</span><span>"</span> -days <span>1</span> -batch
</span></span><span><span>
</span></span><span><span>kwriteconfig6 --file krdpserverrc --group General --key Certificate <span>"</span><span>$certificatePath</span><span>"</span>
</span></span><span><span>
</span></span><span><span>kwriteconfig6 --file krdpserverrc --group General --key CertificateKey <span>"</span><span>$certificateKeyPath</span><span>"</span>
</span></span><span><span>
</span></span><span><span>kwriteconfig6 --file krdpserverrc --group General --key SystemUserEnabled <span>true</span>
</span></span></code></pre></div><h2>參考資料<span><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99" aria-label="定位點">#</a></span></h2><p><a href="https://invent.kde.org/plasma/krdp" target="_blank">KRdp - Library and examples for creating an RDP server. - Gitlab</a></p>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/krdp-remote-desktop/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-1d4cbee5cd.webp"></a></p>
<p>適用版本：KDE Plasma 6.0以上、Kubuntu 26.04以上、KDE Neon 24.04以上</p><p>過去很長一段時間，KDE Plasma沒有內建遠端桌面的功能，需要依賴其他Linux的遠端桌面軟體串流。現在更新到KDE 6之後，便有了內建的「KRdp」了！</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ac34d3e25e.webp"><p>KRdp是KDE Plasma內建的遠端桌面功能，不需要額外安裝軟體就能使用。</p><p>背後透過RDP協定實現，能夠使用H.264編碼器，低延遲的串流你的桌面，還可以傳輸音效！</p><p>跟其他Linux遠端桌面軟體比起來，KRdp的好處在於跟KDE Plasma桌面整合的較好，尤其是Wayland環境下，不用特別調整什麼權限就能使用。</p><h2>1. KRdp運作條件<span><a href="#1-krdp%E9%81%8B%E4%BD%9C%E6%A2%9D%E4%BB%B6" aria-label="定位點">#</a></span></h2><p>需要KDE Plasma 6以上版本。</p><p>僅限Wayland工作階段可使用。</p><p>如果你還巴著X11不放的，建議改用<a href="https://ivonblog.com/posts/krfb-remote-desktop/" target="_blank">Krfb</a>。</p><h2>2. 啟用KRdp遠端桌面<span><a href="#2-%E5%95%9F%E7%94%A8krdp%E9%81%A0%E7%AB%AF%E6%A1%8C%E9%9D%A2" aria-label="定位點">#</a></span></h2><ol><li><p>開啟KDE系統設定 → 遠端桌面，勾選啟用遠端桌面，新增帳號密碼（可以跟你的Linux使用者帳號一樣）</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-786cac23cd.webp"></li><li><p>然後開啟RDP使用的通訊埠防火牆，例如Ubuntu就是：</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo ufw allow <span>3389</span>
</span></span><span><span>
</span></span><span><span>sudo ufw reload
</span></span></code></pre></div><ol start="3"><li><p>點選KDE右下角的網路連線取得Linux的IP，這裡的範例是區域IP</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-54a3d51f17.webp"></li><li><p>在另外一部電腦開啟RDP客戶端，例如<a href="https://remmina.org/" target="_blank">Remmina</a>，通訊協定選RDP，然後輸入Linux IP連線即可。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3ba1cda42b.webp"></li></ol><h2>3. 從外網存取KRdp桌面<span><a href="#3-%E5%BE%9E%E5%A4%96%E7%B6%B2%E5%AD%98%E5%8F%96krdp%E6%A1%8C%E9%9D%A2" aria-label="定位點">#</a></span></h2><p>如果不方便取得公共IP，使用<a href="https://ivonblog.com/posts/my-self-hosting-setup/" target="_blank">內網穿透軟體</a>。</p><p>這樣你的電腦就能從外部網路存取KRdp。</p><h2>4. 使用指令啟用KRdp<span><a href="#4-%E4%BD%BF%E7%94%A8%E6%8C%87%E4%BB%A4%E5%95%9F%E7%94%A8krdp" aria-label="定位點">#</a></span></h2><p>需要注意的是，目前Krdp不能像xRDP一樣headless啟動工作階段，使用者必須要解鎖SDDM，登入KDE桌面才能順利啟動Krdp伺服器。</p><p>執行以下指令開啟Krdp服務：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>systemctl --user start plasma-krdp_server.service
</span></span></code></pre></div><p>如果之前完全沒有設定過Krdp服務，可以用以下指令產生憑證：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>mkdir --parents <span>"</span><span>$HOME</span><span>/.local/share/krdpserver"</span>
</span></span><span><span>
</span></span><span><span><span>certificatePath</span><span>=</span><span>"</span><span>$HOME</span><span>/.local/share/krdpserver/krdp.crt"</span>
</span></span><span><span>
</span></span><span><span><span>certificateKeyPath</span><span>=</span><span>"</span><span>$HOME</span><span>/.local/share/krdpserver/krdp.key"</span>
</span></span><span><span>
</span></span><span><span>openssl req -nodes -new -x509 -keyout <span>"</span><span>$certificateKeyPath</span><span>"</span> -out <span>"</span><span>$certificatePath</span><span>"</span> -days <span>1</span> -batch
</span></span><span><span>
</span></span><span><span>kwriteconfig6 --file krdpserverrc --group General --key Certificate <span>"</span><span>$certificatePath</span><span>"</span>
</span></span><span><span>
</span></span><span><span>kwriteconfig6 --file krdpserverrc --group General --key CertificateKey <span>"</span><span>$certificateKeyPath</span><span>"</span>
</span></span><span><span>
</span></span><span><span>kwriteconfig6 --file krdpserverrc --group General --key SystemUserEnabled <span>true</span>
</span></span></code></pre></div><h2>參考資料<span><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99" aria-label="定位點">#</a></span></h2><p><a href="https://invent.kde.org/plasma/krdp" target="_blank">KRdp - Library and examples for creating an RDP server. - Gitlab</a></p>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-1d4cbee5cd.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-1d4cbee5cd.webp" medium="image"/>
    <pubDate>Tue, 30 Sep 2025 14:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[ani-cli ~ 用終端機免費線上看動漫的程式，支援電腦與手機]]></title>
    <link>https://ivonblog.com/posts/ani-cli-anime-streaming/</link>
    <itunes:title><![CDATA[ani-cli ~ 用終端機免費線上看動漫的程式，支援電腦與手機]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/ani-cli-anime-streaming/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bbc7f33f5a.webp"></a></p>
<p>ani-cli為一個讓您用終端機線上看動漫的小程式，可以自己看，也能跟朋友一起看，由pystardust開發。作者稱其為"A cli tool to browse and play anime."</p><p>該名開發者同時也是<a href="https://ivonblog.com/posts/ytfzf-usage" target="_blank">ytfzf - 終端機看Youtube</a>的作者。</p><p>什麼叫做用終端機看影片？不是用ASCII文字渲染影片啦 (ASCII animation) 。</p><p>具體來說ani-cli是讓你透過fzf的純文字界面線上搜尋動漫，然後呼叫MPV播放串流。你也可以將動畫下載到本機離線播放。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e1bfafc1ed.webp"><p>使用起來大概像是這樣：</p><video controls="">
</video><p>因為ani-cli本身只是個指令稿，能輕鬆支援各大作業系統，包含Linux、Windows、macOS、FreeBSD，甚至連Android手機也能看，只要有Termux終端機就行了！
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7defe89054.webp"></p><p>用終端機看動漫…說實在只能耍帥吧？極度簡潔的界面很適合i3、Sway、Hyprland等平鋪視窗管理器的用戶。由於使用MPV播放緣故，還可搭配<a href="https://ivonblog.com/posts/mpv-mvtools-linux/" target="_blank">MVTools ＋ Anime4K</a>提高影片畫質，補幀提升畫面效果。</p><p>ani-cli的片源滿齊全的，以前的到最新的動漫都有，還提供1080p高畫質串流。當然ani-cli的動漫片源不是正版網站，而是來自各大資源提供方。開發者在儲存庫提及的「盜版資源好homie」列表中，名為Saikou的APP因為版權因素使得Github儲存庫整個蒸發了，可憐哪。</p><p>最大的缺點嘛…ani-cli是為英語用戶設計的程式，所以<strong>片源全部都是英文字幕</strong>，你得自行下載漢化組發表的.srt字幕，再從MPV界面手動載入。</p><p>如果你英日文雙修那就往下看吧！</p><h2>1. 安裝ani-cli<span><a href="#1-%E5%AE%89%E8%A3%9Dani-cli" aria-label="定位點">#</a></span></h2><p>安裝說明參照<a href="https://github.com/pystardust/ani-cli" target="_blank">Github</a></p><h3>Linux<span><a href="#linux" aria-label="定位點">#</a></span></h3><p>Linux版的ani-cli可以從套件管理員裝，例如Ubuntu與Debian就是從官方套件庫安裝：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt install ani-cli
</span></span><span><span>
</span></span><span><span><span># 安裝之後能夠使用這個指令自我更新，防止套件庫版本過舊</span>
</span></span><span><span>sudo ani-cli -U
</span></span></code></pre></div><p>記得還要安裝<a href="https://ivonblog.com/posts/mpv-player-configuration/" target="_blank">原生套件版的MPV</a>。</p><h3>Android<span><a href="#android" aria-label="定位點">#</a></span></h3><ol><li><p>安裝<a href="https://ivonblog.com/posts/how-to-use-termux/" target="_blank">Termux</a></p></li><li><p>安裝<a href="https://github.com/mpv-android/mpv-android" target="_blank">Android版MPV</a></p></li><li><p>安裝ani-cli</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pkg install ani-cli termux-am
</span></span></code></pre></div><h2>2. 串流播放動畫<span><a href="#2-%E4%B8%B2%E6%B5%81%E6%92%AD%E6%94%BE%E5%8B%95%E7%95%AB" aria-label="定位點">#</a></span></h2><p>ani-cli使用方式很簡單，在終端機輸入：<code>ani-cli</code>，用英文搜尋動漫，按Enter，就會開啟fzf選單（你也可以加上<code>--rofi</code>引數改用另一種選單）</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-cd6d148e63.webp"><p>ani-cli目前不提供修改網站來源的功能，看來是隨機挑選的，因此可能會出現有些網站找不到特定動畫的情況，或是部份網站把畫質壓縮的比較糟糕。</p><p>列出季數，選取後再選取集數。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7b026321b6.webp"><p>選取集數就會播放了，一切操作都是那麼直覺。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-59a9cc0b61.webp"><p>因為ani-cli使用MPV播放，你可以搭配<a href="https://ivonblog.com/posts/mpv-mvtools-linux" target="_blank">MVTools ＋ Anime4K</a>進一步提昇串流畫質。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3acfa6a222.webp"><h2>3. 下載動畫<span><a href="#3-%E4%B8%8B%E8%BC%89%E5%8B%95%E7%95%AB" aria-label="定位點">#</a></span></h2><p>如果要下載播放中的動畫，只要在啟動指令加上<code>-d</code>就可以了。例如指定下載1080p畫質影片：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>ani-cli -d -q <span>1080</span>
</span></span></code></pre></div><p>這樣在選單中選定集數之後，就不會播放，而是改成直接下載影片到目前的工作目錄下。</p><p>如果要批次下載，指定一季的集數範圍：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>ani-cli -d -q <span>1080</span> -e 1-12
</span></span></code></pre></div><h2>4. 使用ani-skip自動跳過片頭曲<span><a href="#4-%E4%BD%BF%E7%94%A8ani-skip%E8%87%AA%E5%8B%95%E8%B7%B3%E9%81%8E%E7%89%87%E9%A0%AD%E6%9B%B2" aria-label="定位點">#</a></span></h2><p>這是獨立的指令稿，用於顯示跳過動畫OP的章節標記。它會以一組MPV播放器的引數呈現，播放影片會顯示一組時間軸標記。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-21c887b093.webp"><p>ani-cli的作者有整合了這個程式的邏輯，它會自動讀取可跳過片頭的動畫資料。</p><p>由於跳過時間軸的資料庫是社群貢獻的，較冷門的動畫可能就沒有相關資料。</p><ol><li>參考<a href="https://github.com/synacktraa/ani-skip" target="_blank">Github</a>，透過Git安裝ani-skip</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>git clone https://github.com/synacktraa/ani-skip.git
</span></span><span><span>
</span></span><span><span>sudo apt install mpv fzf
</span></span><span><span>
</span></span><span><span>sudo cp ani-skip/ani-skip /usr/local/bin
</span></span><span><span>
</span></span><span><span>mkdir -p ~/.config/mpv/scripts <span>&amp;&amp;</span> cp ani-skip/skip.lua ~/.config/mpv/scripts
</span></span></code></pre></div><ol start="2"><li>基本用法：</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 查詢動畫在MyAnimeList上的ID</span>
</span></span><span><span>ani-skip -q <span>"Attack On Titan"</span>
</span></span><span><span>
</span></span><span><span><span># 列出該集數可跳過的片段，會產生一組MPV引數</span>
</span></span><span><span>ani-skip -q <span>16498</span> -e <span>10</span>
</span></span></code></pre></div><ol start="3"><li>使用以下引數啟動ani-cli，播放時就會自動搜尋動畫名稱，並套用ani-skip的跳過規則。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>ani-cli --skip --skip-title <span>"Attack On Titan"</span>
</span></span></code></pre></div><h2>5. 同播共享<span><a href="#5-%E5%90%8C%E6%92%AD%E5%85%B1%E4%BA%AB" aria-label="定位點">#</a></span></h2><p>透過<a href="https://syncplay.pl/" target="_blank">Syncplay</a>伺服器，與其他人共享ani-cli的播放進度。這個軟體支援Linux、macOS、Windows、Android、iOS。</p><p>順帶一提，有個程式叫做<a href="https://github.com/Wraient/curd" target="_blank">Curd</a>，可以透過Discord分享影片。</p><ol><li>在兩部電腦上安裝Syncplay，開啟設定面板登入伺服器</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt install syncplay
</span></span></code></pre></div><ol start="2"><li>透過以下參數啟動ani-cli</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>ani-cli --syncplay
</span></span></code></pre></div><ol start="3"><li>這樣另一台電腦的Syncplay客戶端就會出現播放中的的影片列表了。</li></ol>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/ani-cli-anime-streaming/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bbc7f33f5a.webp"></a></p>
<p>ani-cli為一個讓您用終端機線上看動漫的小程式，可以自己看，也能跟朋友一起看，由pystardust開發。作者稱其為"A cli tool to browse and play anime."</p><p>該名開發者同時也是<a href="https://ivonblog.com/posts/ytfzf-usage" target="_blank">ytfzf - 終端機看Youtube</a>的作者。</p><p>什麼叫做用終端機看影片？不是用ASCII文字渲染影片啦 (ASCII animation) 。</p><p>具體來說ani-cli是讓你透過fzf的純文字界面線上搜尋動漫，然後呼叫MPV播放串流。你也可以將動畫下載到本機離線播放。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e1bfafc1ed.webp"><p>使用起來大概像是這樣：</p><video controls="">
</video><p>因為ani-cli本身只是個指令稿，能輕鬆支援各大作業系統，包含Linux、Windows、macOS、FreeBSD，甚至連Android手機也能看，只要有Termux終端機就行了！
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7defe89054.webp"></p><p>用終端機看動漫…說實在只能耍帥吧？極度簡潔的界面很適合i3、Sway、Hyprland等平鋪視窗管理器的用戶。由於使用MPV播放緣故，還可搭配<a href="https://ivonblog.com/posts/mpv-mvtools-linux/" target="_blank">MVTools ＋ Anime4K</a>提高影片畫質，補幀提升畫面效果。</p><p>ani-cli的片源滿齊全的，以前的到最新的動漫都有，還提供1080p高畫質串流。當然ani-cli的動漫片源不是正版網站，而是來自各大資源提供方。開發者在儲存庫提及的「盜版資源好homie」列表中，名為Saikou的APP因為版權因素使得Github儲存庫整個蒸發了，可憐哪。</p><p>最大的缺點嘛…ani-cli是為英語用戶設計的程式，所以<strong>片源全部都是英文字幕</strong>，你得自行下載漢化組發表的.srt字幕，再從MPV界面手動載入。</p><p>如果你英日文雙修那就往下看吧！</p><h2>1. 安裝ani-cli<span><a href="#1-%E5%AE%89%E8%A3%9Dani-cli" aria-label="定位點">#</a></span></h2><p>安裝說明參照<a href="https://github.com/pystardust/ani-cli" target="_blank">Github</a></p><h3>Linux<span><a href="#linux" aria-label="定位點">#</a></span></h3><p>Linux版的ani-cli可以從套件管理員裝，例如Ubuntu與Debian就是從官方套件庫安裝：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt install ani-cli
</span></span><span><span>
</span></span><span><span><span># 安裝之後能夠使用這個指令自我更新，防止套件庫版本過舊</span>
</span></span><span><span>sudo ani-cli -U
</span></span></code></pre></div><p>記得還要安裝<a href="https://ivonblog.com/posts/mpv-player-configuration/" target="_blank">原生套件版的MPV</a>。</p><h3>Android<span><a href="#android" aria-label="定位點">#</a></span></h3><ol><li><p>安裝<a href="https://ivonblog.com/posts/how-to-use-termux/" target="_blank">Termux</a></p></li><li><p>安裝<a href="https://github.com/mpv-android/mpv-android" target="_blank">Android版MPV</a></p></li><li><p>安裝ani-cli</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pkg install ani-cli termux-am
</span></span></code></pre></div><h2>2. 串流播放動畫<span><a href="#2-%E4%B8%B2%E6%B5%81%E6%92%AD%E6%94%BE%E5%8B%95%E7%95%AB" aria-label="定位點">#</a></span></h2><p>ani-cli使用方式很簡單，在終端機輸入：<code>ani-cli</code>，用英文搜尋動漫，按Enter，就會開啟fzf選單（你也可以加上<code>--rofi</code>引數改用另一種選單）</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-cd6d148e63.webp"><p>ani-cli目前不提供修改網站來源的功能，看來是隨機挑選的，因此可能會出現有些網站找不到特定動畫的情況，或是部份網站把畫質壓縮的比較糟糕。</p><p>列出季數，選取後再選取集數。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7b026321b6.webp"><p>選取集數就會播放了，一切操作都是那麼直覺。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-59a9cc0b61.webp"><p>因為ani-cli使用MPV播放，你可以搭配<a href="https://ivonblog.com/posts/mpv-mvtools-linux" target="_blank">MVTools ＋ Anime4K</a>進一步提昇串流畫質。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3acfa6a222.webp"><h2>3. 下載動畫<span><a href="#3-%E4%B8%8B%E8%BC%89%E5%8B%95%E7%95%AB" aria-label="定位點">#</a></span></h2><p>如果要下載播放中的動畫，只要在啟動指令加上<code>-d</code>就可以了。例如指定下載1080p畫質影片：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>ani-cli -d -q <span>1080</span>
</span></span></code></pre></div><p>這樣在選單中選定集數之後，就不會播放，而是改成直接下載影片到目前的工作目錄下。</p><p>如果要批次下載，指定一季的集數範圍：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>ani-cli -d -q <span>1080</span> -e 1-12
</span></span></code></pre></div><h2>4. 使用ani-skip自動跳過片頭曲<span><a href="#4-%E4%BD%BF%E7%94%A8ani-skip%E8%87%AA%E5%8B%95%E8%B7%B3%E9%81%8E%E7%89%87%E9%A0%AD%E6%9B%B2" aria-label="定位點">#</a></span></h2><p>這是獨立的指令稿，用於顯示跳過動畫OP的章節標記。它會以一組MPV播放器的引數呈現，播放影片會顯示一組時間軸標記。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-21c887b093.webp"><p>ani-cli的作者有整合了這個程式的邏輯，它會自動讀取可跳過片頭的動畫資料。</p><p>由於跳過時間軸的資料庫是社群貢獻的，較冷門的動畫可能就沒有相關資料。</p><ol><li>參考<a href="https://github.com/synacktraa/ani-skip" target="_blank">Github</a>，透過Git安裝ani-skip</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>git clone https://github.com/synacktraa/ani-skip.git
</span></span><span><span>
</span></span><span><span>sudo apt install mpv fzf
</span></span><span><span>
</span></span><span><span>sudo cp ani-skip/ani-skip /usr/local/bin
</span></span><span><span>
</span></span><span><span>mkdir -p ~/.config/mpv/scripts <span>&amp;&amp;</span> cp ani-skip/skip.lua ~/.config/mpv/scripts
</span></span></code></pre></div><ol start="2"><li>基本用法：</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 查詢動畫在MyAnimeList上的ID</span>
</span></span><span><span>ani-skip -q <span>"Attack On Titan"</span>
</span></span><span><span>
</span></span><span><span><span># 列出該集數可跳過的片段，會產生一組MPV引數</span>
</span></span><span><span>ani-skip -q <span>16498</span> -e <span>10</span>
</span></span></code></pre></div><ol start="3"><li>使用以下引數啟動ani-cli，播放時就會自動搜尋動畫名稱，並套用ani-skip的跳過規則。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>ani-cli --skip --skip-title <span>"Attack On Titan"</span>
</span></span></code></pre></div><h2>5. 同播共享<span><a href="#5-%E5%90%8C%E6%92%AD%E5%85%B1%E4%BA%AB" aria-label="定位點">#</a></span></h2><p>透過<a href="https://syncplay.pl/" target="_blank">Syncplay</a>伺服器，與其他人共享ani-cli的播放進度。這個軟體支援Linux、macOS、Windows、Android、iOS。</p><p>順帶一提，有個程式叫做<a href="https://github.com/Wraient/curd" target="_blank">Curd</a>，可以透過Discord分享影片。</p><ol><li>在兩部電腦上安裝Syncplay，開啟設定面板登入伺服器</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt install syncplay
</span></span></code></pre></div><ol start="2"><li>透過以下參數啟動ani-cli</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>ani-cli --syncplay
</span></span></code></pre></div><ol start="3"><li>這樣另一台電腦的Syncplay客戶端就會出現播放中的的影片列表了。</li></ol>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/ani-cli-anime-streaming/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bbc7f33f5a.webp"></a></p>
<p>ani-cli為一個讓您用終端機線上看動漫的小程式，可以自己看，也能跟朋友一起看，由pystardust開發。作者稱其為"A cli tool to browse and play anime."</p><p>該名開發者同時也是<a href="https://ivonblog.com/posts/ytfzf-usage" target="_blank">ytfzf - 終端機看Youtube</a>的作者。</p><p>什麼叫做用終端機看影片？不是用ASCII文字渲染影片啦 (ASCII animation) 。</p><p>具體來說ani-cli是讓你透過fzf的純文字界面線上搜尋動漫，然後呼叫MPV播放串流。你也可以將動畫下載到本機離線播放。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e1bfafc1ed.webp"><p>使用起來大概像是這樣：</p><video controls="">
</video><p>因為ani-cli本身只是個指令稿，能輕鬆支援各大作業系統，包含Linux、Windows、macOS、FreeBSD，甚至連Android手機也能看，只要有Termux終端機就行了！
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7defe89054.webp"></p><p>用終端機看動漫…說實在只能耍帥吧？極度簡潔的界面很適合i3、Sway、Hyprland等平鋪視窗管理器的用戶。由於使用MPV播放緣故，還可搭配<a href="https://ivonblog.com/posts/mpv-mvtools-linux/" target="_blank">MVTools ＋ Anime4K</a>提高影片畫質，補幀提升畫面效果。</p><p>ani-cli的片源滿齊全的，以前的到最新的動漫都有，還提供1080p高畫質串流。當然ani-cli的動漫片源不是正版網站，而是來自各大資源提供方。開發者在儲存庫提及的「盜版資源好homie」列表中，名為Saikou的APP因為版權因素使得Github儲存庫整個蒸發了，可憐哪。</p><p>最大的缺點嘛…ani-cli是為英語用戶設計的程式，所以<strong>片源全部都是英文字幕</strong>，你得自行下載漢化組發表的.srt字幕，再從MPV界面手動載入。</p><p>如果你英日文雙修那就往下看吧！</p><h2>1. 安裝ani-cli<span><a href="#1-%E5%AE%89%E8%A3%9Dani-cli" aria-label="定位點">#</a></span></h2><p>安裝說明參照<a href="https://github.com/pystardust/ani-cli" target="_blank">Github</a></p><h3>Linux<span><a href="#linux" aria-label="定位點">#</a></span></h3><p>Linux版的ani-cli可以從套件管理員裝，例如Ubuntu與Debian就是從官方套件庫安裝：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt install ani-cli
</span></span><span><span>
</span></span><span><span><span># 安裝之後能夠使用這個指令自我更新，防止套件庫版本過舊</span>
</span></span><span><span>sudo ani-cli -U
</span></span></code></pre></div><p>記得還要安裝<a href="https://ivonblog.com/posts/mpv-player-configuration/" target="_blank">原生套件版的MPV</a>。</p><h3>Android<span><a href="#android" aria-label="定位點">#</a></span></h3><ol><li><p>安裝<a href="https://ivonblog.com/posts/how-to-use-termux/" target="_blank">Termux</a></p></li><li><p>安裝<a href="https://github.com/mpv-android/mpv-android" target="_blank">Android版MPV</a></p></li><li><p>安裝ani-cli</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>pkg install ani-cli termux-am
</span></span></code></pre></div><h2>2. 串流播放動畫<span><a href="#2-%E4%B8%B2%E6%B5%81%E6%92%AD%E6%94%BE%E5%8B%95%E7%95%AB" aria-label="定位點">#</a></span></h2><p>ani-cli使用方式很簡單，在終端機輸入：<code>ani-cli</code>，用英文搜尋動漫，按Enter，就會開啟fzf選單（你也可以加上<code>--rofi</code>引數改用另一種選單）</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-cd6d148e63.webp"><p>ani-cli目前不提供修改網站來源的功能，看來是隨機挑選的，因此可能會出現有些網站找不到特定動畫的情況，或是部份網站把畫質壓縮的比較糟糕。</p><p>列出季數，選取後再選取集數。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7b026321b6.webp"><p>選取集數就會播放了，一切操作都是那麼直覺。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-59a9cc0b61.webp"><p>因為ani-cli使用MPV播放，你可以搭配<a href="https://ivonblog.com/posts/mpv-mvtools-linux" target="_blank">MVTools ＋ Anime4K</a>進一步提昇串流畫質。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3acfa6a222.webp"><h2>3. 下載動畫<span><a href="#3-%E4%B8%8B%E8%BC%89%E5%8B%95%E7%95%AB" aria-label="定位點">#</a></span></h2><p>如果要下載播放中的動畫，只要在啟動指令加上<code>-d</code>就可以了。例如指定下載1080p畫質影片：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>ani-cli -d -q <span>1080</span>
</span></span></code></pre></div><p>這樣在選單中選定集數之後，就不會播放，而是改成直接下載影片到目前的工作目錄下。</p><p>如果要批次下載，指定一季的集數範圍：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>ani-cli -d -q <span>1080</span> -e 1-12
</span></span></code></pre></div><h2>4. 使用ani-skip自動跳過片頭曲<span><a href="#4-%E4%BD%BF%E7%94%A8ani-skip%E8%87%AA%E5%8B%95%E8%B7%B3%E9%81%8E%E7%89%87%E9%A0%AD%E6%9B%B2" aria-label="定位點">#</a></span></h2><p>這是獨立的指令稿，用於顯示跳過動畫OP的章節標記。它會以一組MPV播放器的引數呈現，播放影片會顯示一組時間軸標記。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-21c887b093.webp"><p>ani-cli的作者有整合了這個程式的邏輯，它會自動讀取可跳過片頭的動畫資料。</p><p>由於跳過時間軸的資料庫是社群貢獻的，較冷門的動畫可能就沒有相關資料。</p><ol><li>參考<a href="https://github.com/synacktraa/ani-skip" target="_blank">Github</a>，透過Git安裝ani-skip</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>git clone https://github.com/synacktraa/ani-skip.git
</span></span><span><span>
</span></span><span><span>sudo apt install mpv fzf
</span></span><span><span>
</span></span><span><span>sudo cp ani-skip/ani-skip /usr/local/bin
</span></span><span><span>
</span></span><span><span>mkdir -p ~/.config/mpv/scripts <span>&amp;&amp;</span> cp ani-skip/skip.lua ~/.config/mpv/scripts
</span></span></code></pre></div><ol start="2"><li>基本用法：</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 查詢動畫在MyAnimeList上的ID</span>
</span></span><span><span>ani-skip -q <span>"Attack On Titan"</span>
</span></span><span><span>
</span></span><span><span><span># 列出該集數可跳過的片段，會產生一組MPV引數</span>
</span></span><span><span>ani-skip -q <span>16498</span> -e <span>10</span>
</span></span></code></pre></div><ol start="3"><li>使用以下引數啟動ani-cli，播放時就會自動搜尋動畫名稱，並套用ani-skip的跳過規則。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>ani-cli --skip --skip-title <span>"Attack On Titan"</span>
</span></span></code></pre></div><h2>5. 同播共享<span><a href="#5-%E5%90%8C%E6%92%AD%E5%85%B1%E4%BA%AB" aria-label="定位點">#</a></span></h2><p>透過<a href="https://syncplay.pl/" target="_blank">Syncplay</a>伺服器，與其他人共享ani-cli的播放進度。這個軟體支援Linux、macOS、Windows、Android、iOS。</p><p>順帶一提，有個程式叫做<a href="https://github.com/Wraient/curd" target="_blank">Curd</a>，可以透過Discord分享影片。</p><ol><li>在兩部電腦上安裝Syncplay，開啟設定面板登入伺服器</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt install syncplay
</span></span></code></pre></div><ol start="2"><li>透過以下參數啟動ani-cli</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>ani-cli --syncplay
</span></span></code></pre></div><ol start="3"><li>這樣另一台電腦的Syncplay客戶端就會出現播放中的的影片列表了。</li></ol>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bbc7f33f5a.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bbc7f33f5a.webp" medium="image"/>
    <pubDate>Tue, 23 Sep 2025 14:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[使用Linux放大鏡功能，放大螢幕局部畫面]]></title>
    <link>https://ivonblog.com/posts/linux-desktop-magnifier/</link>
    <itunes:title><![CDATA[使用Linux放大鏡功能，放大螢幕局部畫面]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/linux-desktop-magnifier/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9df23ffe5d.webp"></a></p>
<p>有時候在拍Linux教學影片的時候，因為畫面上字太小，我得在剪輯的時候額外加入放大效果。如果在拍攝階段直接叫出Linux的放大鏡功能，就能減少這類麻煩。</p><p>放大鏡 (Magnifier) 功能在拍教學影片的時候十分有用，當你想要強調特定功能的時候，點一下放大鏡就能讓觀眾看的更清楚。</p><p>在Wayland桌面工作階段，Firefox和Chromium瀏覽器都可以透過筆電觸控版雙指放大。不過這裡講的放大鏡功能比較不一樣，它是螢幕上任何地方都可以放大的！</p><p>放大鏡的功能應該是由桌面環境提供的，Linux使用Wayland協定的桌面環境都有提供放大鏡功能，無需額外安裝軟體。</p><p>註：如果你在尋找的是桌面環境縮放功能，請參閱<a href="https://ivonblog.com/posts/linux-wayland-scaling/" target="_blank">Linux Wayland桌面的縮放方式</a></p><h2>1. GNOME<span><a href="#1-gnome" aria-label="定位點">#</a></span></h2><p>GNOME 48，建議先點選系統設定 → 無障礙輔助，勾選永遠顯示無障礙選單</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-274f4fc58c.webp" alt="sg4.webp"><p>這樣的話就能從右上角的系統匣找到縮放按鈕。點選啟動放大鏡，或者按Windows鍵 + Alt + 8開關。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b26c999533.webp" alt="sg1.webp"><p>其餘詳細設定可以在無障礙輔助 → 縮放調整。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b2ed4d7f7e.webp" alt="sg3.webp"><p>例如在縮放的時候顯示一個大十字。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-0b52f1f0f1.webp" alt="sg5.webp"><h2>2. KDE Plasma<span><a href="#2-kde-plasma" aria-label="定位點">#</a></span></h2><p>KDE Plasma 6，點選系統設定 → 視窗管理 → 桌面效果設定</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-588f1b4bfb.webp" alt="sk1.webp"><p>KDE有縮放與放大鏡功能，二選一。</p><p>縮放快捷鍵：按Windows鍵 + ＋號鍵放大桌面，按－號縮小，整個畫面會跟著滑鼠移動。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-c530ef2a67.webp" alt="sk2.webp"><p>放大鏡快捷鍵：按Windows鍵 + ＋號鍵放大，按－號縮小。放大鏡是以滑鼠為中心顯示一個小區塊，只有滑鼠所在區塊的文字會放大。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-95a04321d2.webp" alt="sk3.webp"><p>順帶一提，快速上下甩四下滑鼠，KDE的游標就會暫時變大。</p>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/linux-desktop-magnifier/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9df23ffe5d.webp"></a></p>
<p>有時候在拍Linux教學影片的時候，因為畫面上字太小，我得在剪輯的時候額外加入放大效果。如果在拍攝階段直接叫出Linux的放大鏡功能，就能減少這類麻煩。</p><p>放大鏡 (Magnifier) 功能在拍教學影片的時候十分有用，當你想要強調特定功能的時候，點一下放大鏡就能讓觀眾看的更清楚。</p><p>在Wayland桌面工作階段，Firefox和Chromium瀏覽器都可以透過筆電觸控版雙指放大。不過這裡講的放大鏡功能比較不一樣，它是螢幕上任何地方都可以放大的！</p><p>放大鏡的功能應該是由桌面環境提供的，Linux使用Wayland協定的桌面環境都有提供放大鏡功能，無需額外安裝軟體。</p><p>註：如果你在尋找的是桌面環境縮放功能，請參閱<a href="https://ivonblog.com/posts/linux-wayland-scaling/" target="_blank">Linux Wayland桌面的縮放方式</a></p><h2>1. GNOME<span><a href="#1-gnome" aria-label="定位點">#</a></span></h2><p>GNOME 48，建議先點選系統設定 → 無障礙輔助，勾選永遠顯示無障礙選單</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-274f4fc58c.webp" alt="sg4.webp"><p>這樣的話就能從右上角的系統匣找到縮放按鈕。點選啟動放大鏡，或者按Windows鍵 + Alt + 8開關。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b26c999533.webp" alt="sg1.webp"><p>其餘詳細設定可以在無障礙輔助 → 縮放調整。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b2ed4d7f7e.webp" alt="sg3.webp"><p>例如在縮放的時候顯示一個大十字。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-0b52f1f0f1.webp" alt="sg5.webp"><h2>2. KDE Plasma<span><a href="#2-kde-plasma" aria-label="定位點">#</a></span></h2><p>KDE Plasma 6，點選系統設定 → 視窗管理 → 桌面效果設定</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-588f1b4bfb.webp" alt="sk1.webp"><p>KDE有縮放與放大鏡功能，二選一。</p><p>縮放快捷鍵：按Windows鍵 + ＋號鍵放大桌面，按－號縮小，整個畫面會跟著滑鼠移動。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-c530ef2a67.webp" alt="sk2.webp"><p>放大鏡快捷鍵：按Windows鍵 + ＋號鍵放大，按－號縮小。放大鏡是以滑鼠為中心顯示一個小區塊，只有滑鼠所在區塊的文字會放大。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-95a04321d2.webp" alt="sk3.webp"><p>順帶一提，快速上下甩四下滑鼠，KDE的游標就會暫時變大。</p>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/linux-desktop-magnifier/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9df23ffe5d.webp"></a></p>
<p>有時候在拍Linux教學影片的時候，因為畫面上字太小，我得在剪輯的時候額外加入放大效果。如果在拍攝階段直接叫出Linux的放大鏡功能，就能減少這類麻煩。</p><p>放大鏡 (Magnifier) 功能在拍教學影片的時候十分有用，當你想要強調特定功能的時候，點一下放大鏡就能讓觀眾看的更清楚。</p><p>在Wayland桌面工作階段，Firefox和Chromium瀏覽器都可以透過筆電觸控版雙指放大。不過這裡講的放大鏡功能比較不一樣，它是螢幕上任何地方都可以放大的！</p><p>放大鏡的功能應該是由桌面環境提供的，Linux使用Wayland協定的桌面環境都有提供放大鏡功能，無需額外安裝軟體。</p><p>註：如果你在尋找的是桌面環境縮放功能，請參閱<a href="https://ivonblog.com/posts/linux-wayland-scaling/" target="_blank">Linux Wayland桌面的縮放方式</a></p><h2>1. GNOME<span><a href="#1-gnome" aria-label="定位點">#</a></span></h2><p>GNOME 48，建議先點選系統設定 → 無障礙輔助，勾選永遠顯示無障礙選單</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-274f4fc58c.webp" alt="sg4.webp"><p>這樣的話就能從右上角的系統匣找到縮放按鈕。點選啟動放大鏡，或者按Windows鍵 + Alt + 8開關。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b26c999533.webp" alt="sg1.webp"><p>其餘詳細設定可以在無障礙輔助 → 縮放調整。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b2ed4d7f7e.webp" alt="sg3.webp"><p>例如在縮放的時候顯示一個大十字。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-0b52f1f0f1.webp" alt="sg5.webp"><h2>2. KDE Plasma<span><a href="#2-kde-plasma" aria-label="定位點">#</a></span></h2><p>KDE Plasma 6，點選系統設定 → 視窗管理 → 桌面效果設定</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-588f1b4bfb.webp" alt="sk1.webp"><p>KDE有縮放與放大鏡功能，二選一。</p><p>縮放快捷鍵：按Windows鍵 + ＋號鍵放大桌面，按－號縮小，整個畫面會跟著滑鼠移動。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-c530ef2a67.webp" alt="sk2.webp"><p>放大鏡快捷鍵：按Windows鍵 + ＋號鍵放大，按－號縮小。放大鏡是以滑鼠為中心顯示一個小區塊，只有滑鼠所在區塊的文字會放大。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-95a04321d2.webp" alt="sk3.webp"><p>順帶一提，快速上下甩四下滑鼠，KDE的游標就會暫時變大。</p>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9df23ffe5d.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9df23ffe5d.webp" medium="image"/>
    <pubDate>Wed, 17 Sep 2025 17:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[探討舊Chromecast 3電視棒的用途，搭配擷取卡讓手機投影到電腦]]></title>
    <link>https://ivonblog.com/posts/revivie-chromecast-3/</link>
    <itunes:title><![CDATA[探討舊Chromecast 3電視棒的用途，搭配擷取卡讓手機投影到電腦]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/revivie-chromecast-3/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-47973a1173.webp"></a></p>
<p>2019年購入的Chromecast 3可能是我買過最雞肋的智慧裝置，一直找不到這東西的用途。</p><p>Chromecast有出很多代，在第四代之前的版本沒有Android TV電視盒功能，僅僅是負責投影手機畫面到電視而已。這樣做的好處是隨便一台支援HDMI的傳統電視都能無縫升級為智慧電視。</p><p>但，在智慧電視以及智慧電視盒普及的當下，舊款Chromecast的用途越來越尷尬了。當初是因為便宜才買了Chromecast 3，想說方便投影影片。但是家中電視位置有Wifi收訊不良的問題，使用體驗不佳。Wifi 問題過了好幾年才解決。可是中間的時間，第四台業者給我家換了智慧電視盒，甚至電視盒本身就有內建Chromecast了，導致Chromecast 3在我手上就變得更雞肋了</p><p>現在嘗試探討這玩意還有什麼功能。即使它很雞肋，我希望能讓它變得不要那麼雞肋。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-45af9bae57.webp"><p>這東西還在用micro-USB呢。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-98695eb4af.webp"><h2>1. 外出時的大螢幕投影備品<span><a href="#1-%E5%A4%96%E5%87%BA%E6%99%82%E7%9A%84%E5%A4%A7%E8%9E%A2%E5%B9%95%E6%8A%95%E5%BD%B1%E5%82%99%E5%93%81" aria-label="定位點">#</a></span></h2><p>對一些數位遊牧的人士，外出需要大螢幕投影，Chromecast可能還真的有用處。</p><p>要注意的是，Chromecast一次只能連線到一個Wifi，要達成隨身攜帶的話就得用兩支手機，其中一支常用的手機開Wifi熱點讓Chromecast連線，接著用另外一支手機開啟Google Home初始化。這樣Chromecast才能隨時用手機熱點上網。</p><p>譬如旅遊需要看影片，將旅館電視插上Chromecast，就能從手機投影影片。</p><p>Google Home也可以投影整支手機的螢幕畫面，搭配<a href="https://ivonblog.com/posts/android-secondscreen/" target="_blank">SecondScreen</a>修改螢幕比例為電視的16：9，接上藍牙鍵盤，搭配<a href="https://ivonblog.com/posts/termux-x11/" target="_blank">Termux X11</a>跑電腦程式，勉強開始辦公。</p><p>Chromecast投影不限於手機，Linux和Windows都有很多程式支援Chromecast協定，譬如<a href="https://ivonblog.com/posts/cast-to-chromecast-from-linux/" target="_blank">MkCromecast</a>，他們都能夠投影電腦畫面到大螢幕上，雖然效率可能不會太好。</p><p>話說我之前還想過<a href="https://ivonblog.com/posts/build-a-chromecast-alternative-with-raspberry-pi/" target="_blank">用軟體自幹Chromecast替代品</a>來著…結果還是需要一個硬體中介裝置。</p><h2>2. 土砲智慧音箱<span><a href="#2-%E5%9C%9F%E7%A0%B2%E6%99%BA%E6%85%A7%E9%9F%B3%E7%AE%B1" aria-label="定位點">#</a></span></h2><p>相信我，直接買個藍牙音箱比較快！</p><p>部分APP能夠串流音樂到Chromecast，例如Spotify。</p><p>裝置一定要有HDMI輸入的孔，Chromecast才能作用。所以一般的3.5mm揚聲器是不可能的，要找一個音質比較好的螢幕。</p><p>除非，採用下述的擷取卡方案，才有可能解決Chromecast依賴HDMI的問題。</p><h2>3. 投影手機螢幕到電腦，當作Scrcpy或UxPlay替代品<span><a href="#3-%E6%8A%95%E5%BD%B1%E6%89%8B%E6%A9%9F%E8%9E%A2%E5%B9%95%E5%88%B0%E9%9B%BB%E8%85%A6%E7%95%B6%E4%BD%9Cscrcpy%E6%88%96uxplay%E6%9B%BF%E4%BB%A3%E5%93%81" aria-label="定位點">#</a></span></h2><p>最終極的變形，物盡其用。</p><p>最更瘋狂的想法，把Chromecast跟USB擷取卡連在一起，插到電腦上，就能從手機投影到電腦。</p><p>好處：Chromecast原本在投影的時候需要佔用一個HDMI訊源，整個電腦螢幕都被Chromecast佔據。若是透過擷取卡只會顯示一個視窗，並不會佔用整個螢幕的輸出！這代表它能跟電腦系統同時執行！</p><p>本來，我想打造一個投影手機到Linux電腦螢幕的系統，若是iOS的話可以跑<a href="https://ivonblog.com/posts/ios-airplay-uxplay/" target="_blank">UxPlay</a>，透過AirPlay協定投放。至於Android，還沒有人成功逆向出Chromecast伺服器，所以得依賴實體Chromecast裝置。雖說Android投影螢幕有<a href="https://ivonblog.com/posts/scrcpy-usage/" target="_blank">Scrcpy</a>這玩意，但畢竟Scrcpy還需要ADB打指令才能投影，而Chromecast投影操作比較直覺，只要從手機按個鈕就好了！</p><p>連接方式如圖，Chromecast獨立供電（看是要插座還是吃電腦USB），然後HDMI端插在擷取卡的頭，接著把擷取卡插到電腦上。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9932d17dfe.webp"><p>使用VLC → 開啟擷取裝置，播放擷取卡的畫面與音效，會顯示Chromecast的畫面。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6820ae5d3f.webp"><p>如此一來，就能隨時從手機投影畫面到電腦了！音效也會從電腦揚聲器出來。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-82927eb55b.webp">]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/revivie-chromecast-3/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-47973a1173.webp"></a></p>
<p>2019年購入的Chromecast 3可能是我買過最雞肋的智慧裝置，一直找不到這東西的用途。</p><p>Chromecast有出很多代，在第四代之前的版本沒有Android TV電視盒功能，僅僅是負責投影手機畫面到電視而已。這樣做的好處是隨便一台支援HDMI的傳統電視都能無縫升級為智慧電視。</p><p>但，在智慧電視以及智慧電視盒普及的當下，舊款Chromecast的用途越來越尷尬了。當初是因為便宜才買了Chromecast 3，想說方便投影影片。但是家中電視位置有Wifi收訊不良的問題，使用體驗不佳。Wifi 問題過了好幾年才解決。可是中間的時間，第四台業者給我家換了智慧電視盒，甚至電視盒本身就有內建Chromecast了，導致Chromecast 3在我手上就變得更雞肋了</p><p>現在嘗試探討這玩意還有什麼功能。即使它很雞肋，我希望能讓它變得不要那麼雞肋。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-45af9bae57.webp"><p>這東西還在用micro-USB呢。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-98695eb4af.webp"><h2>1. 外出時的大螢幕投影備品<span><a href="#1-%E5%A4%96%E5%87%BA%E6%99%82%E7%9A%84%E5%A4%A7%E8%9E%A2%E5%B9%95%E6%8A%95%E5%BD%B1%E5%82%99%E5%93%81" aria-label="定位點">#</a></span></h2><p>對一些數位遊牧的人士，外出需要大螢幕投影，Chromecast可能還真的有用處。</p><p>要注意的是，Chromecast一次只能連線到一個Wifi，要達成隨身攜帶的話就得用兩支手機，其中一支常用的手機開Wifi熱點讓Chromecast連線，接著用另外一支手機開啟Google Home初始化。這樣Chromecast才能隨時用手機熱點上網。</p><p>譬如旅遊需要看影片，將旅館電視插上Chromecast，就能從手機投影影片。</p><p>Google Home也可以投影整支手機的螢幕畫面，搭配<a href="https://ivonblog.com/posts/android-secondscreen/" target="_blank">SecondScreen</a>修改螢幕比例為電視的16：9，接上藍牙鍵盤，搭配<a href="https://ivonblog.com/posts/termux-x11/" target="_blank">Termux X11</a>跑電腦程式，勉強開始辦公。</p><p>Chromecast投影不限於手機，Linux和Windows都有很多程式支援Chromecast協定，譬如<a href="https://ivonblog.com/posts/cast-to-chromecast-from-linux/" target="_blank">MkCromecast</a>，他們都能夠投影電腦畫面到大螢幕上，雖然效率可能不會太好。</p><p>話說我之前還想過<a href="https://ivonblog.com/posts/build-a-chromecast-alternative-with-raspberry-pi/" target="_blank">用軟體自幹Chromecast替代品</a>來著…結果還是需要一個硬體中介裝置。</p><h2>2. 土砲智慧音箱<span><a href="#2-%E5%9C%9F%E7%A0%B2%E6%99%BA%E6%85%A7%E9%9F%B3%E7%AE%B1" aria-label="定位點">#</a></span></h2><p>相信我，直接買個藍牙音箱比較快！</p><p>部分APP能夠串流音樂到Chromecast，例如Spotify。</p><p>裝置一定要有HDMI輸入的孔，Chromecast才能作用。所以一般的3.5mm揚聲器是不可能的，要找一個音質比較好的螢幕。</p><p>除非，採用下述的擷取卡方案，才有可能解決Chromecast依賴HDMI的問題。</p><h2>3. 投影手機螢幕到電腦，當作Scrcpy或UxPlay替代品<span><a href="#3-%E6%8A%95%E5%BD%B1%E6%89%8B%E6%A9%9F%E8%9E%A2%E5%B9%95%E5%88%B0%E9%9B%BB%E8%85%A6%E7%95%B6%E4%BD%9Cscrcpy%E6%88%96uxplay%E6%9B%BF%E4%BB%A3%E5%93%81" aria-label="定位點">#</a></span></h2><p>最終極的變形，物盡其用。</p><p>最更瘋狂的想法，把Chromecast跟USB擷取卡連在一起，插到電腦上，就能從手機投影到電腦。</p><p>好處：Chromecast原本在投影的時候需要佔用一個HDMI訊源，整個電腦螢幕都被Chromecast佔據。若是透過擷取卡只會顯示一個視窗，並不會佔用整個螢幕的輸出！這代表它能跟電腦系統同時執行！</p><p>本來，我想打造一個投影手機到Linux電腦螢幕的系統，若是iOS的話可以跑<a href="https://ivonblog.com/posts/ios-airplay-uxplay/" target="_blank">UxPlay</a>，透過AirPlay協定投放。至於Android，還沒有人成功逆向出Chromecast伺服器，所以得依賴實體Chromecast裝置。雖說Android投影螢幕有<a href="https://ivonblog.com/posts/scrcpy-usage/" target="_blank">Scrcpy</a>這玩意，但畢竟Scrcpy還需要ADB打指令才能投影，而Chromecast投影操作比較直覺，只要從手機按個鈕就好了！</p><p>連接方式如圖，Chromecast獨立供電（看是要插座還是吃電腦USB），然後HDMI端插在擷取卡的頭，接著把擷取卡插到電腦上。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9932d17dfe.webp"><p>使用VLC → 開啟擷取裝置，播放擷取卡的畫面與音效，會顯示Chromecast的畫面。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6820ae5d3f.webp"><p>如此一來，就能隨時從手機投影畫面到電腦了！音效也會從電腦揚聲器出來。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-82927eb55b.webp">]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/revivie-chromecast-3/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-47973a1173.webp"></a></p>
<p>2019年購入的Chromecast 3可能是我買過最雞肋的智慧裝置，一直找不到這東西的用途。</p><p>Chromecast有出很多代，在第四代之前的版本沒有Android TV電視盒功能，僅僅是負責投影手機畫面到電視而已。這樣做的好處是隨便一台支援HDMI的傳統電視都能無縫升級為智慧電視。</p><p>但，在智慧電視以及智慧電視盒普及的當下，舊款Chromecast的用途越來越尷尬了。當初是因為便宜才買了Chromecast 3，想說方便投影影片。但是家中電視位置有Wifi收訊不良的問題，使用體驗不佳。Wifi 問題過了好幾年才解決。可是中間的時間，第四台業者給我家換了智慧電視盒，甚至電視盒本身就有內建Chromecast了，導致Chromecast 3在我手上就變得更雞肋了</p><p>現在嘗試探討這玩意還有什麼功能。即使它很雞肋，我希望能讓它變得不要那麼雞肋。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-45af9bae57.webp"><p>這東西還在用micro-USB呢。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-98695eb4af.webp"><h2>1. 外出時的大螢幕投影備品<span><a href="#1-%E5%A4%96%E5%87%BA%E6%99%82%E7%9A%84%E5%A4%A7%E8%9E%A2%E5%B9%95%E6%8A%95%E5%BD%B1%E5%82%99%E5%93%81" aria-label="定位點">#</a></span></h2><p>對一些數位遊牧的人士，外出需要大螢幕投影，Chromecast可能還真的有用處。</p><p>要注意的是，Chromecast一次只能連線到一個Wifi，要達成隨身攜帶的話就得用兩支手機，其中一支常用的手機開Wifi熱點讓Chromecast連線，接著用另外一支手機開啟Google Home初始化。這樣Chromecast才能隨時用手機熱點上網。</p><p>譬如旅遊需要看影片，將旅館電視插上Chromecast，就能從手機投影影片。</p><p>Google Home也可以投影整支手機的螢幕畫面，搭配<a href="https://ivonblog.com/posts/android-secondscreen/" target="_blank">SecondScreen</a>修改螢幕比例為電視的16：9，接上藍牙鍵盤，搭配<a href="https://ivonblog.com/posts/termux-x11/" target="_blank">Termux X11</a>跑電腦程式，勉強開始辦公。</p><p>Chromecast投影不限於手機，Linux和Windows都有很多程式支援Chromecast協定，譬如<a href="https://ivonblog.com/posts/cast-to-chromecast-from-linux/" target="_blank">MkCromecast</a>，他們都能夠投影電腦畫面到大螢幕上，雖然效率可能不會太好。</p><p>話說我之前還想過<a href="https://ivonblog.com/posts/build-a-chromecast-alternative-with-raspberry-pi/" target="_blank">用軟體自幹Chromecast替代品</a>來著…結果還是需要一個硬體中介裝置。</p><h2>2. 土砲智慧音箱<span><a href="#2-%E5%9C%9F%E7%A0%B2%E6%99%BA%E6%85%A7%E9%9F%B3%E7%AE%B1" aria-label="定位點">#</a></span></h2><p>相信我，直接買個藍牙音箱比較快！</p><p>部分APP能夠串流音樂到Chromecast，例如Spotify。</p><p>裝置一定要有HDMI輸入的孔，Chromecast才能作用。所以一般的3.5mm揚聲器是不可能的，要找一個音質比較好的螢幕。</p><p>除非，採用下述的擷取卡方案，才有可能解決Chromecast依賴HDMI的問題。</p><h2>3. 投影手機螢幕到電腦，當作Scrcpy或UxPlay替代品<span><a href="#3-%E6%8A%95%E5%BD%B1%E6%89%8B%E6%A9%9F%E8%9E%A2%E5%B9%95%E5%88%B0%E9%9B%BB%E8%85%A6%E7%95%B6%E4%BD%9Cscrcpy%E6%88%96uxplay%E6%9B%BF%E4%BB%A3%E5%93%81" aria-label="定位點">#</a></span></h2><p>最終極的變形，物盡其用。</p><p>最更瘋狂的想法，把Chromecast跟USB擷取卡連在一起，插到電腦上，就能從手機投影到電腦。</p><p>好處：Chromecast原本在投影的時候需要佔用一個HDMI訊源，整個電腦螢幕都被Chromecast佔據。若是透過擷取卡只會顯示一個視窗，並不會佔用整個螢幕的輸出！這代表它能跟電腦系統同時執行！</p><p>本來，我想打造一個投影手機到Linux電腦螢幕的系統，若是iOS的話可以跑<a href="https://ivonblog.com/posts/ios-airplay-uxplay/" target="_blank">UxPlay</a>，透過AirPlay協定投放。至於Android，還沒有人成功逆向出Chromecast伺服器，所以得依賴實體Chromecast裝置。雖說Android投影螢幕有<a href="https://ivonblog.com/posts/scrcpy-usage/" target="_blank">Scrcpy</a>這玩意，但畢竟Scrcpy還需要ADB打指令才能投影，而Chromecast投影操作比較直覺，只要從手機按個鈕就好了！</p><p>連接方式如圖，Chromecast獨立供電（看是要插座還是吃電腦USB），然後HDMI端插在擷取卡的頭，接著把擷取卡插到電腦上。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-9932d17dfe.webp"><p>使用VLC → 開啟擷取裝置，播放擷取卡的畫面與音效，會顯示Chromecast的畫面。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6820ae5d3f.webp"><p>如此一來，就能隨時從手機投影畫面到電腦了！音效也會從電腦揚聲器出來。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-82927eb55b.webp">]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-47973a1173.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-47973a1173.webp" medium="image"/>
    <pubDate>Tue, 16 Sep 2025 09:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[架設Redlib替代前端，免登入瀏覽Reddit sub貼文，防止Reddit窺探隱私]]></title>
    <link>https://ivonblog.com/posts/redlib-reddit-private-frontend/</link>
    <itunes:title><![CDATA[架設Redlib替代前端，免登入瀏覽Reddit sub貼文，防止Reddit窺探隱私]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/redlib-reddit-private-frontend/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-02e4bb4a13.webp"></a></p>
<p>Redlib是一個尊重使用者隱私的Reddit替代前端。</p><p>之所以想裝這個，如果不登入Reddit帳號，就會無法瀏覽NSFW sub。是否為NSFW看Mod決定，不論內容是否真的為NSFW。但Reddit逼你下載客戶端的行為，看上去很惱人！</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-8eae9e62af.webp"><p>所以我決定自己架設一個瀏覽Reddit的前端，使用開源社群製作的專案：Redlib。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6eaf1a029a.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-2fcfc8968f.webp"><p>Redlib舊稱libreddit，這個前端能做到免登入帳號，瀏覽Reddit大多數sub的貼文，包括啟用NSFW的sub，這樣就不用怕瀏覽紀錄被站方追蹤了。並且可以透過自訂環境變數的方式，訂閱特定的sub並顯示在首頁，達成類似Reddit Custom Feed的體驗。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bb6f3b2829.webp"><p>它還提供隱藏Upvote與Downvote分數的功能，還你一個乾淨的瀏覽體驗。網頁版面簡潔，會跟著螢幕大小自動變化，提供多種內建主題。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-82824b3611.webp"><p>自從2023年Reddit官方對第三方API收費之後，這個專案一度沉寂了下來，後來社群找到了破解方法！</p><p>雖然Redlib有很多公共站台可以用，但是大部分都在外國，瀏覽速度很慢，不如我自己裝設一個就好了吧。</p><h2>1. 用Docker部署Redlib<span><a href="#1-%E7%94%A8docker%E9%83%A8%E7%BD%B2redlib" aria-label="定位點">#</a></span></h2><p>以下內容參考<a href="https://github.com/redlib-org/redlib" target="_blank">Github說明</a></p><ol><li><p>在Linux<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">安裝Docker</a></p></li><li><p>新增資料目錄</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>mkdir ~/redlib
</span></span><span><span>
</span></span><span><span><span>cd</span> redlib
</span></span><span><span>
</span></span><span><span>touch docker-compose.yml
</span></span><span><span>
</span></span><span><span>touch .env
</span></span></code></pre></div><ol start="3"><li>編輯docker-compose，填入以下內容。Redlib本身不用任何volume儲存資料。</li></ol><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>redlib</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>quay.io/redlib/redlib:latest</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>always</span><span>
</span></span></span><span><span><span>    </span><span>container_name</span><span>:</span><span> </span><span>"redlib"</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>8080</span><span>:</span><span>8080</span><span> </span><span># 左邊是暴露的通訊埠，若使用反向代理，改成`127.0.0.1:8080:8080`</span><span>
</span></span></span><span><span><span>    </span><span>user</span><span>:</span><span> </span><span>nobody</span><span>
</span></span></span><span><span><span>    </span><span>read_only</span><span>:</span><span> </span><span>true</span><span>
</span></span></span><span><span><span>    </span><span>security_opt</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>no</span>-<span>new-privileges:true</span><span>
</span></span></span><span><span><span>    </span><span>cap_drop</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>ALL</span><span>
</span></span></span><span><span><span>    </span><span>env_file</span><span>:</span><span> </span><span>.env</span><span>
</span></span></span><span><span><span>    </span><span>networks</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>redlib</span><span>
</span></span></span><span><span><span>    </span><span>healthcheck</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>test</span><span>:</span><span> </span><span>[</span><span>"CMD"</span><span>,</span><span> </span><span>"wget"</span><span>,</span><span> </span><span>"--spider"</span><span>,</span><span> </span><span>"-q"</span><span>,</span><span> </span><span>"--tries=1"</span><span>,</span><span> </span><span>"http://localhost:8080/settings"</span><span>]</span><span>
</span></span></span><span><span><span>      </span><span>interval</span><span>:</span><span> </span><span>5m</span><span>
</span></span></span><span><span><span>      </span><span>timeout</span><span>:</span><span> </span><span>3s</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>networks</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>redlib</span><span>:</span><span>
</span></span></span></code></pre></div><ol start="4"><li>編輯環境變數<code>.env</code>，啟用以下幾個我覺得有必要開啟的選項，其餘維持預設值。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 啟用NSFW</span>
</span></span><span><span><span>REDLIB_SFW_ONLY</span><span>=</span>off
</span></span><span><span>
</span></span><span><span><span># 自訂標題</span>
</span></span><span><span><span>REDLIB_BANNER</span><span>=</span>Redlib
</span></span><span><span>
</span></span><span><span><span># 禁止搜尋引擎索引</span>
</span></span><span><span><span>REDLIB_ROBOTS_DISABLE_INDEXING</span><span>=</span>on
</span></span><span><span>
</span></span><span><span><span># 關閉劇透模糊</span>
</span></span><span><span><span>REDLIB_DEFAULT_BLUR_SPOILER</span><span>=</span>off
</span></span><span><span>
</span></span><span><span><span># 顯示NSFW貼文</span>
</span></span><span><span><span>REDLIB_DEFAULT_SHOW_NSFW</span><span>=</span>on
</span></span><span><span><span>REDLIB_DEFAULT_BLUR_NSFW</span><span>=</span>off
</span></span><span><span>
</span></span><span><span><span># 使用HLS播放高畫質影片</span>
</span></span><span><span><span>REDLIB_DEFAULT_USE_HLS</span><span>=</span>on
</span></span><span><span>
</span></span><span><span><span># 顯示在首頁的訂閱sub，用+號分隔</span>
</span></span><span><span><span>REDLIB_DEFAULT_SUBSCRIPTIONS</span><span>=</span>linuxmemes+goodanimemes+china_irl
</span></span><span><span>
</span></span><span><span><span># 在首頁封鎖的sub</span>
</span></span><span><span><span>REDLIB_DEFAULT_FILTERS</span><span>=</span>politics+memes+taiwanese
</span></span><span><span>
</span></span><span><span><span># 顯示獎勵數量</span>
</span></span><span><span><span>REDLIB_DEFAULT_HIDE_AWARDS</span><span>=</span>off
</span></span><span><span>
</span></span><span><span><span># 顯示Upvote與Downvote數</span>
</span></span><span><span><span>REDLIB_DEFAULT_HIDE_SCORE</span><span>=</span>off
</span></span></code></pre></div><ol start="5"><li>啟動容器</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>docker compose up -d
</span></span></code></pre></div><ol start="6"><li><p>使用瀏覽器打開<code>http://Linux伺服器IP:8080</code>存取網頁。</p></li><li><p>如果有必要的話，可以使用<a href="https://ivonblog.com/posts/my-self-hosting-setup/" target="_blank">內網穿透軟體</a>從外網存取。</p></li><li><p>順帶一提，如果架設Redlib公共站台要避免被濫用的話，可以將其接在Cloudflare或Techaro Anubis後面，對來訪者做人機驗證。</p></li></ol><h2>2. 如何訂閱sub<span><a href="#2-%E5%A6%82%E4%BD%95%E8%A8%82%E9%96%B1sub" aria-label="定位點">#</a></span></h2><p>訂閱的sub會顯示在首頁左上角的Feed按鈕。</p><p>可以在Redlib的環境變數<code>REDLIB_DEFAULT_SUBSCRIPTION=</code>裡面定義要訂閱的sub。</p><p>或者手動在Redlib網頁進入Sub，點選subscribe。不過，這個訂閱紀錄是存在瀏覽器cookie裡面的，要備份不方便，得手動在右上角的Settings底部匯出。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bc2a604552.webp"><p>殂果是自己要用的而已，建議直接在Redlib的環境變數裡面定義。</p>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/redlib-reddit-private-frontend/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-02e4bb4a13.webp"></a></p>
<p>Redlib是一個尊重使用者隱私的Reddit替代前端。</p><p>之所以想裝這個，如果不登入Reddit帳號，就會無法瀏覽NSFW sub。是否為NSFW看Mod決定，不論內容是否真的為NSFW。但Reddit逼你下載客戶端的行為，看上去很惱人！</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-8eae9e62af.webp"><p>所以我決定自己架設一個瀏覽Reddit的前端，使用開源社群製作的專案：Redlib。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6eaf1a029a.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-2fcfc8968f.webp"><p>Redlib舊稱libreddit，這個前端能做到免登入帳號，瀏覽Reddit大多數sub的貼文，包括啟用NSFW的sub，這樣就不用怕瀏覽紀錄被站方追蹤了。並且可以透過自訂環境變數的方式，訂閱特定的sub並顯示在首頁，達成類似Reddit Custom Feed的體驗。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bb6f3b2829.webp"><p>它還提供隱藏Upvote與Downvote分數的功能，還你一個乾淨的瀏覽體驗。網頁版面簡潔，會跟著螢幕大小自動變化，提供多種內建主題。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-82824b3611.webp"><p>自從2023年Reddit官方對第三方API收費之後，這個專案一度沉寂了下來，後來社群找到了破解方法！</p><p>雖然Redlib有很多公共站台可以用，但是大部分都在外國，瀏覽速度很慢，不如我自己裝設一個就好了吧。</p><h2>1. 用Docker部署Redlib<span><a href="#1-%E7%94%A8docker%E9%83%A8%E7%BD%B2redlib" aria-label="定位點">#</a></span></h2><p>以下內容參考<a href="https://github.com/redlib-org/redlib" target="_blank">Github說明</a></p><ol><li><p>在Linux<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">安裝Docker</a></p></li><li><p>新增資料目錄</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>mkdir ~/redlib
</span></span><span><span>
</span></span><span><span><span>cd</span> redlib
</span></span><span><span>
</span></span><span><span>touch docker-compose.yml
</span></span><span><span>
</span></span><span><span>touch .env
</span></span></code></pre></div><ol start="3"><li>編輯docker-compose，填入以下內容。Redlib本身不用任何volume儲存資料。</li></ol><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>redlib</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>quay.io/redlib/redlib:latest</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>always</span><span>
</span></span></span><span><span><span>    </span><span>container_name</span><span>:</span><span> </span><span>"redlib"</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>8080</span><span>:</span><span>8080</span><span> </span><span># 左邊是暴露的通訊埠，若使用反向代理，改成`127.0.0.1:8080:8080`</span><span>
</span></span></span><span><span><span>    </span><span>user</span><span>:</span><span> </span><span>nobody</span><span>
</span></span></span><span><span><span>    </span><span>read_only</span><span>:</span><span> </span><span>true</span><span>
</span></span></span><span><span><span>    </span><span>security_opt</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>no</span>-<span>new-privileges:true</span><span>
</span></span></span><span><span><span>    </span><span>cap_drop</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>ALL</span><span>
</span></span></span><span><span><span>    </span><span>env_file</span><span>:</span><span> </span><span>.env</span><span>
</span></span></span><span><span><span>    </span><span>networks</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>redlib</span><span>
</span></span></span><span><span><span>    </span><span>healthcheck</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>test</span><span>:</span><span> </span><span>[</span><span>"CMD"</span><span>,</span><span> </span><span>"wget"</span><span>,</span><span> </span><span>"--spider"</span><span>,</span><span> </span><span>"-q"</span><span>,</span><span> </span><span>"--tries=1"</span><span>,</span><span> </span><span>"http://localhost:8080/settings"</span><span>]</span><span>
</span></span></span><span><span><span>      </span><span>interval</span><span>:</span><span> </span><span>5m</span><span>
</span></span></span><span><span><span>      </span><span>timeout</span><span>:</span><span> </span><span>3s</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>networks</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>redlib</span><span>:</span><span>
</span></span></span></code></pre></div><ol start="4"><li>編輯環境變數<code>.env</code>，啟用以下幾個我覺得有必要開啟的選項，其餘維持預設值。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 啟用NSFW</span>
</span></span><span><span><span>REDLIB_SFW_ONLY</span><span>=</span>off
</span></span><span><span>
</span></span><span><span><span># 自訂標題</span>
</span></span><span><span><span>REDLIB_BANNER</span><span>=</span>Redlib
</span></span><span><span>
</span></span><span><span><span># 禁止搜尋引擎索引</span>
</span></span><span><span><span>REDLIB_ROBOTS_DISABLE_INDEXING</span><span>=</span>on
</span></span><span><span>
</span></span><span><span><span># 關閉劇透模糊</span>
</span></span><span><span><span>REDLIB_DEFAULT_BLUR_SPOILER</span><span>=</span>off
</span></span><span><span>
</span></span><span><span><span># 顯示NSFW貼文</span>
</span></span><span><span><span>REDLIB_DEFAULT_SHOW_NSFW</span><span>=</span>on
</span></span><span><span><span>REDLIB_DEFAULT_BLUR_NSFW</span><span>=</span>off
</span></span><span><span>
</span></span><span><span><span># 使用HLS播放高畫質影片</span>
</span></span><span><span><span>REDLIB_DEFAULT_USE_HLS</span><span>=</span>on
</span></span><span><span>
</span></span><span><span><span># 顯示在首頁的訂閱sub，用+號分隔</span>
</span></span><span><span><span>REDLIB_DEFAULT_SUBSCRIPTIONS</span><span>=</span>linuxmemes+goodanimemes+china_irl
</span></span><span><span>
</span></span><span><span><span># 在首頁封鎖的sub</span>
</span></span><span><span><span>REDLIB_DEFAULT_FILTERS</span><span>=</span>politics+memes+taiwanese
</span></span><span><span>
</span></span><span><span><span># 顯示獎勵數量</span>
</span></span><span><span><span>REDLIB_DEFAULT_HIDE_AWARDS</span><span>=</span>off
</span></span><span><span>
</span></span><span><span><span># 顯示Upvote與Downvote數</span>
</span></span><span><span><span>REDLIB_DEFAULT_HIDE_SCORE</span><span>=</span>off
</span></span></code></pre></div><ol start="5"><li>啟動容器</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>docker compose up -d
</span></span></code></pre></div><ol start="6"><li><p>使用瀏覽器打開<code>http://Linux伺服器IP:8080</code>存取網頁。</p></li><li><p>如果有必要的話，可以使用<a href="https://ivonblog.com/posts/my-self-hosting-setup/" target="_blank">內網穿透軟體</a>從外網存取。</p></li><li><p>順帶一提，如果架設Redlib公共站台要避免被濫用的話，可以將其接在Cloudflare或Techaro Anubis後面，對來訪者做人機驗證。</p></li></ol><h2>2. 如何訂閱sub<span><a href="#2-%E5%A6%82%E4%BD%95%E8%A8%82%E9%96%B1sub" aria-label="定位點">#</a></span></h2><p>訂閱的sub會顯示在首頁左上角的Feed按鈕。</p><p>可以在Redlib的環境變數<code>REDLIB_DEFAULT_SUBSCRIPTION=</code>裡面定義要訂閱的sub。</p><p>或者手動在Redlib網頁進入Sub，點選subscribe。不過，這個訂閱紀錄是存在瀏覽器cookie裡面的，要備份不方便，得手動在右上角的Settings底部匯出。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bc2a604552.webp"><p>殂果是自己要用的而已，建議直接在Redlib的環境變數裡面定義。</p>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/redlib-reddit-private-frontend/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-02e4bb4a13.webp"></a></p>
<p>Redlib是一個尊重使用者隱私的Reddit替代前端。</p><p>之所以想裝這個，如果不登入Reddit帳號，就會無法瀏覽NSFW sub。是否為NSFW看Mod決定，不論內容是否真的為NSFW。但Reddit逼你下載客戶端的行為，看上去很惱人！</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-8eae9e62af.webp"><p>所以我決定自己架設一個瀏覽Reddit的前端，使用開源社群製作的專案：Redlib。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6eaf1a029a.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-2fcfc8968f.webp"><p>Redlib舊稱libreddit，這個前端能做到免登入帳號，瀏覽Reddit大多數sub的貼文，包括啟用NSFW的sub，這樣就不用怕瀏覽紀錄被站方追蹤了。並且可以透過自訂環境變數的方式，訂閱特定的sub並顯示在首頁，達成類似Reddit Custom Feed的體驗。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bb6f3b2829.webp"><p>它還提供隱藏Upvote與Downvote分數的功能，還你一個乾淨的瀏覽體驗。網頁版面簡潔，會跟著螢幕大小自動變化，提供多種內建主題。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-82824b3611.webp"><p>自從2023年Reddit官方對第三方API收費之後，這個專案一度沉寂了下來，後來社群找到了破解方法！</p><p>雖然Redlib有很多公共站台可以用，但是大部分都在外國，瀏覽速度很慢，不如我自己裝設一個就好了吧。</p><h2>1. 用Docker部署Redlib<span><a href="#1-%E7%94%A8docker%E9%83%A8%E7%BD%B2redlib" aria-label="定位點">#</a></span></h2><p>以下內容參考<a href="https://github.com/redlib-org/redlib" target="_blank">Github說明</a></p><ol><li><p>在Linux<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">安裝Docker</a></p></li><li><p>新增資料目錄</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>mkdir ~/redlib
</span></span><span><span>
</span></span><span><span><span>cd</span> redlib
</span></span><span><span>
</span></span><span><span>touch docker-compose.yml
</span></span><span><span>
</span></span><span><span>touch .env
</span></span></code></pre></div><ol start="3"><li>編輯docker-compose，填入以下內容。Redlib本身不用任何volume儲存資料。</li></ol><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>redlib</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>quay.io/redlib/redlib:latest</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>always</span><span>
</span></span></span><span><span><span>    </span><span>container_name</span><span>:</span><span> </span><span>"redlib"</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>8080</span><span>:</span><span>8080</span><span> </span><span># 左邊是暴露的通訊埠，若使用反向代理，改成`127.0.0.1:8080:8080`</span><span>
</span></span></span><span><span><span>    </span><span>user</span><span>:</span><span> </span><span>nobody</span><span>
</span></span></span><span><span><span>    </span><span>read_only</span><span>:</span><span> </span><span>true</span><span>
</span></span></span><span><span><span>    </span><span>security_opt</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>no</span>-<span>new-privileges:true</span><span>
</span></span></span><span><span><span>    </span><span>cap_drop</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>ALL</span><span>
</span></span></span><span><span><span>    </span><span>env_file</span><span>:</span><span> </span><span>.env</span><span>
</span></span></span><span><span><span>    </span><span>networks</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>redlib</span><span>
</span></span></span><span><span><span>    </span><span>healthcheck</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>test</span><span>:</span><span> </span><span>[</span><span>"CMD"</span><span>,</span><span> </span><span>"wget"</span><span>,</span><span> </span><span>"--spider"</span><span>,</span><span> </span><span>"-q"</span><span>,</span><span> </span><span>"--tries=1"</span><span>,</span><span> </span><span>"http://localhost:8080/settings"</span><span>]</span><span>
</span></span></span><span><span><span>      </span><span>interval</span><span>:</span><span> </span><span>5m</span><span>
</span></span></span><span><span><span>      </span><span>timeout</span><span>:</span><span> </span><span>3s</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>networks</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>redlib</span><span>:</span><span>
</span></span></span></code></pre></div><ol start="4"><li>編輯環境變數<code>.env</code>，啟用以下幾個我覺得有必要開啟的選項，其餘維持預設值。</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span># 啟用NSFW</span>
</span></span><span><span><span>REDLIB_SFW_ONLY</span><span>=</span>off
</span></span><span><span>
</span></span><span><span><span># 自訂標題</span>
</span></span><span><span><span>REDLIB_BANNER</span><span>=</span>Redlib
</span></span><span><span>
</span></span><span><span><span># 禁止搜尋引擎索引</span>
</span></span><span><span><span>REDLIB_ROBOTS_DISABLE_INDEXING</span><span>=</span>on
</span></span><span><span>
</span></span><span><span><span># 關閉劇透模糊</span>
</span></span><span><span><span>REDLIB_DEFAULT_BLUR_SPOILER</span><span>=</span>off
</span></span><span><span>
</span></span><span><span><span># 顯示NSFW貼文</span>
</span></span><span><span><span>REDLIB_DEFAULT_SHOW_NSFW</span><span>=</span>on
</span></span><span><span><span>REDLIB_DEFAULT_BLUR_NSFW</span><span>=</span>off
</span></span><span><span>
</span></span><span><span><span># 使用HLS播放高畫質影片</span>
</span></span><span><span><span>REDLIB_DEFAULT_USE_HLS</span><span>=</span>on
</span></span><span><span>
</span></span><span><span><span># 顯示在首頁的訂閱sub，用+號分隔</span>
</span></span><span><span><span>REDLIB_DEFAULT_SUBSCRIPTIONS</span><span>=</span>linuxmemes+goodanimemes+china_irl
</span></span><span><span>
</span></span><span><span><span># 在首頁封鎖的sub</span>
</span></span><span><span><span>REDLIB_DEFAULT_FILTERS</span><span>=</span>politics+memes+taiwanese
</span></span><span><span>
</span></span><span><span><span># 顯示獎勵數量</span>
</span></span><span><span><span>REDLIB_DEFAULT_HIDE_AWARDS</span><span>=</span>off
</span></span><span><span>
</span></span><span><span><span># 顯示Upvote與Downvote數</span>
</span></span><span><span><span>REDLIB_DEFAULT_HIDE_SCORE</span><span>=</span>off
</span></span></code></pre></div><ol start="5"><li>啟動容器</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>docker compose up -d
</span></span></code></pre></div><ol start="6"><li><p>使用瀏覽器打開<code>http://Linux伺服器IP:8080</code>存取網頁。</p></li><li><p>如果有必要的話，可以使用<a href="https://ivonblog.com/posts/my-self-hosting-setup/" target="_blank">內網穿透軟體</a>從外網存取。</p></li><li><p>順帶一提，如果架設Redlib公共站台要避免被濫用的話，可以將其接在Cloudflare或Techaro Anubis後面，對來訪者做人機驗證。</p></li></ol><h2>2. 如何訂閱sub<span><a href="#2-%E5%A6%82%E4%BD%95%E8%A8%82%E9%96%B1sub" aria-label="定位點">#</a></span></h2><p>訂閱的sub會顯示在首頁左上角的Feed按鈕。</p><p>可以在Redlib的環境變數<code>REDLIB_DEFAULT_SUBSCRIPTION=</code>裡面定義要訂閱的sub。</p><p>或者手動在Redlib網頁進入Sub，點選subscribe。不過，這個訂閱紀錄是存在瀏覽器cookie裡面的，要備份不方便，得手動在右上角的Settings底部匯出。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-bc2a604552.webp"><p>殂果是自己要用的而已，建議直接在Redlib的環境變數裡面定義。</p>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-02e4bb4a13.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-02e4bb4a13.webp" medium="image"/>
    <pubDate>Tue, 09 Sep 2025 23:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[Parabolic教學：開源Youtube影片下載工具，可能是最好用的yt-dlp GUI]]></title>
    <link>https://ivonblog.com/posts/parabolic-youtube-downloader/</link>
    <itunes:title><![CDATA[Parabolic教學：開源Youtube影片下載工具，可能是最好用的yt-dlp GUI]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/parabolic-youtube-downloader/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f4eac64d4e.webp"></a></p>
<p>分享一款我覺得設計還不錯的影片下載軟體，它的名字叫做「Parabolic」。支援Linux、Windows、macOS系統。</p><p>這是一款能夠下載Youtube影片的開源軟體，最高可達4K畫質。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-233f522870.webp"><p>其實，它應該叫做yt-dlp的前端比較正確。yt-dlp是一款命令行下載工具，需要打指令操作。過去有很多人嘗試做GUI，不過很難cover全部功能。</p><ul><li>相關文章：<a href="https://ivonblog.com/posts/yt-dlp-usage/" target="_blank">yt-dlp指令使用教學，萬能Youtube影片命令行下載工具</a></li></ul><p>yt-dlp作為一款前端程式，功能簡潔卻也足夠強大。Parabolic完全開源免費，無廣告。</p><p>Parabolic的作者實作了常用的幾種下載功能，讓使用者不需要調整yt-dlp命令行參數就能直接下載影片，點一點就能快速下載多部影片。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b881ce5e52.webp"><p>只要是yt-dlp支援的網站（如Youtube、Bilibili、Niconico、Twitter、Facebook、Threads），它都能下載影片。</p><p>Parabolic也支援下載影片並轉成mp3純音訊。最棒的功能是下載Youtube Music音樂專輯的時候，能夠依照播放清單自動加上編碼，建立m3u播放清單，並且將縮圖自動裁剪成正方形。</p><p>針對需要特殊處理的影片，Parabolic也允許串接yt-dlp自訂指令參數，ffmpeg自訂指令參數幾乎全部圖形化。</p><h2>1. 安裝Parabolic<span><a href="#1-%E5%AE%89%E8%A3%9Dparabolic" aria-label="定位點">#</a></span></h2><p>Parabolic是自由開源軟體，原始碼位於<a href="https://github.com/NickvisionApps/Parabolic" target="_blank">Github</a>。作者一開始似乎是以Linux為主下去開發的，前端採GTK，後來才推出使用QT的Windows與macOS版本。</p><p>Linux安裝<a href="https://ivonblog.com/posts/linux-flatpak-introduction/" target="_blank">Flatpak</a>，從Flathub下載（Parabolic舊名Tube Converter）：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>flatpak install org.nickvision.tubeconverter
</span></span></code></pre></div><p>Windows到<a href="https://github.com/NickvisionApps/Parabolic/releases" target="_blank">Github Releases</a>，找到Latest標籤，點開Assets，下載<code>NickvisionParabolicSetup.exe</code>安裝。</p><p>macOS需要安裝<a href="https://ports.macports.org" target="_blank">MacPorts</a>，透過終端機指令安裝：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo port install parabolic
</span></span></code></pre></div><h2>2. 下載Youtube影片<span><a href="#2-%E4%B8%8B%E8%BC%89youtube%E5%BD%B1%E7%89%87" aria-label="定位點">#</a></span></h2><p>點Parabolic左上角的Settings → Language可以切換界面語言。</p><p>在下載之前…先確保編碼問題。目前Youtube高畫質影片大多採用AV1編碼，較老的影片播放器可能會黑螢幕。如果你電腦使用的影片播放器不支援新型解碼器，建議開啟Parabolic左上角的編好設定 → 一般設定，將影片編碼切換為H.264，確保下載後的影片在大多數裝置都能播放。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a38b2372d0.webp"><p>Parabolic預設的同時下載影片數是5個，這麼大的流量可能會吃光網速，或者導致IP短暫被Youtube封鎖。這時建議改成1。</p><p>在Parabolic主畫面，點選左上角加號，它會自動偵測你剪貼簿的網址，然後就能下載影片了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b7d8f46878.webp"><p>勾選要下載的內容。影片和音訊都選取最高品質，程式就會嘗試自動選取4K畫質。格式選取.mp4（相容性最好）或者.mkv（支援多軌道字幕），如果選.mp3就是下載純音訊。並視需要下載Youtube的CC字幕。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fa609de40e.webp"><p>影片有CC字幕的話，下載之後Parabolic會自動將字幕嵌入影片之中。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-41d19a8280.webp"><p>如果你需要自訂進階後處理規則，可以在Parabolic的設定 → 轉換器裡面新增後製參數預設集，這樣下載的時候才會出現在選項卡。</p><h2>3. 下載Youtube Music音樂專輯<span><a href="#3-%E4%B8%8B%E8%BC%89youtube-music%E9%9F%B3%E6%A8%82%E5%B0%88%E8%BC%AF" aria-label="定位點">#</a></span></h2><p>Youtube上的音樂專輯，通常就是一個播放清單。我們可以讓它自動將其下載並整理為一個資料夾。</p><p>通常音樂專輯會包含演出者資料，顯示在MP3 tag，所以建議在Parabolic偏好設定，開啟嵌入後設資料，並勾選裁剪縮圖為正方形。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-cdee73dc79.webp"><p>在下載的時候，貼上一個含有<code>playlist</code>參數的播放清單網址，<code>music.youtube.com</code>或者<code>youtube.com</code>的網址都可以。</p><p>下載格式選.mp3（相容性最好）或.m4a（Youtube原生格式），因為Youtube音質頂多到256kbps，沒有必要選FLAC無損格式。M3U清單這個是讓音樂播放器辨識用的，除非你要下載的播放清單沒有演出者資訊，或者不是屬於同一張專輯，不然音樂播放器軟體應該都能自動辨認影片。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f47fee0032.webp"><p>點選「播放清單」按鈕，可以在音樂檔名前面加上播放清單編號，有助於檔案總管排序。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b62c8a584b.webp"><p>下載之後的音樂，應該會在音樂播放器顯示演出者訊息～如果你下載的中文歌MP3標籤是英文的，可以裝<a href="https://ivonblog.com/posts/musicbrainz-picard" target="_blank">Picard</a>嘗試自動修復成中文。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-d6d7bbce2f.webp"><h2>4. 讀取cookie下載會員限定影片<span><a href="#4-%E8%AE%80%E5%8F%96cookie%E4%B8%8B%E8%BC%89%E6%9C%83%E5%93%A1%E9%99%90%E5%AE%9A%E5%BD%B1%E7%89%87" aria-label="定位點">#</a></span></h2><p>有些會員限定影片需要使用者訂閱後才能看，故Parabolic需要讀取你的Youtube帳號資訊才能下載。</p><p>第一種方法：在瀏覽器登入Youtube帳號，並安裝<a href="https://chromewebstore.google.com/detail/exportthiscookie/dannllckdimllhkiplchkcaoheibealk" target="_blank">ExportThisCookie</a>，取得cookie.txt，之後在Parabolic的設定界面選取cookie檔案。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-451252e9ce.webp"><p>第二種方法：點選左側的金鑰環，新增Youtube帳號，輸入帳號與密碼。再於下載影片的時候選取使用這個驗證方法。不過這個似乎不是用來給Youtube登入用的？</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-5ccb15f020.webp">]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/parabolic-youtube-downloader/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f4eac64d4e.webp"></a></p>
<p>分享一款我覺得設計還不錯的影片下載軟體，它的名字叫做「Parabolic」。支援Linux、Windows、macOS系統。</p><p>這是一款能夠下載Youtube影片的開源軟體，最高可達4K畫質。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-233f522870.webp"><p>其實，它應該叫做yt-dlp的前端比較正確。yt-dlp是一款命令行下載工具，需要打指令操作。過去有很多人嘗試做GUI，不過很難cover全部功能。</p><ul><li>相關文章：<a href="https://ivonblog.com/posts/yt-dlp-usage/" target="_blank">yt-dlp指令使用教學，萬能Youtube影片命令行下載工具</a></li></ul><p>yt-dlp作為一款前端程式，功能簡潔卻也足夠強大。Parabolic完全開源免費，無廣告。</p><p>Parabolic的作者實作了常用的幾種下載功能，讓使用者不需要調整yt-dlp命令行參數就能直接下載影片，點一點就能快速下載多部影片。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b881ce5e52.webp"><p>只要是yt-dlp支援的網站（如Youtube、Bilibili、Niconico、Twitter、Facebook、Threads），它都能下載影片。</p><p>Parabolic也支援下載影片並轉成mp3純音訊。最棒的功能是下載Youtube Music音樂專輯的時候，能夠依照播放清單自動加上編碼，建立m3u播放清單，並且將縮圖自動裁剪成正方形。</p><p>針對需要特殊處理的影片，Parabolic也允許串接yt-dlp自訂指令參數，ffmpeg自訂指令參數幾乎全部圖形化。</p><h2>1. 安裝Parabolic<span><a href="#1-%E5%AE%89%E8%A3%9Dparabolic" aria-label="定位點">#</a></span></h2><p>Parabolic是自由開源軟體，原始碼位於<a href="https://github.com/NickvisionApps/Parabolic" target="_blank">Github</a>。作者一開始似乎是以Linux為主下去開發的，前端採GTK，後來才推出使用QT的Windows與macOS版本。</p><p>Linux安裝<a href="https://ivonblog.com/posts/linux-flatpak-introduction/" target="_blank">Flatpak</a>，從Flathub下載（Parabolic舊名Tube Converter）：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>flatpak install org.nickvision.tubeconverter
</span></span></code></pre></div><p>Windows到<a href="https://github.com/NickvisionApps/Parabolic/releases" target="_blank">Github Releases</a>，找到Latest標籤，點開Assets，下載<code>NickvisionParabolicSetup.exe</code>安裝。</p><p>macOS需要安裝<a href="https://ports.macports.org" target="_blank">MacPorts</a>，透過終端機指令安裝：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo port install parabolic
</span></span></code></pre></div><h2>2. 下載Youtube影片<span><a href="#2-%E4%B8%8B%E8%BC%89youtube%E5%BD%B1%E7%89%87" aria-label="定位點">#</a></span></h2><p>點Parabolic左上角的Settings → Language可以切換界面語言。</p><p>在下載之前…先確保編碼問題。目前Youtube高畫質影片大多採用AV1編碼，較老的影片播放器可能會黑螢幕。如果你電腦使用的影片播放器不支援新型解碼器，建議開啟Parabolic左上角的編好設定 → 一般設定，將影片編碼切換為H.264，確保下載後的影片在大多數裝置都能播放。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a38b2372d0.webp"><p>Parabolic預設的同時下載影片數是5個，這麼大的流量可能會吃光網速，或者導致IP短暫被Youtube封鎖。這時建議改成1。</p><p>在Parabolic主畫面，點選左上角加號，它會自動偵測你剪貼簿的網址，然後就能下載影片了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b7d8f46878.webp"><p>勾選要下載的內容。影片和音訊都選取最高品質，程式就會嘗試自動選取4K畫質。格式選取.mp4（相容性最好）或者.mkv（支援多軌道字幕），如果選.mp3就是下載純音訊。並視需要下載Youtube的CC字幕。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fa609de40e.webp"><p>影片有CC字幕的話，下載之後Parabolic會自動將字幕嵌入影片之中。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-41d19a8280.webp"><p>如果你需要自訂進階後處理規則，可以在Parabolic的設定 → 轉換器裡面新增後製參數預設集，這樣下載的時候才會出現在選項卡。</p><h2>3. 下載Youtube Music音樂專輯<span><a href="#3-%E4%B8%8B%E8%BC%89youtube-music%E9%9F%B3%E6%A8%82%E5%B0%88%E8%BC%AF" aria-label="定位點">#</a></span></h2><p>Youtube上的音樂專輯，通常就是一個播放清單。我們可以讓它自動將其下載並整理為一個資料夾。</p><p>通常音樂專輯會包含演出者資料，顯示在MP3 tag，所以建議在Parabolic偏好設定，開啟嵌入後設資料，並勾選裁剪縮圖為正方形。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-cdee73dc79.webp"><p>在下載的時候，貼上一個含有<code>playlist</code>參數的播放清單網址，<code>music.youtube.com</code>或者<code>youtube.com</code>的網址都可以。</p><p>下載格式選.mp3（相容性最好）或.m4a（Youtube原生格式），因為Youtube音質頂多到256kbps，沒有必要選FLAC無損格式。M3U清單這個是讓音樂播放器辨識用的，除非你要下載的播放清單沒有演出者資訊，或者不是屬於同一張專輯，不然音樂播放器軟體應該都能自動辨認影片。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f47fee0032.webp"><p>點選「播放清單」按鈕，可以在音樂檔名前面加上播放清單編號，有助於檔案總管排序。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b62c8a584b.webp"><p>下載之後的音樂，應該會在音樂播放器顯示演出者訊息～如果你下載的中文歌MP3標籤是英文的，可以裝<a href="https://ivonblog.com/posts/musicbrainz-picard" target="_blank">Picard</a>嘗試自動修復成中文。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-d6d7bbce2f.webp"><h2>4. 讀取cookie下載會員限定影片<span><a href="#4-%E8%AE%80%E5%8F%96cookie%E4%B8%8B%E8%BC%89%E6%9C%83%E5%93%A1%E9%99%90%E5%AE%9A%E5%BD%B1%E7%89%87" aria-label="定位點">#</a></span></h2><p>有些會員限定影片需要使用者訂閱後才能看，故Parabolic需要讀取你的Youtube帳號資訊才能下載。</p><p>第一種方法：在瀏覽器登入Youtube帳號，並安裝<a href="https://chromewebstore.google.com/detail/exportthiscookie/dannllckdimllhkiplchkcaoheibealk" target="_blank">ExportThisCookie</a>，取得cookie.txt，之後在Parabolic的設定界面選取cookie檔案。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-451252e9ce.webp"><p>第二種方法：點選左側的金鑰環，新增Youtube帳號，輸入帳號與密碼。再於下載影片的時候選取使用這個驗證方法。不過這個似乎不是用來給Youtube登入用的？</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-5ccb15f020.webp">]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/parabolic-youtube-downloader/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f4eac64d4e.webp"></a></p>
<p>分享一款我覺得設計還不錯的影片下載軟體，它的名字叫做「Parabolic」。支援Linux、Windows、macOS系統。</p><p>這是一款能夠下載Youtube影片的開源軟體，最高可達4K畫質。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-233f522870.webp"><p>其實，它應該叫做yt-dlp的前端比較正確。yt-dlp是一款命令行下載工具，需要打指令操作。過去有很多人嘗試做GUI，不過很難cover全部功能。</p><ul><li>相關文章：<a href="https://ivonblog.com/posts/yt-dlp-usage/" target="_blank">yt-dlp指令使用教學，萬能Youtube影片命令行下載工具</a></li></ul><p>yt-dlp作為一款前端程式，功能簡潔卻也足夠強大。Parabolic完全開源免費，無廣告。</p><p>Parabolic的作者實作了常用的幾種下載功能，讓使用者不需要調整yt-dlp命令行參數就能直接下載影片，點一點就能快速下載多部影片。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b881ce5e52.webp"><p>只要是yt-dlp支援的網站（如Youtube、Bilibili、Niconico、Twitter、Facebook、Threads），它都能下載影片。</p><p>Parabolic也支援下載影片並轉成mp3純音訊。最棒的功能是下載Youtube Music音樂專輯的時候，能夠依照播放清單自動加上編碼，建立m3u播放清單，並且將縮圖自動裁剪成正方形。</p><p>針對需要特殊處理的影片，Parabolic也允許串接yt-dlp自訂指令參數，ffmpeg自訂指令參數幾乎全部圖形化。</p><h2>1. 安裝Parabolic<span><a href="#1-%E5%AE%89%E8%A3%9Dparabolic" aria-label="定位點">#</a></span></h2><p>Parabolic是自由開源軟體，原始碼位於<a href="https://github.com/NickvisionApps/Parabolic" target="_blank">Github</a>。作者一開始似乎是以Linux為主下去開發的，前端採GTK，後來才推出使用QT的Windows與macOS版本。</p><p>Linux安裝<a href="https://ivonblog.com/posts/linux-flatpak-introduction/" target="_blank">Flatpak</a>，從Flathub下載（Parabolic舊名Tube Converter）：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>flatpak install org.nickvision.tubeconverter
</span></span></code></pre></div><p>Windows到<a href="https://github.com/NickvisionApps/Parabolic/releases" target="_blank">Github Releases</a>，找到Latest標籤，點開Assets，下載<code>NickvisionParabolicSetup.exe</code>安裝。</p><p>macOS需要安裝<a href="https://ports.macports.org" target="_blank">MacPorts</a>，透過終端機指令安裝：</p><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo port install parabolic
</span></span></code></pre></div><h2>2. 下載Youtube影片<span><a href="#2-%E4%B8%8B%E8%BC%89youtube%E5%BD%B1%E7%89%87" aria-label="定位點">#</a></span></h2><p>點Parabolic左上角的Settings → Language可以切換界面語言。</p><p>在下載之前…先確保編碼問題。目前Youtube高畫質影片大多採用AV1編碼，較老的影片播放器可能會黑螢幕。如果你電腦使用的影片播放器不支援新型解碼器，建議開啟Parabolic左上角的編好設定 → 一般設定，將影片編碼切換為H.264，確保下載後的影片在大多數裝置都能播放。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a38b2372d0.webp"><p>Parabolic預設的同時下載影片數是5個，這麼大的流量可能會吃光網速，或者導致IP短暫被Youtube封鎖。這時建議改成1。</p><p>在Parabolic主畫面，點選左上角加號，它會自動偵測你剪貼簿的網址，然後就能下載影片了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b7d8f46878.webp"><p>勾選要下載的內容。影片和音訊都選取最高品質，程式就會嘗試自動選取4K畫質。格式選取.mp4（相容性最好）或者.mkv（支援多軌道字幕），如果選.mp3就是下載純音訊。並視需要下載Youtube的CC字幕。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fa609de40e.webp"><p>影片有CC字幕的話，下載之後Parabolic會自動將字幕嵌入影片之中。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-41d19a8280.webp"><p>如果你需要自訂進階後處理規則，可以在Parabolic的設定 → 轉換器裡面新增後製參數預設集，這樣下載的時候才會出現在選項卡。</p><h2>3. 下載Youtube Music音樂專輯<span><a href="#3-%E4%B8%8B%E8%BC%89youtube-music%E9%9F%B3%E6%A8%82%E5%B0%88%E8%BC%AF" aria-label="定位點">#</a></span></h2><p>Youtube上的音樂專輯，通常就是一個播放清單。我們可以讓它自動將其下載並整理為一個資料夾。</p><p>通常音樂專輯會包含演出者資料，顯示在MP3 tag，所以建議在Parabolic偏好設定，開啟嵌入後設資料，並勾選裁剪縮圖為正方形。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-cdee73dc79.webp"><p>在下載的時候，貼上一個含有<code>playlist</code>參數的播放清單網址，<code>music.youtube.com</code>或者<code>youtube.com</code>的網址都可以。</p><p>下載格式選.mp3（相容性最好）或.m4a（Youtube原生格式），因為Youtube音質頂多到256kbps，沒有必要選FLAC無損格式。M3U清單這個是讓音樂播放器辨識用的，除非你要下載的播放清單沒有演出者資訊，或者不是屬於同一張專輯，不然音樂播放器軟體應該都能自動辨認影片。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f47fee0032.webp"><p>點選「播放清單」按鈕，可以在音樂檔名前面加上播放清單編號，有助於檔案總管排序。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b62c8a584b.webp"><p>下載之後的音樂，應該會在音樂播放器顯示演出者訊息～如果你下載的中文歌MP3標籤是英文的，可以裝<a href="https://ivonblog.com/posts/musicbrainz-picard" target="_blank">Picard</a>嘗試自動修復成中文。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-d6d7bbce2f.webp"><h2>4. 讀取cookie下載會員限定影片<span><a href="#4-%E8%AE%80%E5%8F%96cookie%E4%B8%8B%E8%BC%89%E6%9C%83%E5%93%A1%E9%99%90%E5%AE%9A%E5%BD%B1%E7%89%87" aria-label="定位點">#</a></span></h2><p>有些會員限定影片需要使用者訂閱後才能看，故Parabolic需要讀取你的Youtube帳號資訊才能下載。</p><p>第一種方法：在瀏覽器登入Youtube帳號，並安裝<a href="https://chromewebstore.google.com/detail/exportthiscookie/dannllckdimllhkiplchkcaoheibealk" target="_blank">ExportThisCookie</a>，取得cookie.txt，之後在Parabolic的設定界面選取cookie檔案。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-451252e9ce.webp"><p>第二種方法：點選左側的金鑰環，新增Youtube帳號，輸入帳號與密碼。再於下載影片的時候選取使用這個驗證方法。不過這個似乎不是用來給Youtube登入用的？</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-5ccb15f020.webp">]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f4eac64d4e.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f4eac64d4e.webp" medium="image"/>
    <pubDate>Mon, 08 Sep 2025 15:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[每個人只想相信他們想相信的，卻忽視了現實中真正重要的事情]]></title>
    <link>https://ivonblog.com/posts/2025090801/</link>
    <itunes:title><![CDATA[每個人只想相信他們想相信的，卻忽視了現實中真正重要的事情]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/2025090801/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-d23e4fca1d.webp"></a></p>
<p>為什麼有些人會去信被認為是落後老保的宗教，不論是基督教還是伊斯蘭教，因為在一切價值都將被重估 (Umwertung aller Werte) 的荒原 (The Waste Land)，左右派互搏，上上下下左右左右BA，混亂的價值觀使人無所適從，他們覺得回頭去相信古老的教義能帶來內心的平靜。所以有人說，說什麼Orthodox cures my liberalism，譬如聽聽這個：</p><p>1 Hour of Chad Orthodox Chants to Redeem Your Soul</p><div><iframe src="https://www.youtube.com/embed/_xaj8QSJZ0E" allowfullscreen="" frameborder="0"></iframe></div><p>現在太多人太過依賴網路看世界了，明明沒有觸到對方就私下決定那個群體是怎樣怎樣的人。視野遭到網路箝制，覺得活在網上就對世界全知全能。嘲笑他人的苦難。或許就像Patlabor說的，在這個城市裡面，何人都能成為自己世界的神，什麼都能作到，卻又無能為力的神。</p><p>比如中國人上Threads看到青鳥就對台灣人幻想破滅，然後台灣人在Twitter受到粉紅騷擾對中國人形象破滅 —— 雖然早就幻滅了，光是官媒的態度，中共對台極不友善的態度，就夠就讓共產黨在台好感度是跨黨派的不爽的了，至少不會比疑美情緒要低。</p><p>每個人只想相信他們想相信的，不，或者說是環境給他們想相信的。不論是教育體系大背景所烙下的思想鋼印，抑或是傳媒與KOL小環境營造的訊息繭房，都在加深人們對自己意識型態的根深蒂固，卻從不質疑「從來如此，便對嗎？」的思維。</p><p>所以，你講話口口聲聲不離民主最偉大，或者是認為真理靠大砲射程說話，還是認為我支持的人物的看法最有把握。基於這種潛意識的作祟下，很難出現有。</p><p>尤其cyber space又是一個沒有辦法好好溝通的地方。</p><p>看看7/26與8/23大罷免，真是莫名其妙，雙方都使出渾身解數在選舉，對各方參與的勢力都覺得噁心，儘管各人有各人的苦衷。什麼時候台灣人才能擺脫這種政治狂熱的行為？反正選輸了橫豎都會滅國（中華民國or不存在的台灣國），需要有健康的制度讓這一切走向終結。</p><p>不論結果如何，答應我，支持者不要做出殉國的行為，那些無恥的政客沒有一人會流眼淚。現代人有太多管道跳脫不喜歡的環境了，莫把民族大義、國家救亡圖存的責任全扛在肩上，現代人要反抗極權政府的代價實在太高了。這已經不是清末陳天華寫《猛回頭》《警世鐘》《絕命書》的時候了。或許政治上的表現不符我們這些理想主義者(INFP)的意，政治性抑鬱存在，但是還有方法…如果真不行，早點規劃潤的路徑。然後降低對政治還有世界局勢在生活中的重要性。在看看台灣以外的情勢，中國崛起，繼續打壓台灣；美國由一個瘋子當總統，爆發戰爭的地方沒有一絲停戰的希望，這世界似乎沒有變的越來越好。</p><p>什麼時候才會再次吹起變革之風？</p><div><iframe src="https://www.youtube.com/embed/n4RjJKxsamQ" allowfullscreen="" frameborder="0"></iframe></div><p>我們讓您失望了！</p><div><iframe src="https://www.youtube.com/embed/BWf-eARnf6U" allowfullscreen="" frameborder="0"></iframe></div><p>如果真有所謂「國際觀」，你會覺得不如盼小灰人降臨把人類全屠屠了。…這就是虛無主義，感覺快變doomer了。</p><p>李志說過：媽媽，這種失落會持久嗎？這個世界，會好嗎？</p><p>可，若是基於什麼都懷疑的態度下去辯證，到最後就會發現似乎沒有人說的是真話，每個事實都被觀點所左右，所以會被極端的單一聲音所吸引。走centrism又沒有太大市場。對高敏感人來說，什麼聲音都會被極端地放大，因此容易受傷害，容易渴望讚賞，也容易被人牽著鼻子走。</p><p>是，台灣是不成熟的民主，年輕且脆弱，除了中共美國的外在因素影響之下，島內政客仍流於喊口號（白綠藍皆然），總是進行瘋狂的政治動員，選舉過程一點都不理性。關心，或者說熱衷政治的人的比例異常的高，這不是成熟的民主國家該有的現象。</p><p>進而，這個人會走向虛無主義。不過虛無主義是不可能度日子的，要尋找意義，智性高的會追求存在主義，反之就會去信宗教求個穩定的慰藉，有東西能夠依靠，我的存在就不是無意義。</p><p>宗教，可以不是狹隘意義上的神明，也可以是愛國、愛黨、個人崇拜，甚或是覺得我的民族就是世界上最偉大的這樣，並天天以此自豪，用集體的榮譽淹沒個人的存在。</p><p>可惜以此種種，我自然是沒有興趣接受的了。或許那些世界大小是都應該跟我無關，過去二年花太多心力思索這些事情存在的意義，忽略了自己的生活所追求的東西，換言之就是一事無成。覺得追求這些遙遠的大東西，好像就不用面對現實中近在眼前的課題一樣。抱持著淺薄又幼稚的思維去理解外部世界！就會落得幻滅的結果，這加劇了我的神經失調狀況。</p><div><iframe src="https://www.youtube.com/embed/bJWCAvD67ns" allowfullscreen="" frameborder="0"></iframe></div><p>我想，得要暫時遠離這一切。現在清醒，振作，雖然是痛苦而又漫長的過程，不過至少能夠不再越陷越深。</p><p>Everybody, everyone, somebody, anyone</p><p>Has to grow up</p><p>Let’s have some fun!</p>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/2025090801/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-d23e4fca1d.webp"></a></p>
<p>為什麼有些人會去信被認為是落後老保的宗教，不論是基督教還是伊斯蘭教，因為在一切價值都將被重估 (Umwertung aller Werte) 的荒原 (The Waste Land)，左右派互搏，上上下下左右左右BA，混亂的價值觀使人無所適從，他們覺得回頭去相信古老的教義能帶來內心的平靜。所以有人說，說什麼Orthodox cures my liberalism，譬如聽聽這個：</p><p>1 Hour of Chad Orthodox Chants to Redeem Your Soul</p><div><iframe src="https://www.youtube.com/embed/_xaj8QSJZ0E" allowfullscreen="" frameborder="0"></iframe></div><p>現在太多人太過依賴網路看世界了，明明沒有觸到對方就私下決定那個群體是怎樣怎樣的人。視野遭到網路箝制，覺得活在網上就對世界全知全能。嘲笑他人的苦難。或許就像Patlabor說的，在這個城市裡面，何人都能成為自己世界的神，什麼都能作到，卻又無能為力的神。</p><p>比如中國人上Threads看到青鳥就對台灣人幻想破滅，然後台灣人在Twitter受到粉紅騷擾對中國人形象破滅 —— 雖然早就幻滅了，光是官媒的態度，中共對台極不友善的態度，就夠就讓共產黨在台好感度是跨黨派的不爽的了，至少不會比疑美情緒要低。</p><p>每個人只想相信他們想相信的，不，或者說是環境給他們想相信的。不論是教育體系大背景所烙下的思想鋼印，抑或是傳媒與KOL小環境營造的訊息繭房，都在加深人們對自己意識型態的根深蒂固，卻從不質疑「從來如此，便對嗎？」的思維。</p><p>所以，你講話口口聲聲不離民主最偉大，或者是認為真理靠大砲射程說話，還是認為我支持的人物的看法最有把握。基於這種潛意識的作祟下，很難出現有。</p><p>尤其cyber space又是一個沒有辦法好好溝通的地方。</p><p>看看7/26與8/23大罷免，真是莫名其妙，雙方都使出渾身解數在選舉，對各方參與的勢力都覺得噁心，儘管各人有各人的苦衷。什麼時候台灣人才能擺脫這種政治狂熱的行為？反正選輸了橫豎都會滅國（中華民國or不存在的台灣國），需要有健康的制度讓這一切走向終結。</p><p>不論結果如何，答應我，支持者不要做出殉國的行為，那些無恥的政客沒有一人會流眼淚。現代人有太多管道跳脫不喜歡的環境了，莫把民族大義、國家救亡圖存的責任全扛在肩上，現代人要反抗極權政府的代價實在太高了。這已經不是清末陳天華寫《猛回頭》《警世鐘》《絕命書》的時候了。或許政治上的表現不符我們這些理想主義者(INFP)的意，政治性抑鬱存在，但是還有方法…如果真不行，早點規劃潤的路徑。然後降低對政治還有世界局勢在生活中的重要性。在看看台灣以外的情勢，中國崛起，繼續打壓台灣；美國由一個瘋子當總統，爆發戰爭的地方沒有一絲停戰的希望，這世界似乎沒有變的越來越好。</p><p>什麼時候才會再次吹起變革之風？</p><div><iframe src="https://www.youtube.com/embed/n4RjJKxsamQ" allowfullscreen="" frameborder="0"></iframe></div><p>我們讓您失望了！</p><div><iframe src="https://www.youtube.com/embed/BWf-eARnf6U" allowfullscreen="" frameborder="0"></iframe></div><p>如果真有所謂「國際觀」，你會覺得不如盼小灰人降臨把人類全屠屠了。…這就是虛無主義，感覺快變doomer了。</p><p>李志說過：媽媽，這種失落會持久嗎？這個世界，會好嗎？</p><p>可，若是基於什麼都懷疑的態度下去辯證，到最後就會發現似乎沒有人說的是真話，每個事實都被觀點所左右，所以會被極端的單一聲音所吸引。走centrism又沒有太大市場。對高敏感人來說，什麼聲音都會被極端地放大，因此容易受傷害，容易渴望讚賞，也容易被人牽著鼻子走。</p><p>是，台灣是不成熟的民主，年輕且脆弱，除了中共美國的外在因素影響之下，島內政客仍流於喊口號（白綠藍皆然），總是進行瘋狂的政治動員，選舉過程一點都不理性。關心，或者說熱衷政治的人的比例異常的高，這不是成熟的民主國家該有的現象。</p><p>進而，這個人會走向虛無主義。不過虛無主義是不可能度日子的，要尋找意義，智性高的會追求存在主義，反之就會去信宗教求個穩定的慰藉，有東西能夠依靠，我的存在就不是無意義。</p><p>宗教，可以不是狹隘意義上的神明，也可以是愛國、愛黨、個人崇拜，甚或是覺得我的民族就是世界上最偉大的這樣，並天天以此自豪，用集體的榮譽淹沒個人的存在。</p><p>可惜以此種種，我自然是沒有興趣接受的了。或許那些世界大小是都應該跟我無關，過去二年花太多心力思索這些事情存在的意義，忽略了自己的生活所追求的東西，換言之就是一事無成。覺得追求這些遙遠的大東西，好像就不用面對現實中近在眼前的課題一樣。抱持著淺薄又幼稚的思維去理解外部世界！就會落得幻滅的結果，這加劇了我的神經失調狀況。</p><div><iframe src="https://www.youtube.com/embed/bJWCAvD67ns" allowfullscreen="" frameborder="0"></iframe></div><p>我想，得要暫時遠離這一切。現在清醒，振作，雖然是痛苦而又漫長的過程，不過至少能夠不再越陷越深。</p><p>Everybody, everyone, somebody, anyone</p><p>Has to grow up</p><p>Let’s have some fun!</p>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/2025090801/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-d23e4fca1d.webp"></a></p>
<p>為什麼有些人會去信被認為是落後老保的宗教，不論是基督教還是伊斯蘭教，因為在一切價值都將被重估 (Umwertung aller Werte) 的荒原 (The Waste Land)，左右派互搏，上上下下左右左右BA，混亂的價值觀使人無所適從，他們覺得回頭去相信古老的教義能帶來內心的平靜。所以有人說，說什麼Orthodox cures my liberalism，譬如聽聽這個：</p><p>1 Hour of Chad Orthodox Chants to Redeem Your Soul</p><div><iframe src="https://www.youtube.com/embed/_xaj8QSJZ0E" allowfullscreen="" frameborder="0"></iframe></div><p>現在太多人太過依賴網路看世界了，明明沒有觸到對方就私下決定那個群體是怎樣怎樣的人。視野遭到網路箝制，覺得活在網上就對世界全知全能。嘲笑他人的苦難。或許就像Patlabor說的，在這個城市裡面，何人都能成為自己世界的神，什麼都能作到，卻又無能為力的神。</p><p>比如中國人上Threads看到青鳥就對台灣人幻想破滅，然後台灣人在Twitter受到粉紅騷擾對中國人形象破滅 —— 雖然早就幻滅了，光是官媒的態度，中共對台極不友善的態度，就夠就讓共產黨在台好感度是跨黨派的不爽的了，至少不會比疑美情緒要低。</p><p>每個人只想相信他們想相信的，不，或者說是環境給他們想相信的。不論是教育體系大背景所烙下的思想鋼印，抑或是傳媒與KOL小環境營造的訊息繭房，都在加深人們對自己意識型態的根深蒂固，卻從不質疑「從來如此，便對嗎？」的思維。</p><p>所以，你講話口口聲聲不離民主最偉大，或者是認為真理靠大砲射程說話，還是認為我支持的人物的看法最有把握。基於這種潛意識的作祟下，很難出現有。</p><p>尤其cyber space又是一個沒有辦法好好溝通的地方。</p><p>看看7/26與8/23大罷免，真是莫名其妙，雙方都使出渾身解數在選舉，對各方參與的勢力都覺得噁心，儘管各人有各人的苦衷。什麼時候台灣人才能擺脫這種政治狂熱的行為？反正選輸了橫豎都會滅國（中華民國or不存在的台灣國），需要有健康的制度讓這一切走向終結。</p><p>不論結果如何，答應我，支持者不要做出殉國的行為，那些無恥的政客沒有一人會流眼淚。現代人有太多管道跳脫不喜歡的環境了，莫把民族大義、國家救亡圖存的責任全扛在肩上，現代人要反抗極權政府的代價實在太高了。這已經不是清末陳天華寫《猛回頭》《警世鐘》《絕命書》的時候了。或許政治上的表現不符我們這些理想主義者(INFP)的意，政治性抑鬱存在，但是還有方法…如果真不行，早點規劃潤的路徑。然後降低對政治還有世界局勢在生活中的重要性。在看看台灣以外的情勢，中國崛起，繼續打壓台灣；美國由一個瘋子當總統，爆發戰爭的地方沒有一絲停戰的希望，這世界似乎沒有變的越來越好。</p><p>什麼時候才會再次吹起變革之風？</p><div><iframe src="https://www.youtube.com/embed/n4RjJKxsamQ" allowfullscreen="" frameborder="0"></iframe></div><p>我們讓您失望了！</p><div><iframe src="https://www.youtube.com/embed/BWf-eARnf6U" allowfullscreen="" frameborder="0"></iframe></div><p>如果真有所謂「國際觀」，你會覺得不如盼小灰人降臨把人類全屠屠了。…這就是虛無主義，感覺快變doomer了。</p><p>李志說過：媽媽，這種失落會持久嗎？這個世界，會好嗎？</p><p>可，若是基於什麼都懷疑的態度下去辯證，到最後就會發現似乎沒有人說的是真話，每個事實都被觀點所左右，所以會被極端的單一聲音所吸引。走centrism又沒有太大市場。對高敏感人來說，什麼聲音都會被極端地放大，因此容易受傷害，容易渴望讚賞，也容易被人牽著鼻子走。</p><p>是，台灣是不成熟的民主，年輕且脆弱，除了中共美國的外在因素影響之下，島內政客仍流於喊口號（白綠藍皆然），總是進行瘋狂的政治動員，選舉過程一點都不理性。關心，或者說熱衷政治的人的比例異常的高，這不是成熟的民主國家該有的現象。</p><p>進而，這個人會走向虛無主義。不過虛無主義是不可能度日子的，要尋找意義，智性高的會追求存在主義，反之就會去信宗教求個穩定的慰藉，有東西能夠依靠，我的存在就不是無意義。</p><p>宗教，可以不是狹隘意義上的神明，也可以是愛國、愛黨、個人崇拜，甚或是覺得我的民族就是世界上最偉大的這樣，並天天以此自豪，用集體的榮譽淹沒個人的存在。</p><p>可惜以此種種，我自然是沒有興趣接受的了。或許那些世界大小是都應該跟我無關，過去二年花太多心力思索這些事情存在的意義，忽略了自己的生活所追求的東西，換言之就是一事無成。覺得追求這些遙遠的大東西，好像就不用面對現實中近在眼前的課題一樣。抱持著淺薄又幼稚的思維去理解外部世界！就會落得幻滅的結果，這加劇了我的神經失調狀況。</p><div><iframe src="https://www.youtube.com/embed/bJWCAvD67ns" allowfullscreen="" frameborder="0"></iframe></div><p>我想，得要暫時遠離這一切。現在清醒，振作，雖然是痛苦而又漫長的過程，不過至少能夠不再越陷越深。</p><p>Everybody, everyone, somebody, anyone</p><p>Has to grow up</p><p>Let’s have some fun!</p>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-d23e4fca1d.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-d23e4fca1d.webp" medium="image"/>
    <pubDate>Mon, 08 Sep 2025 11:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[WinBoat使用教學，在Linux無縫執行Windows程式的工具（Docker KVM + FreeRDP）]]></title>
    <link>https://ivonblog.com/posts/winboat-windows-apps/</link>
    <itunes:title><![CDATA[WinBoat使用教學，在Linux無縫執行Windows程式的工具（Docker KVM + FreeRDP）]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/winboat-windows-apps/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-eb766e83ba.webp"></a></p>
<p>今天要分享的軟體叫做WinBoat，它能讓你在Linux執行Windows程式。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-083a51eb54.webp"><p>要在Linux跑Windows軟體，最穩定的方法便是透過虛擬機，譬如<a href="https://ivonblog.com/posts/install-windows-11-qemu-kvm-on-linux/" target="_blank">Virt Manager + QEMU/KVM跑Windows虛擬機</a>。但是透過Virt Manager視窗來操作Windows顯得有些不便，所以有許多開發者提出了透過RDP遠端桌面的方式，讓虛擬機內的程式與Linux桌面更好的整合，讓Windows程式的視窗繪製在Linux桌面上。</p><p>例如在Linux桌面，開啟Microsoft Office視窗。宛如原生應用程式一樣的操作。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4612508e30.webp"><p>類似WinBoat的軟體有<a href="https://github.com/winapps-org/winapps" target="_blank">WinApps</a>和<a href="https://github.com/casualsnek/cassowary" target="_blank">Cassowary</a>。WinBoat跟WinApps的差別在於，它是在Docker裡面跑Windows 11虛擬機，而非直接透過Libvirt（WinApps允許你選取Docker或Libvirt作為後端，彈性較高，能GPU直通），不過它還是有用到KVM。</p><p>WinBoat界面比較漂亮，設定過程比較直覺，只要裝好Docker與KVM的前置依賴套件，這個圖形程式就會自動幫你建立Windows虛擬機，在虛擬機內部安裝與Linux溝通的伺服器程式winboat_guest_server。並且會自動將Linux家目錄掛載到Windows檔案總管，共享資料夾。</p><p><strong>不過，WinBoat本質上是跑一個Windows虛擬機，目前無法GPU直通，圖形效能低落，只適合跑文書程式。</strong></p><p>我覺得比較有趣的是作者使用的發行版。試想：Steam Deck可以不裝Windows系統，也能跑Windows exe程式嗎？比如說Office 365？WinBoat作者是用Bazzite測試的，這個是專為Steam Deck設計的玩遊戲系統。既然這種immutable distro都能裝了，一般Linux發行版更不用說。</p><h2>1. 安裝前置依賴<span><a href="#1-%E5%AE%89%E8%A3%9D%E5%89%8D%E7%BD%AE%E4%BE%9D%E8%B3%B4" aria-label="定位點">#</a></span></h2><p>跑WinBoat建議電腦要有8GB RAM，因為要分配給虛擬機至少4GB RAM。再考慮到Windows 11的吃資源程度，分配8GB RAM最為保險。否則用起來會很卡。</p><p>以Ubuntu來說，需要安裝：</p><ol><li><p>開啟<a href="https://ivonblog.com/posts/ubuntu-virt-manager/" target="_blank">KVM虛擬化</a>，不用安裝Libvirt</p></li><li><p>安裝<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">Docker</a>，並將自身加入docker群組</p></li><li><p>安裝FreeRDP</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt install freerdp3-x11
</span></span></code></pre></div><ol start="4"><li>設定開機載入iptables模組</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span>echo</span> -e <span>"ip_tables
iptable_nat"</span> <span>|</span> sudo tee /etc/modules-load.d/iptables.conf
</span></span></code></pre></div><ol start="5"><li>重開機。</li></ol><h2>2. 安裝WinBoat<span><a href="#2-%E5%AE%89%E8%A3%9Dwinboat" aria-label="定位點">#</a></span></h2><ol><li><p>到<a href="https://github.com/TibixDev/winboat/releases" target="_blank">Github</a>下載AppImage，點二下執行。如果不能開啟，嘗試安裝.deb或.rpm版本。</p></li><li><p>初次開啟，確認已經符合前置條件</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b5ba0e3554.webp"></li><li><p>選取安裝Windows 11系統，安裝Windows的時候只有英文和簡體中文，稍後可以到系統設定自行下載語言套件改成繁體中文。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-03e9409285.webp"></li><li><p>設定Windows帳號和密碼，這裡是離線帳號，不用輸入Microsoft帳號</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-5bc6c6c8e6.webp"></li><li><p>建議分配2核心以上CPU與4GB以上RAM</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-90bc98e5a5.webp"></li><li><p>等待安裝完成。安裝的時候可以在瀏覽器輸入<code>http://127.0.0.1:8006/</code>檢視Windows畫面。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ec28ca85a5.webp"></li><li><p>WinBoat安裝後的Windows非啟用狀態？需要用<a href="https://ivonblog.com/posts/microsoft-activation-scripts/" target="_blank">Microsoft Activation Scripts</a>啟用。</p></li><li><p>WinBoat內部能夠設定Windows的縮放。目前的比例有點太大了，建議維持100%就好。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-934f8e23d7.webp" alt="screenshot_20250913_222722.webp"></li></ol><h2>3. 視窗操作邏輯<span><a href="#3-%E8%A6%96%E7%AA%97%E6%93%8D%E4%BD%9C%E9%82%8F%E8%BC%AF" aria-label="定位點">#</a></span></h2><p>在Apps列表會看到Windows所有的程式。這個界面也允許你自訂exe啟動捷徑。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b3133c6e7b.webp" alt="screenshot_20250913_222029.webp"><p>預設模式下是一個程式一個視窗，透過FreeRDP控制。中文輸入法不能使用Linux端的，只能用Windows的。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7f9521f944.webp" alt="screenshot_20250913_223736-1.webp"><p>需要完整Windows桌面的，點選「Windows Desktop」就行。在瀏覽器輸入<code>http://127.0.0.1:8006</code>也能透過noVNC登入Windows。在開啟Windows桌面的時候，其餘的RDP視窗會被關閉。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7430cf7260.webp" alt="screenshot_20250913_223840.webp"><p>有時候RDP視窗沒有關乾淨，用指令強制殺掉。</p><div><pre tabindex="0"><code data-lang="bash"><span><span>killall xfreerdp
</span></span></code></pre></div><p>有時候虛擬機不能從WinBoat的界面關閉，用指令關</p><div><pre tabindex="0"><code data-lang="bash"><span><span>docker ps
</span></span><span><span>
</span></span><span><span>docker stop WinBoat
</span></span></code></pre></div><p>WinBoat建立的Windows虛擬機容器會在Linux開機後自動啟動，可能會佔用一部分宿主機資源。不用的話記得關掉。</p><h2>4. 共享資料夾<span><a href="#4-%E5%85%B1%E4%BA%AB%E8%B3%87%E6%96%99%E5%A4%BE" aria-label="定位點">#</a></span></h2><p>在Windows檔案總管 → 網路 → host.lan → Data ，可以看到Linux家目錄的檔案，檔案可以直接複製貼上。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-992cbe3ed5.webp" alt="screenshot_20250913_222353.webp"><p>當然，你也可以用SSHFS或者SAMBA的方式，與Linux宿主機共享檔案。</p>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/winboat-windows-apps/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-eb766e83ba.webp"></a></p>
<p>今天要分享的軟體叫做WinBoat，它能讓你在Linux執行Windows程式。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-083a51eb54.webp"><p>要在Linux跑Windows軟體，最穩定的方法便是透過虛擬機，譬如<a href="https://ivonblog.com/posts/install-windows-11-qemu-kvm-on-linux/" target="_blank">Virt Manager + QEMU/KVM跑Windows虛擬機</a>。但是透過Virt Manager視窗來操作Windows顯得有些不便，所以有許多開發者提出了透過RDP遠端桌面的方式，讓虛擬機內的程式與Linux桌面更好的整合，讓Windows程式的視窗繪製在Linux桌面上。</p><p>例如在Linux桌面，開啟Microsoft Office視窗。宛如原生應用程式一樣的操作。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4612508e30.webp"><p>類似WinBoat的軟體有<a href="https://github.com/winapps-org/winapps" target="_blank">WinApps</a>和<a href="https://github.com/casualsnek/cassowary" target="_blank">Cassowary</a>。WinBoat跟WinApps的差別在於，它是在Docker裡面跑Windows 11虛擬機，而非直接透過Libvirt（WinApps允許你選取Docker或Libvirt作為後端，彈性較高，能GPU直通），不過它還是有用到KVM。</p><p>WinBoat界面比較漂亮，設定過程比較直覺，只要裝好Docker與KVM的前置依賴套件，這個圖形程式就會自動幫你建立Windows虛擬機，在虛擬機內部安裝與Linux溝通的伺服器程式winboat_guest_server。並且會自動將Linux家目錄掛載到Windows檔案總管，共享資料夾。</p><p><strong>不過，WinBoat本質上是跑一個Windows虛擬機，目前無法GPU直通，圖形效能低落，只適合跑文書程式。</strong></p><p>我覺得比較有趣的是作者使用的發行版。試想：Steam Deck可以不裝Windows系統，也能跑Windows exe程式嗎？比如說Office 365？WinBoat作者是用Bazzite測試的，這個是專為Steam Deck設計的玩遊戲系統。既然這種immutable distro都能裝了，一般Linux發行版更不用說。</p><h2>1. 安裝前置依賴<span><a href="#1-%E5%AE%89%E8%A3%9D%E5%89%8D%E7%BD%AE%E4%BE%9D%E8%B3%B4" aria-label="定位點">#</a></span></h2><p>跑WinBoat建議電腦要有8GB RAM，因為要分配給虛擬機至少4GB RAM。再考慮到Windows 11的吃資源程度，分配8GB RAM最為保險。否則用起來會很卡。</p><p>以Ubuntu來說，需要安裝：</p><ol><li><p>開啟<a href="https://ivonblog.com/posts/ubuntu-virt-manager/" target="_blank">KVM虛擬化</a>，不用安裝Libvirt</p></li><li><p>安裝<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">Docker</a>，並將自身加入docker群組</p></li><li><p>安裝FreeRDP</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt install freerdp3-x11
</span></span></code></pre></div><ol start="4"><li>設定開機載入iptables模組</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span>echo</span> -e <span>"ip_tables
iptable_nat"</span> <span>|</span> sudo tee /etc/modules-load.d/iptables.conf
</span></span></code></pre></div><ol start="5"><li>重開機。</li></ol><h2>2. 安裝WinBoat<span><a href="#2-%E5%AE%89%E8%A3%9Dwinboat" aria-label="定位點">#</a></span></h2><ol><li><p>到<a href="https://github.com/TibixDev/winboat/releases" target="_blank">Github</a>下載AppImage，點二下執行。如果不能開啟，嘗試安裝.deb或.rpm版本。</p></li><li><p>初次開啟，確認已經符合前置條件</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b5ba0e3554.webp"></li><li><p>選取安裝Windows 11系統，安裝Windows的時候只有英文和簡體中文，稍後可以到系統設定自行下載語言套件改成繁體中文。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-03e9409285.webp"></li><li><p>設定Windows帳號和密碼，這裡是離線帳號，不用輸入Microsoft帳號</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-5bc6c6c8e6.webp"></li><li><p>建議分配2核心以上CPU與4GB以上RAM</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-90bc98e5a5.webp"></li><li><p>等待安裝完成。安裝的時候可以在瀏覽器輸入<code>http://127.0.0.1:8006/</code>檢視Windows畫面。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ec28ca85a5.webp"></li><li><p>WinBoat安裝後的Windows非啟用狀態？需要用<a href="https://ivonblog.com/posts/microsoft-activation-scripts/" target="_blank">Microsoft Activation Scripts</a>啟用。</p></li><li><p>WinBoat內部能夠設定Windows的縮放。目前的比例有點太大了，建議維持100%就好。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-934f8e23d7.webp" alt="screenshot_20250913_222722.webp"></li></ol><h2>3. 視窗操作邏輯<span><a href="#3-%E8%A6%96%E7%AA%97%E6%93%8D%E4%BD%9C%E9%82%8F%E8%BC%AF" aria-label="定位點">#</a></span></h2><p>在Apps列表會看到Windows所有的程式。這個界面也允許你自訂exe啟動捷徑。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b3133c6e7b.webp" alt="screenshot_20250913_222029.webp"><p>預設模式下是一個程式一個視窗，透過FreeRDP控制。中文輸入法不能使用Linux端的，只能用Windows的。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7f9521f944.webp" alt="screenshot_20250913_223736-1.webp"><p>需要完整Windows桌面的，點選「Windows Desktop」就行。在瀏覽器輸入<code>http://127.0.0.1:8006</code>也能透過noVNC登入Windows。在開啟Windows桌面的時候，其餘的RDP視窗會被關閉。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7430cf7260.webp" alt="screenshot_20250913_223840.webp"><p>有時候RDP視窗沒有關乾淨，用指令強制殺掉。</p><div><pre tabindex="0"><code data-lang="bash"><span><span>killall xfreerdp
</span></span></code></pre></div><p>有時候虛擬機不能從WinBoat的界面關閉，用指令關</p><div><pre tabindex="0"><code data-lang="bash"><span><span>docker ps
</span></span><span><span>
</span></span><span><span>docker stop WinBoat
</span></span></code></pre></div><p>WinBoat建立的Windows虛擬機容器會在Linux開機後自動啟動，可能會佔用一部分宿主機資源。不用的話記得關掉。</p><h2>4. 共享資料夾<span><a href="#4-%E5%85%B1%E4%BA%AB%E8%B3%87%E6%96%99%E5%A4%BE" aria-label="定位點">#</a></span></h2><p>在Windows檔案總管 → 網路 → host.lan → Data ，可以看到Linux家目錄的檔案，檔案可以直接複製貼上。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-992cbe3ed5.webp" alt="screenshot_20250913_222353.webp"><p>當然，你也可以用SSHFS或者SAMBA的方式，與Linux宿主機共享檔案。</p>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/winboat-windows-apps/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-eb766e83ba.webp"></a></p>
<p>今天要分享的軟體叫做WinBoat，它能讓你在Linux執行Windows程式。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-083a51eb54.webp"><p>要在Linux跑Windows軟體，最穩定的方法便是透過虛擬機，譬如<a href="https://ivonblog.com/posts/install-windows-11-qemu-kvm-on-linux/" target="_blank">Virt Manager + QEMU/KVM跑Windows虛擬機</a>。但是透過Virt Manager視窗來操作Windows顯得有些不便，所以有許多開發者提出了透過RDP遠端桌面的方式，讓虛擬機內的程式與Linux桌面更好的整合，讓Windows程式的視窗繪製在Linux桌面上。</p><p>例如在Linux桌面，開啟Microsoft Office視窗。宛如原生應用程式一樣的操作。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4612508e30.webp"><p>類似WinBoat的軟體有<a href="https://github.com/winapps-org/winapps" target="_blank">WinApps</a>和<a href="https://github.com/casualsnek/cassowary" target="_blank">Cassowary</a>。WinBoat跟WinApps的差別在於，它是在Docker裡面跑Windows 11虛擬機，而非直接透過Libvirt（WinApps允許你選取Docker或Libvirt作為後端，彈性較高，能GPU直通），不過它還是有用到KVM。</p><p>WinBoat界面比較漂亮，設定過程比較直覺，只要裝好Docker與KVM的前置依賴套件，這個圖形程式就會自動幫你建立Windows虛擬機，在虛擬機內部安裝與Linux溝通的伺服器程式winboat_guest_server。並且會自動將Linux家目錄掛載到Windows檔案總管，共享資料夾。</p><p><strong>不過，WinBoat本質上是跑一個Windows虛擬機，目前無法GPU直通，圖形效能低落，只適合跑文書程式。</strong></p><p>我覺得比較有趣的是作者使用的發行版。試想：Steam Deck可以不裝Windows系統，也能跑Windows exe程式嗎？比如說Office 365？WinBoat作者是用Bazzite測試的，這個是專為Steam Deck設計的玩遊戲系統。既然這種immutable distro都能裝了，一般Linux發行版更不用說。</p><h2>1. 安裝前置依賴<span><a href="#1-%E5%AE%89%E8%A3%9D%E5%89%8D%E7%BD%AE%E4%BE%9D%E8%B3%B4" aria-label="定位點">#</a></span></h2><p>跑WinBoat建議電腦要有8GB RAM，因為要分配給虛擬機至少4GB RAM。再考慮到Windows 11的吃資源程度，分配8GB RAM最為保險。否則用起來會很卡。</p><p>以Ubuntu來說，需要安裝：</p><ol><li><p>開啟<a href="https://ivonblog.com/posts/ubuntu-virt-manager/" target="_blank">KVM虛擬化</a>，不用安裝Libvirt</p></li><li><p>安裝<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">Docker</a>，並將自身加入docker群組</p></li><li><p>安裝FreeRDP</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>sudo apt install freerdp3-x11
</span></span></code></pre></div><ol start="4"><li>設定開機載入iptables模組</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span><span>echo</span> -e <span>"ip_tables
iptable_nat"</span> <span>|</span> sudo tee /etc/modules-load.d/iptables.conf
</span></span></code></pre></div><ol start="5"><li>重開機。</li></ol><h2>2. 安裝WinBoat<span><a href="#2-%E5%AE%89%E8%A3%9Dwinboat" aria-label="定位點">#</a></span></h2><ol><li><p>到<a href="https://github.com/TibixDev/winboat/releases" target="_blank">Github</a>下載AppImage，點二下執行。如果不能開啟，嘗試安裝.deb或.rpm版本。</p></li><li><p>初次開啟，確認已經符合前置條件</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b5ba0e3554.webp"></li><li><p>選取安裝Windows 11系統，安裝Windows的時候只有英文和簡體中文，稍後可以到系統設定自行下載語言套件改成繁體中文。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-03e9409285.webp"></li><li><p>設定Windows帳號和密碼，這裡是離線帳號，不用輸入Microsoft帳號</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-5bc6c6c8e6.webp"></li><li><p>建議分配2核心以上CPU與4GB以上RAM</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-90bc98e5a5.webp"></li><li><p>等待安裝完成。安裝的時候可以在瀏覽器輸入<code>http://127.0.0.1:8006/</code>檢視Windows畫面。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ec28ca85a5.webp"></li><li><p>WinBoat安裝後的Windows非啟用狀態？需要用<a href="https://ivonblog.com/posts/microsoft-activation-scripts/" target="_blank">Microsoft Activation Scripts</a>啟用。</p></li><li><p>WinBoat內部能夠設定Windows的縮放。目前的比例有點太大了，建議維持100%就好。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-934f8e23d7.webp" alt="screenshot_20250913_222722.webp"></li></ol><h2>3. 視窗操作邏輯<span><a href="#3-%E8%A6%96%E7%AA%97%E6%93%8D%E4%BD%9C%E9%82%8F%E8%BC%AF" aria-label="定位點">#</a></span></h2><p>在Apps列表會看到Windows所有的程式。這個界面也允許你自訂exe啟動捷徑。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b3133c6e7b.webp" alt="screenshot_20250913_222029.webp"><p>預設模式下是一個程式一個視窗，透過FreeRDP控制。中文輸入法不能使用Linux端的，只能用Windows的。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7f9521f944.webp" alt="screenshot_20250913_223736-1.webp"><p>需要完整Windows桌面的，點選「Windows Desktop」就行。在瀏覽器輸入<code>http://127.0.0.1:8006</code>也能透過noVNC登入Windows。在開啟Windows桌面的時候，其餘的RDP視窗會被關閉。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7430cf7260.webp" alt="screenshot_20250913_223840.webp"><p>有時候RDP視窗沒有關乾淨，用指令強制殺掉。</p><div><pre tabindex="0"><code data-lang="bash"><span><span>killall xfreerdp
</span></span></code></pre></div><p>有時候虛擬機不能從WinBoat的界面關閉，用指令關</p><div><pre tabindex="0"><code data-lang="bash"><span><span>docker ps
</span></span><span><span>
</span></span><span><span>docker stop WinBoat
</span></span></code></pre></div><p>WinBoat建立的Windows虛擬機容器會在Linux開機後自動啟動，可能會佔用一部分宿主機資源。不用的話記得關掉。</p><h2>4. 共享資料夾<span><a href="#4-%E5%85%B1%E4%BA%AB%E8%B3%87%E6%96%99%E5%A4%BE" aria-label="定位點">#</a></span></h2><p>在Windows檔案總管 → 網路 → host.lan → Data ，可以看到Linux家目錄的檔案，檔案可以直接複製貼上。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-992cbe3ed5.webp" alt="screenshot_20250913_222353.webp"><p>當然，你也可以用SSHFS或者SAMBA的方式，與Linux宿主機共享檔案。</p>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-eb766e83ba.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-eb766e83ba.webp" medium="image"/>
    <pubDate>Sun, 07 Sep 2025 12:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[Baïkal：自架CalDAV行事曆同步伺服器，在Thunderbird與Android手機間同步]]></title>
    <link>https://ivonblog.com/posts/baikal-caldav-server/</link>
    <itunes:title><![CDATA[Baïkal：自架CalDAV行事曆同步伺服器，在Thunderbird與Android手機間同步]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/baikal-caldav-server/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6700a04222.webp"></a></p>
<p>我想要搞一個類似<a href="https://apps.nextcloud.com/apps/calendar" target="_blank">Nextcloud Calendar</a>的開源行事曆，但又不想安裝繁重的整套服務，故挑了一個輕量的替代方案。</p><p>在同步行事曆方面，行之有年的方案就是CalDAV協定了，這是各大作業系統都支援的東西。只要架設一個託管CalDAV的伺服器，就能用各個裝置的行事曆客戶端同步。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-714816ec57.webp"><p>在這裡，負責同步的這套軟體叫做Baïkal（意思為），使用PHP寫成，它提供同步CalDAV與CardDAV的功能，可以同步行事曆、聯絡人。</p><h2>1. 撰寫docker-compose<span><a href="#1-%E6%92%B0%E5%AF%ABdocker-compose" aria-label="定位點">#</a></span></h2><p>Baïkal的原始碼位於<a href="https://github.com/sabre-io/Baikal" target="_blank">Github</a>。作者沒有做Docker映像，要用第三方打包的。</p><ol><li><p>安裝<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">Docker</a></p></li><li><p>新增一個目錄存放資料</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>mkdir ~/baikal
</span></span><span><span>
</span></span><span><span><span>cd</span> ~/baikal
</span></span></code></pre></div><ol start="3"><li>新增<code>docker-compose.yml</code>：</li></ol><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>baikal</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>ckulka/baikal:nginx</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>always</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>"8080:80"</span><span>
</span></span></span><span><span><span>    </span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>./config:/var/www/baikal/config</span><span>
</span></span></span><span><span><span>      </span>- <span>./data:/var/www/baikal/Specific</span><span>
</span></span></span></code></pre></div><ol start="4"><li>啟動容器</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>docker compose up -d
</span></span></code></pre></div><ol start="5"><li><p>開啟<code>http://Linux伺服器IP:8080</code>進入網頁界面，設定admin的密碼。將authentication type設定為Basic，允許以帳號密碼登入。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-d6137874a6.webp"></li><li><p>資料庫選用SQLite</p></li><li><p>新增一個使用者，這個使用者的行事曆就是之後要用來同步的。使用者的公開月曆網址是為<code>https://Linux伺服器IP:8080/dav.php/calendars/帳號名稱</code></p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-785b7c4fe3.webp"></li><li><p>如果有必要的話，可以使用<a href="https://ivonblog.com/posts/my-self-hosting-setup/" target="_blank">內網穿透軟體</a>從外網存取。</p></li></ol><h2>2. 連接CalDAV<span><a href="#2-%E9%80%A3%E6%8E%A5caldav" aria-label="定位點">#</a></span></h2><h3>電腦端<span><a href="#%E9%9B%BB%E8%85%A6%E7%AB%AF" aria-label="定位點">#</a></span></h3><p>以<a href="https://www.thunderbird.net" target="_blank">Thunderbird</a>為例，點選行事曆側邊欄 → 開新行事曆 → 存放於網際網路網路，輸入Baikal伺服器的網址（<code>https://Linux伺服器IP:8080/dav.php</code>），以及帳號密碼。隨後Baïkal的行事曆就會顯示在Thunderbird上。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3eacdc8671.webp"><h3>Android手機<span><a href="#android%E6%89%8B%E6%A9%9F" aria-label="定位點">#</a></span></h3><p>我使用<a href="https://github.com/bitfireAT/davx5-ose" target="_blank">DAVx⁵</a>負責登入CalDAV內容。</p><p>再用<a href="https://github.com/FossifyOrg/Calendar" target="_blank">Fossify Calendar</a>讀取裝置上的CalDAV。</p><h2>3. 網頁版CalDav客戶端<span><a href="#3-%E7%B6%B2%E9%A0%81%E7%89%88caldav%E5%AE%A2%E6%88%B6%E7%AB%AF" aria-label="定位點">#</a></span></h2><p>我希望能有一個網頁的行事曆介面能查看Baïkal的月曆，不依賴任何客戶端，所以額外部署了AgenDAV。</p><p>但不知道為什麼，這個無法登入。</p><p>docker-compose如下</p><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>agendav</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>ghcr.io/nagimov/agendav-docker:latest</span><span>
</span></span></span><span><span><span>    </span><span>container_name</span><span>:</span><span> </span><span>agendav</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_SERVER_NAME=127.0.0.1</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_TITLE=Welcome to Agendav Server</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_FOOTER=Hosted on Agendav Server</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_CALDAV_SERVER=http://Baiakl伺服器的IP/cal.php</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_CALDAV_PUBLIC_URL=http://Baiakl伺服器的IP:8075</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_TIMEZONE=Asia/Taipei</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_LANG=en</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_LOG_DIR=/tmp/</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_WEEKSTART=1</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>"80:8080"</span><span>
</span></span></span></code></pre></div>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/baikal-caldav-server/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6700a04222.webp"></a></p>
<p>我想要搞一個類似<a href="https://apps.nextcloud.com/apps/calendar" target="_blank">Nextcloud Calendar</a>的開源行事曆，但又不想安裝繁重的整套服務，故挑了一個輕量的替代方案。</p><p>在同步行事曆方面，行之有年的方案就是CalDAV協定了，這是各大作業系統都支援的東西。只要架設一個託管CalDAV的伺服器，就能用各個裝置的行事曆客戶端同步。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-714816ec57.webp"><p>在這裡，負責同步的這套軟體叫做Baïkal（意思為），使用PHP寫成，它提供同步CalDAV與CardDAV的功能，可以同步行事曆、聯絡人。</p><h2>1. 撰寫docker-compose<span><a href="#1-%E6%92%B0%E5%AF%ABdocker-compose" aria-label="定位點">#</a></span></h2><p>Baïkal的原始碼位於<a href="https://github.com/sabre-io/Baikal" target="_blank">Github</a>。作者沒有做Docker映像，要用第三方打包的。</p><ol><li><p>安裝<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">Docker</a></p></li><li><p>新增一個目錄存放資料</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>mkdir ~/baikal
</span></span><span><span>
</span></span><span><span><span>cd</span> ~/baikal
</span></span></code></pre></div><ol start="3"><li>新增<code>docker-compose.yml</code>：</li></ol><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>baikal</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>ckulka/baikal:nginx</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>always</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>"8080:80"</span><span>
</span></span></span><span><span><span>    </span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>./config:/var/www/baikal/config</span><span>
</span></span></span><span><span><span>      </span>- <span>./data:/var/www/baikal/Specific</span><span>
</span></span></span></code></pre></div><ol start="4"><li>啟動容器</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>docker compose up -d
</span></span></code></pre></div><ol start="5"><li><p>開啟<code>http://Linux伺服器IP:8080</code>進入網頁界面，設定admin的密碼。將authentication type設定為Basic，允許以帳號密碼登入。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-d6137874a6.webp"></li><li><p>資料庫選用SQLite</p></li><li><p>新增一個使用者，這個使用者的行事曆就是之後要用來同步的。使用者的公開月曆網址是為<code>https://Linux伺服器IP:8080/dav.php/calendars/帳號名稱</code></p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-785b7c4fe3.webp"></li><li><p>如果有必要的話，可以使用<a href="https://ivonblog.com/posts/my-self-hosting-setup/" target="_blank">內網穿透軟體</a>從外網存取。</p></li></ol><h2>2. 連接CalDAV<span><a href="#2-%E9%80%A3%E6%8E%A5caldav" aria-label="定位點">#</a></span></h2><h3>電腦端<span><a href="#%E9%9B%BB%E8%85%A6%E7%AB%AF" aria-label="定位點">#</a></span></h3><p>以<a href="https://www.thunderbird.net" target="_blank">Thunderbird</a>為例，點選行事曆側邊欄 → 開新行事曆 → 存放於網際網路網路，輸入Baikal伺服器的網址（<code>https://Linux伺服器IP:8080/dav.php</code>），以及帳號密碼。隨後Baïkal的行事曆就會顯示在Thunderbird上。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3eacdc8671.webp"><h3>Android手機<span><a href="#android%E6%89%8B%E6%A9%9F" aria-label="定位點">#</a></span></h3><p>我使用<a href="https://github.com/bitfireAT/davx5-ose" target="_blank">DAVx⁵</a>負責登入CalDAV內容。</p><p>再用<a href="https://github.com/FossifyOrg/Calendar" target="_blank">Fossify Calendar</a>讀取裝置上的CalDAV。</p><h2>3. 網頁版CalDav客戶端<span><a href="#3-%E7%B6%B2%E9%A0%81%E7%89%88caldav%E5%AE%A2%E6%88%B6%E7%AB%AF" aria-label="定位點">#</a></span></h2><p>我希望能有一個網頁的行事曆介面能查看Baïkal的月曆，不依賴任何客戶端，所以額外部署了AgenDAV。</p><p>但不知道為什麼，這個無法登入。</p><p>docker-compose如下</p><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>agendav</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>ghcr.io/nagimov/agendav-docker:latest</span><span>
</span></span></span><span><span><span>    </span><span>container_name</span><span>:</span><span> </span><span>agendav</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_SERVER_NAME=127.0.0.1</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_TITLE=Welcome to Agendav Server</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_FOOTER=Hosted on Agendav Server</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_CALDAV_SERVER=http://Baiakl伺服器的IP/cal.php</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_CALDAV_PUBLIC_URL=http://Baiakl伺服器的IP:8075</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_TIMEZONE=Asia/Taipei</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_LANG=en</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_LOG_DIR=/tmp/</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_WEEKSTART=1</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>"80:8080"</span><span>
</span></span></span></code></pre></div>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/baikal-caldav-server/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6700a04222.webp"></a></p>
<p>我想要搞一個類似<a href="https://apps.nextcloud.com/apps/calendar" target="_blank">Nextcloud Calendar</a>的開源行事曆，但又不想安裝繁重的整套服務，故挑了一個輕量的替代方案。</p><p>在同步行事曆方面，行之有年的方案就是CalDAV協定了，這是各大作業系統都支援的東西。只要架設一個託管CalDAV的伺服器，就能用各個裝置的行事曆客戶端同步。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-714816ec57.webp"><p>在這裡，負責同步的這套軟體叫做Baïkal（意思為），使用PHP寫成，它提供同步CalDAV與CardDAV的功能，可以同步行事曆、聯絡人。</p><h2>1. 撰寫docker-compose<span><a href="#1-%E6%92%B0%E5%AF%ABdocker-compose" aria-label="定位點">#</a></span></h2><p>Baïkal的原始碼位於<a href="https://github.com/sabre-io/Baikal" target="_blank">Github</a>。作者沒有做Docker映像，要用第三方打包的。</p><ol><li><p>安裝<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">Docker</a></p></li><li><p>新增一個目錄存放資料</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>mkdir ~/baikal
</span></span><span><span>
</span></span><span><span><span>cd</span> ~/baikal
</span></span></code></pre></div><ol start="3"><li>新增<code>docker-compose.yml</code>：</li></ol><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>baikal</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>ckulka/baikal:nginx</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>always</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>"8080:80"</span><span>
</span></span></span><span><span><span>    </span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>./config:/var/www/baikal/config</span><span>
</span></span></span><span><span><span>      </span>- <span>./data:/var/www/baikal/Specific</span><span>
</span></span></span></code></pre></div><ol start="4"><li>啟動容器</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>docker compose up -d
</span></span></code></pre></div><ol start="5"><li><p>開啟<code>http://Linux伺服器IP:8080</code>進入網頁界面，設定admin的密碼。將authentication type設定為Basic，允許以帳號密碼登入。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-d6137874a6.webp"></li><li><p>資料庫選用SQLite</p></li><li><p>新增一個使用者，這個使用者的行事曆就是之後要用來同步的。使用者的公開月曆網址是為<code>https://Linux伺服器IP:8080/dav.php/calendars/帳號名稱</code></p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-785b7c4fe3.webp"></li><li><p>如果有必要的話，可以使用<a href="https://ivonblog.com/posts/my-self-hosting-setup/" target="_blank">內網穿透軟體</a>從外網存取。</p></li></ol><h2>2. 連接CalDAV<span><a href="#2-%E9%80%A3%E6%8E%A5caldav" aria-label="定位點">#</a></span></h2><h3>電腦端<span><a href="#%E9%9B%BB%E8%85%A6%E7%AB%AF" aria-label="定位點">#</a></span></h3><p>以<a href="https://www.thunderbird.net" target="_blank">Thunderbird</a>為例，點選行事曆側邊欄 → 開新行事曆 → 存放於網際網路網路，輸入Baikal伺服器的網址（<code>https://Linux伺服器IP:8080/dav.php</code>），以及帳號密碼。隨後Baïkal的行事曆就會顯示在Thunderbird上。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-3eacdc8671.webp"><h3>Android手機<span><a href="#android%E6%89%8B%E6%A9%9F" aria-label="定位點">#</a></span></h3><p>我使用<a href="https://github.com/bitfireAT/davx5-ose" target="_blank">DAVx⁵</a>負責登入CalDAV內容。</p><p>再用<a href="https://github.com/FossifyOrg/Calendar" target="_blank">Fossify Calendar</a>讀取裝置上的CalDAV。</p><h2>3. 網頁版CalDav客戶端<span><a href="#3-%E7%B6%B2%E9%A0%81%E7%89%88caldav%E5%AE%A2%E6%88%B6%E7%AB%AF" aria-label="定位點">#</a></span></h2><p>我希望能有一個網頁的行事曆介面能查看Baïkal的月曆，不依賴任何客戶端，所以額外部署了AgenDAV。</p><p>但不知道為什麼，這個無法登入。</p><p>docker-compose如下</p><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>agendav</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>ghcr.io/nagimov/agendav-docker:latest</span><span>
</span></span></span><span><span><span>    </span><span>container_name</span><span>:</span><span> </span><span>agendav</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_SERVER_NAME=127.0.0.1</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_TITLE=Welcome to Agendav Server</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_FOOTER=Hosted on Agendav Server</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_CALDAV_SERVER=http://Baiakl伺服器的IP/cal.php</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_CALDAV_PUBLIC_URL=http://Baiakl伺服器的IP:8075</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_TIMEZONE=Asia/Taipei</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_LANG=en</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_LOG_DIR=/tmp/</span><span>
</span></span></span><span><span><span>      </span>- <span>AGENDAV_WEEKSTART=1</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>"80:8080"</span><span>
</span></span></span></code></pre></div>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6700a04222.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6700a04222.webp" medium="image"/>
    <pubDate>Thu, 04 Sep 2025 14:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[以Docker架設Invidious站台，Youtube去廣告、網頁下載影片]]></title>
    <link>https://ivonblog.com/posts/self-hosting-invidious-youtube/</link>
    <itunes:title><![CDATA[以Docker架設Invidious站台，Youtube去廣告、網頁下載影片]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/self-hosting-invidious-youtube/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-df97fcb920.webp"></a></p>
<p>想要在電腦和手機無廣告看Youtube影片？你有「Invidious」這個解決方案。</p><p>Invidious為一款輕量的第三方Youtube前端，我在<a href="https://ivonblog.com/posts/invidious-youtube-privacy-frontend" target="_blank">Invidious用法</a>討論了Invidious網站的使用方式，現在我們要來自架Invidious站台！</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a0dae205bb.webp"><p>為啥要這樣幹呢？首先，公共Invidious站台因為太多人用，很容易因為流量過高被Youtube官方封鎖，導致影片無法載入。</p><p>並且，Invidious提供帳號註冊功能，裡面有簡單的訂閱功能與觀看紀錄，但你怎麼知道公共站點註冊帳號，背後的管理員會不會偷看你的紀錄呢？</p><p>為此，自己架一個Invidious站台看影片，你就不用跟其他人搶資源，並對站台資料有完全掌控權。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-8026fb341c.webp"><h2>1. 撰寫docker-compose<span><a href="#1-%E6%92%B0%E5%AF%ABdocker-compose" aria-label="定位點">#</a></span></h2><p>有趣的是為強調開源隱私，Invidious官方映像檔是放在RedHat的Quay.io而非Docker Hub。在拉取映像檔之前可能要執行<code>docker login quay.io</code>登入帳號。</p><ol><li><p>在Linux電腦安裝<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">Docker</a></p></li><li><p>因為部署需要指令稿初始化，建議複製Invidious官方的儲存庫</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>git clone https://github.com/iv-org/invidious.git
</span></span><span><span>
</span></span><span><span><span>cd</span> invidious
</span></span></code></pre></div><ol start="3"><li>編輯<code>docker-compose.yml</code>，按需修改。詳細設定檔參考<a href="https://github.com/iv-org/invidious/blob/master/config/config.example.yml" target="_blank">官方範本</a>。因為Youtube隨時會修改網站功能，如果Invidious不能看，先到Github回報issue，或者改用最新版git commit的映像檔<code>invidious:master</code>。</li></ol><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>  </span><span>invidious</span><span>:</span><span> </span><span># 主服務</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>quay.io/invidious/invidious:latest</span><span>
</span></span></span><span><span><span>  </span><span># image: quay.io/invidious/invidious:latest-arm64 # ARM64/AArch64 devices</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>"127.0.0.1:3000:3000"</span><span> </span><span># 預設啟用反向代理，如果用不到就去掉127.0.0.1</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>INVIDIOUS_CONFIG</span><span>:</span><span> </span><span>|</span><span>
</span></span></span><span><span><span>        db:
</span></span></span><span><span><span>          dbname: invidious ＃資料庫帳號密碼
</span></span></span><span><span><span>          user: kemal
</span></span></span><span><span><span>          password: kemal
</span></span></span><span><span><span>          host: invidious-db
</span></span></span><span><span><span>          port: 5432
</span></span></span><span><span><span>        check_tables: true
</span></span></span><span><span><span>        invidious_companion:
</span></span></span><span><span><span>        # URL used for the internal communication between invidious and invidious companion
</span></span></span><span><span><span>        # There is no need to change that except if Invidious companion does not run on the same docker compose file.
</span></span></span><span><span><span>        - private_url: "http://companion:8282/companion"
</span></span></span><span><span><span>        invidious_companion_key: "CHANGE_ME!!" # 用pwgen 16 1指令生成隨機金鑰
</span></span></span><span><span><span>        # external_port:
</span></span></span><span><span><span>        # domain:
</span></span></span><span><span><span>        # https_only: false
</span></span></span><span><span><span>        # statistics_enabled: false
</span></span></span><span><span><span>        hmac_key: "CHANGE_ME!!" # 用pwgen 16 1指令生成一組隨機金鑰</span><span>
</span></span></span><span><span><span>    </span><span>healthcheck</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>test</span><span>:</span><span> </span><span>wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/trending || exit 1</span><span>
</span></span></span><span><span><span>      </span><span>interval</span><span>:</span><span> </span><span>30s</span><span>
</span></span></span><span><span><span>      </span><span>timeout</span><span>:</span><span> </span><span>5s</span><span>
</span></span></span><span><span><span>      </span><span>retries</span><span>:</span><span> </span><span>2</span><span>
</span></span></span><span><span><span>    </span><span>logging</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>options</span><span>:</span><span>
</span></span></span><span><span><span>        </span><span>max-size</span><span>:</span><span> </span><span>"1G"</span><span>
</span></span></span><span><span><span>        </span><span>max-file</span><span>:</span><span> </span><span>"4"</span><span>
</span></span></span><span><span><span>    </span><span>depends_on</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>invidious-db</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>  </span><span>companion</span><span>:</span><span> </span><span># 負責取得Youtube trust token的服務</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>quay.io/invidious/invidious-companion:latest</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span># Use the key generated in the 2nd step</span><span>
</span></span></span><span><span><span>       </span>- <span>SERVER_SECRET_KEY=CHANGE_ME!!SAME_AS_INVIDIOUS_COMPANION_SECRET_KEY_FROM_INVIDIOUS_CONFIG </span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span># Uncomment only if you have configured "public_url" for Invidious companion</span><span>
</span></span></span><span><span><span>    </span><span># Or if you want to use Invidious companion as an API in your program.</span><span>
</span></span></span><span><span><span>    </span><span># Remove "127.0.0.1:" if used from an external IP</span><span>
</span></span></span><span><span><span>    </span><span>#ports:</span><span>
</span></span></span><span><span><span>    </span><span>#  - "127.0.0.1:8282:8282"</span><span>
</span></span></span><span><span><span>    </span><span>logging</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>options</span><span>:</span><span>
</span></span></span><span><span><span>        </span><span>max-size</span><span>:</span><span> </span><span>"1G"</span><span>
</span></span></span><span><span><span>        </span><span>max-file</span><span>:</span><span> </span><span>"4"</span><span>
</span></span></span><span><span><span>    </span><span>cap_drop</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>ALL</span><span>
</span></span></span><span><span><span>    </span><span>read_only</span><span>:</span><span> </span><span>true</span><span>
</span></span></span><span><span><span>    </span><span># cache for youtube library</span><span>
</span></span></span><span><span><span>    </span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>companioncache:/var/tmp/youtubei.js:rw</span><span>
</span></span></span><span><span><span>    </span><span>security_opt</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>no</span>-<span>new-privileges:true</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>  </span><span>invidious-db</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>docker.io/library/postgres:14</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>postgresdata:/var/lib/postgresql/data</span><span> </span><span># 資料庫儲存於目前目錄之下</span><span>
</span></span></span><span><span><span>      </span>- <span>./config/sql:/config/sql</span><span>
</span></span></span><span><span><span>      </span>- <span>./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>POSTGRES_DB</span><span>:</span><span> </span><span>invidious</span><span>
</span></span></span><span><span><span>      </span><span>POSTGRES_USER</span><span>:</span><span> </span><span>kemal</span><span>
</span></span></span><span><span><span>      </span><span>POSTGRES_PASSWORD</span><span>:</span><span> </span><span>kemal</span><span>
</span></span></span><span><span><span>    </span><span>healthcheck</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>test</span><span>:</span><span> </span><span>[</span><span> </span><span>"CMD-SHELL"</span><span>,</span><span> </span><span>"pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"</span><span> </span><span>]</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>postgresdata</span><span>:</span><span>
</span></span></span></code></pre></div><ol start="4"><li>啟動容器服務</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>docker compose up -d
</span></span></code></pre></div><ol start="5"><li>瀏覽器開啟<code>http://localhost:3000</code>就可以看Youtube了。要從外部存取請使用通訊埠轉發或是<a href="https://ivonblog.com/posts/my-self-hosting-setup/" target="_blank">內網穿透軟體</a></li></ol><h2>2. 功能用法<span><a href="#2-%E5%8A%9F%E8%83%BD%E7%94%A8%E6%B3%95" aria-label="定位點">#</a></span></h2><ol><li><p>按「趨勢」顯示熱門影片。內容地區可以在右上角設定裡面調整。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-1a1ee889f5.webp"></li><li><p>點選右上角按照喜好自行設定，「預設聆聽」是指只播放音訊不播放影片。啟用DASH格式的話，就能夠播放1080p影片，不然Invidious預設只有720p。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4efde27880.webp"></li><li><p>Invidious內建帳號註冊功能。帳號的功能僅是紀錄觀看歷史和訂閱列表，不會讓Google知道使用者的動向。訂閱列表還能匯出為RSS，與其他軟體共享。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4f962076f2.webp"></li><li><p>使用者能從網頁端下載影片，不過最高畫質可能不會太高，其他畫質要手動合併影音檔案。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fb125f3dc7.webp"></li><li><p>即使是自架伺服器，也有小機率被Youtube暫時封鎖，這時能夠點選網頁底部切換其他站台。不過也有可能其他公共站台也跟著被封就是了XD</p></li></ol><h2>3. Invidious客戶端APP<span><a href="#3-invidious%E5%AE%A2%E6%88%B6%E7%AB%AFapp" aria-label="定位點">#</a></span></h2><p>如果你認為網頁不好用，那麼請使用支援Invidious技術的APP。你可以用這些客戶端，連線到自架的Invidious站台。</p><p>Android請用<a href="https://github.com/lamarios/clipious" target="_blank">Clipious</a></p><p>iOS請用<a href="https://ivonblog.com/posts/ios-yattee/" target="_blank">Yattee</a></p><p>電腦請用<a href="https://ivonblog.com/posts/freetube-usage/" target="_blank">FreeTube</a></p><p>根據<a href="https://docs.invidious.io/applications/" target="_blank">Invidious官方推薦的APP</a>，瀏覽器安裝擴充元件<a href="https://github.com/SimonBrazell/privacy-redirect" target="_blank">Privacy Redirect</a>便能將所有Youtube連結自動導向自架的Invidious站點。</p><p>如果你有興趣<a href="https://ivonblog.com/posts/self-hosting-searxng-docker-instance/" target="_blank">自架代理搜尋引擎SearXNG</a>，它也支援將影片搜尋結果導向自己架的Invidious站點。</p>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/self-hosting-invidious-youtube/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-df97fcb920.webp"></a></p>
<p>想要在電腦和手機無廣告看Youtube影片？你有「Invidious」這個解決方案。</p><p>Invidious為一款輕量的第三方Youtube前端，我在<a href="https://ivonblog.com/posts/invidious-youtube-privacy-frontend" target="_blank">Invidious用法</a>討論了Invidious網站的使用方式，現在我們要來自架Invidious站台！</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a0dae205bb.webp"><p>為啥要這樣幹呢？首先，公共Invidious站台因為太多人用，很容易因為流量過高被Youtube官方封鎖，導致影片無法載入。</p><p>並且，Invidious提供帳號註冊功能，裡面有簡單的訂閱功能與觀看紀錄，但你怎麼知道公共站點註冊帳號，背後的管理員會不會偷看你的紀錄呢？</p><p>為此，自己架一個Invidious站台看影片，你就不用跟其他人搶資源，並對站台資料有完全掌控權。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-8026fb341c.webp"><h2>1. 撰寫docker-compose<span><a href="#1-%E6%92%B0%E5%AF%ABdocker-compose" aria-label="定位點">#</a></span></h2><p>有趣的是為強調開源隱私，Invidious官方映像檔是放在RedHat的Quay.io而非Docker Hub。在拉取映像檔之前可能要執行<code>docker login quay.io</code>登入帳號。</p><ol><li><p>在Linux電腦安裝<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">Docker</a></p></li><li><p>因為部署需要指令稿初始化，建議複製Invidious官方的儲存庫</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>git clone https://github.com/iv-org/invidious.git
</span></span><span><span>
</span></span><span><span><span>cd</span> invidious
</span></span></code></pre></div><ol start="3"><li>編輯<code>docker-compose.yml</code>，按需修改。詳細設定檔參考<a href="https://github.com/iv-org/invidious/blob/master/config/config.example.yml" target="_blank">官方範本</a>。因為Youtube隨時會修改網站功能，如果Invidious不能看，先到Github回報issue，或者改用最新版git commit的映像檔<code>invidious:master</code>。</li></ol><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>  </span><span>invidious</span><span>:</span><span> </span><span># 主服務</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>quay.io/invidious/invidious:latest</span><span>
</span></span></span><span><span><span>  </span><span># image: quay.io/invidious/invidious:latest-arm64 # ARM64/AArch64 devices</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>"127.0.0.1:3000:3000"</span><span> </span><span># 預設啟用反向代理，如果用不到就去掉127.0.0.1</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>INVIDIOUS_CONFIG</span><span>:</span><span> </span><span>|</span><span>
</span></span></span><span><span><span>        db:
</span></span></span><span><span><span>          dbname: invidious ＃資料庫帳號密碼
</span></span></span><span><span><span>          user: kemal
</span></span></span><span><span><span>          password: kemal
</span></span></span><span><span><span>          host: invidious-db
</span></span></span><span><span><span>          port: 5432
</span></span></span><span><span><span>        check_tables: true
</span></span></span><span><span><span>        invidious_companion:
</span></span></span><span><span><span>        # URL used for the internal communication between invidious and invidious companion
</span></span></span><span><span><span>        # There is no need to change that except if Invidious companion does not run on the same docker compose file.
</span></span></span><span><span><span>        - private_url: "http://companion:8282/companion"
</span></span></span><span><span><span>        invidious_companion_key: "CHANGE_ME!!" # 用pwgen 16 1指令生成隨機金鑰
</span></span></span><span><span><span>        # external_port:
</span></span></span><span><span><span>        # domain:
</span></span></span><span><span><span>        # https_only: false
</span></span></span><span><span><span>        # statistics_enabled: false
</span></span></span><span><span><span>        hmac_key: "CHANGE_ME!!" # 用pwgen 16 1指令生成一組隨機金鑰</span><span>
</span></span></span><span><span><span>    </span><span>healthcheck</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>test</span><span>:</span><span> </span><span>wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/trending || exit 1</span><span>
</span></span></span><span><span><span>      </span><span>interval</span><span>:</span><span> </span><span>30s</span><span>
</span></span></span><span><span><span>      </span><span>timeout</span><span>:</span><span> </span><span>5s</span><span>
</span></span></span><span><span><span>      </span><span>retries</span><span>:</span><span> </span><span>2</span><span>
</span></span></span><span><span><span>    </span><span>logging</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>options</span><span>:</span><span>
</span></span></span><span><span><span>        </span><span>max-size</span><span>:</span><span> </span><span>"1G"</span><span>
</span></span></span><span><span><span>        </span><span>max-file</span><span>:</span><span> </span><span>"4"</span><span>
</span></span></span><span><span><span>    </span><span>depends_on</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>invidious-db</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>  </span><span>companion</span><span>:</span><span> </span><span># 負責取得Youtube trust token的服務</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>quay.io/invidious/invidious-companion:latest</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span># Use the key generated in the 2nd step</span><span>
</span></span></span><span><span><span>       </span>- <span>SERVER_SECRET_KEY=CHANGE_ME!!SAME_AS_INVIDIOUS_COMPANION_SECRET_KEY_FROM_INVIDIOUS_CONFIG </span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span># Uncomment only if you have configured "public_url" for Invidious companion</span><span>
</span></span></span><span><span><span>    </span><span># Or if you want to use Invidious companion as an API in your program.</span><span>
</span></span></span><span><span><span>    </span><span># Remove "127.0.0.1:" if used from an external IP</span><span>
</span></span></span><span><span><span>    </span><span>#ports:</span><span>
</span></span></span><span><span><span>    </span><span>#  - "127.0.0.1:8282:8282"</span><span>
</span></span></span><span><span><span>    </span><span>logging</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>options</span><span>:</span><span>
</span></span></span><span><span><span>        </span><span>max-size</span><span>:</span><span> </span><span>"1G"</span><span>
</span></span></span><span><span><span>        </span><span>max-file</span><span>:</span><span> </span><span>"4"</span><span>
</span></span></span><span><span><span>    </span><span>cap_drop</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>ALL</span><span>
</span></span></span><span><span><span>    </span><span>read_only</span><span>:</span><span> </span><span>true</span><span>
</span></span></span><span><span><span>    </span><span># cache for youtube library</span><span>
</span></span></span><span><span><span>    </span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>companioncache:/var/tmp/youtubei.js:rw</span><span>
</span></span></span><span><span><span>    </span><span>security_opt</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>no</span>-<span>new-privileges:true</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>  </span><span>invidious-db</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>docker.io/library/postgres:14</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>postgresdata:/var/lib/postgresql/data</span><span> </span><span># 資料庫儲存於目前目錄之下</span><span>
</span></span></span><span><span><span>      </span>- <span>./config/sql:/config/sql</span><span>
</span></span></span><span><span><span>      </span>- <span>./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>POSTGRES_DB</span><span>:</span><span> </span><span>invidious</span><span>
</span></span></span><span><span><span>      </span><span>POSTGRES_USER</span><span>:</span><span> </span><span>kemal</span><span>
</span></span></span><span><span><span>      </span><span>POSTGRES_PASSWORD</span><span>:</span><span> </span><span>kemal</span><span>
</span></span></span><span><span><span>    </span><span>healthcheck</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>test</span><span>:</span><span> </span><span>[</span><span> </span><span>"CMD-SHELL"</span><span>,</span><span> </span><span>"pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"</span><span> </span><span>]</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>postgresdata</span><span>:</span><span>
</span></span></span></code></pre></div><ol start="4"><li>啟動容器服務</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>docker compose up -d
</span></span></code></pre></div><ol start="5"><li>瀏覽器開啟<code>http://localhost:3000</code>就可以看Youtube了。要從外部存取請使用通訊埠轉發或是<a href="https://ivonblog.com/posts/my-self-hosting-setup/" target="_blank">內網穿透軟體</a></li></ol><h2>2. 功能用法<span><a href="#2-%E5%8A%9F%E8%83%BD%E7%94%A8%E6%B3%95" aria-label="定位點">#</a></span></h2><ol><li><p>按「趨勢」顯示熱門影片。內容地區可以在右上角設定裡面調整。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-1a1ee889f5.webp"></li><li><p>點選右上角按照喜好自行設定，「預設聆聽」是指只播放音訊不播放影片。啟用DASH格式的話，就能夠播放1080p影片，不然Invidious預設只有720p。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4efde27880.webp"></li><li><p>Invidious內建帳號註冊功能。帳號的功能僅是紀錄觀看歷史和訂閱列表，不會讓Google知道使用者的動向。訂閱列表還能匯出為RSS，與其他軟體共享。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4f962076f2.webp"></li><li><p>使用者能從網頁端下載影片，不過最高畫質可能不會太高，其他畫質要手動合併影音檔案。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fb125f3dc7.webp"></li><li><p>即使是自架伺服器，也有小機率被Youtube暫時封鎖，這時能夠點選網頁底部切換其他站台。不過也有可能其他公共站台也跟著被封就是了XD</p></li></ol><h2>3. Invidious客戶端APP<span><a href="#3-invidious%E5%AE%A2%E6%88%B6%E7%AB%AFapp" aria-label="定位點">#</a></span></h2><p>如果你認為網頁不好用，那麼請使用支援Invidious技術的APP。你可以用這些客戶端，連線到自架的Invidious站台。</p><p>Android請用<a href="https://github.com/lamarios/clipious" target="_blank">Clipious</a></p><p>iOS請用<a href="https://ivonblog.com/posts/ios-yattee/" target="_blank">Yattee</a></p><p>電腦請用<a href="https://ivonblog.com/posts/freetube-usage/" target="_blank">FreeTube</a></p><p>根據<a href="https://docs.invidious.io/applications/" target="_blank">Invidious官方推薦的APP</a>，瀏覽器安裝擴充元件<a href="https://github.com/SimonBrazell/privacy-redirect" target="_blank">Privacy Redirect</a>便能將所有Youtube連結自動導向自架的Invidious站點。</p><p>如果你有興趣<a href="https://ivonblog.com/posts/self-hosting-searxng-docker-instance/" target="_blank">自架代理搜尋引擎SearXNG</a>，它也支援將影片搜尋結果導向自己架的Invidious站點。</p>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/self-hosting-invidious-youtube/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-df97fcb920.webp"></a></p>
<p>想要在電腦和手機無廣告看Youtube影片？你有「Invidious」這個解決方案。</p><p>Invidious為一款輕量的第三方Youtube前端，我在<a href="https://ivonblog.com/posts/invidious-youtube-privacy-frontend" target="_blank">Invidious用法</a>討論了Invidious網站的使用方式，現在我們要來自架Invidious站台！</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a0dae205bb.webp"><p>為啥要這樣幹呢？首先，公共Invidious站台因為太多人用，很容易因為流量過高被Youtube官方封鎖，導致影片無法載入。</p><p>並且，Invidious提供帳號註冊功能，裡面有簡單的訂閱功能與觀看紀錄，但你怎麼知道公共站點註冊帳號，背後的管理員會不會偷看你的紀錄呢？</p><p>為此，自己架一個Invidious站台看影片，你就不用跟其他人搶資源，並對站台資料有完全掌控權。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-8026fb341c.webp"><h2>1. 撰寫docker-compose<span><a href="#1-%E6%92%B0%E5%AF%ABdocker-compose" aria-label="定位點">#</a></span></h2><p>有趣的是為強調開源隱私，Invidious官方映像檔是放在RedHat的Quay.io而非Docker Hub。在拉取映像檔之前可能要執行<code>docker login quay.io</code>登入帳號。</p><ol><li><p>在Linux電腦安裝<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">Docker</a></p></li><li><p>因為部署需要指令稿初始化，建議複製Invidious官方的儲存庫</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>git clone https://github.com/iv-org/invidious.git
</span></span><span><span>
</span></span><span><span><span>cd</span> invidious
</span></span></code></pre></div><ol start="3"><li>編輯<code>docker-compose.yml</code>，按需修改。詳細設定檔參考<a href="https://github.com/iv-org/invidious/blob/master/config/config.example.yml" target="_blank">官方範本</a>。因為Youtube隨時會修改網站功能，如果Invidious不能看，先到Github回報issue，或者改用最新版git commit的映像檔<code>invidious:master</code>。</li></ol><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>  </span><span>invidious</span><span>:</span><span> </span><span># 主服務</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>quay.io/invidious/invidious:latest</span><span>
</span></span></span><span><span><span>  </span><span># image: quay.io/invidious/invidious:latest-arm64 # ARM64/AArch64 devices</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>"127.0.0.1:3000:3000"</span><span> </span><span># 預設啟用反向代理，如果用不到就去掉127.0.0.1</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>INVIDIOUS_CONFIG</span><span>:</span><span> </span><span>|</span><span>
</span></span></span><span><span><span>        db:
</span></span></span><span><span><span>          dbname: invidious ＃資料庫帳號密碼
</span></span></span><span><span><span>          user: kemal
</span></span></span><span><span><span>          password: kemal
</span></span></span><span><span><span>          host: invidious-db
</span></span></span><span><span><span>          port: 5432
</span></span></span><span><span><span>        check_tables: true
</span></span></span><span><span><span>        invidious_companion:
</span></span></span><span><span><span>        # URL used for the internal communication between invidious and invidious companion
</span></span></span><span><span><span>        # There is no need to change that except if Invidious companion does not run on the same docker compose file.
</span></span></span><span><span><span>        - private_url: "http://companion:8282/companion"
</span></span></span><span><span><span>        invidious_companion_key: "CHANGE_ME!!" # 用pwgen 16 1指令生成隨機金鑰
</span></span></span><span><span><span>        # external_port:
</span></span></span><span><span><span>        # domain:
</span></span></span><span><span><span>        # https_only: false
</span></span></span><span><span><span>        # statistics_enabled: false
</span></span></span><span><span><span>        hmac_key: "CHANGE_ME!!" # 用pwgen 16 1指令生成一組隨機金鑰</span><span>
</span></span></span><span><span><span>    </span><span>healthcheck</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>test</span><span>:</span><span> </span><span>wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/trending || exit 1</span><span>
</span></span></span><span><span><span>      </span><span>interval</span><span>:</span><span> </span><span>30s</span><span>
</span></span></span><span><span><span>      </span><span>timeout</span><span>:</span><span> </span><span>5s</span><span>
</span></span></span><span><span><span>      </span><span>retries</span><span>:</span><span> </span><span>2</span><span>
</span></span></span><span><span><span>    </span><span>logging</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>options</span><span>:</span><span>
</span></span></span><span><span><span>        </span><span>max-size</span><span>:</span><span> </span><span>"1G"</span><span>
</span></span></span><span><span><span>        </span><span>max-file</span><span>:</span><span> </span><span>"4"</span><span>
</span></span></span><span><span><span>    </span><span>depends_on</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>invidious-db</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>  </span><span>companion</span><span>:</span><span> </span><span># 負責取得Youtube trust token的服務</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>quay.io/invidious/invidious-companion:latest</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span># Use the key generated in the 2nd step</span><span>
</span></span></span><span><span><span>       </span>- <span>SERVER_SECRET_KEY=CHANGE_ME!!SAME_AS_INVIDIOUS_COMPANION_SECRET_KEY_FROM_INVIDIOUS_CONFIG </span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span># Uncomment only if you have configured "public_url" for Invidious companion</span><span>
</span></span></span><span><span><span>    </span><span># Or if you want to use Invidious companion as an API in your program.</span><span>
</span></span></span><span><span><span>    </span><span># Remove "127.0.0.1:" if used from an external IP</span><span>
</span></span></span><span><span><span>    </span><span>#ports:</span><span>
</span></span></span><span><span><span>    </span><span>#  - "127.0.0.1:8282:8282"</span><span>
</span></span></span><span><span><span>    </span><span>logging</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>options</span><span>:</span><span>
</span></span></span><span><span><span>        </span><span>max-size</span><span>:</span><span> </span><span>"1G"</span><span>
</span></span></span><span><span><span>        </span><span>max-file</span><span>:</span><span> </span><span>"4"</span><span>
</span></span></span><span><span><span>    </span><span>cap_drop</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>ALL</span><span>
</span></span></span><span><span><span>    </span><span>read_only</span><span>:</span><span> </span><span>true</span><span>
</span></span></span><span><span><span>    </span><span># cache for youtube library</span><span>
</span></span></span><span><span><span>    </span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>companioncache:/var/tmp/youtubei.js:rw</span><span>
</span></span></span><span><span><span>    </span><span>security_opt</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>no</span>-<span>new-privileges:true</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>  </span><span>invidious-db</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>docker.io/library/postgres:14</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>postgresdata:/var/lib/postgresql/data</span><span> </span><span># 資料庫儲存於目前目錄之下</span><span>
</span></span></span><span><span><span>      </span>- <span>./config/sql:/config/sql</span><span>
</span></span></span><span><span><span>      </span>- <span>./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>POSTGRES_DB</span><span>:</span><span> </span><span>invidious</span><span>
</span></span></span><span><span><span>      </span><span>POSTGRES_USER</span><span>:</span><span> </span><span>kemal</span><span>
</span></span></span><span><span><span>      </span><span>POSTGRES_PASSWORD</span><span>:</span><span> </span><span>kemal</span><span>
</span></span></span><span><span><span>    </span><span>healthcheck</span><span>:</span><span>
</span></span></span><span><span><span>      </span><span>test</span><span>:</span><span> </span><span>[</span><span> </span><span>"CMD-SHELL"</span><span>,</span><span> </span><span>"pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"</span><span> </span><span>]</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>volumes</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>postgresdata</span><span>:</span><span>
</span></span></span></code></pre></div><ol start="4"><li>啟動容器服務</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>docker compose up -d
</span></span></code></pre></div><ol start="5"><li>瀏覽器開啟<code>http://localhost:3000</code>就可以看Youtube了。要從外部存取請使用通訊埠轉發或是<a href="https://ivonblog.com/posts/my-self-hosting-setup/" target="_blank">內網穿透軟體</a></li></ol><h2>2. 功能用法<span><a href="#2-%E5%8A%9F%E8%83%BD%E7%94%A8%E6%B3%95" aria-label="定位點">#</a></span></h2><ol><li><p>按「趨勢」顯示熱門影片。內容地區可以在右上角設定裡面調整。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-1a1ee889f5.webp"></li><li><p>點選右上角按照喜好自行設定，「預設聆聽」是指只播放音訊不播放影片。啟用DASH格式的話，就能夠播放1080p影片，不然Invidious預設只有720p。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4efde27880.webp"></li><li><p>Invidious內建帳號註冊功能。帳號的功能僅是紀錄觀看歷史和訂閱列表，不會讓Google知道使用者的動向。訂閱列表還能匯出為RSS，與其他軟體共享。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-4f962076f2.webp"></li><li><p>使用者能從網頁端下載影片，不過最高畫質可能不會太高，其他畫質要手動合併影音檔案。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fb125f3dc7.webp"></li><li><p>即使是自架伺服器，也有小機率被Youtube暫時封鎖，這時能夠點選網頁底部切換其他站台。不過也有可能其他公共站台也跟著被封就是了XD</p></li></ol><h2>3. Invidious客戶端APP<span><a href="#3-invidious%E5%AE%A2%E6%88%B6%E7%AB%AFapp" aria-label="定位點">#</a></span></h2><p>如果你認為網頁不好用，那麼請使用支援Invidious技術的APP。你可以用這些客戶端，連線到自架的Invidious站台。</p><p>Android請用<a href="https://github.com/lamarios/clipious" target="_blank">Clipious</a></p><p>iOS請用<a href="https://ivonblog.com/posts/ios-yattee/" target="_blank">Yattee</a></p><p>電腦請用<a href="https://ivonblog.com/posts/freetube-usage/" target="_blank">FreeTube</a></p><p>根據<a href="https://docs.invidious.io/applications/" target="_blank">Invidious官方推薦的APP</a>，瀏覽器安裝擴充元件<a href="https://github.com/SimonBrazell/privacy-redirect" target="_blank">Privacy Redirect</a>便能將所有Youtube連結自動導向自架的Invidious站點。</p><p>如果你有興趣<a href="https://ivonblog.com/posts/self-hosting-searxng-docker-instance/" target="_blank">自架代理搜尋引擎SearXNG</a>，它也支援將影片搜尋結果導向自己架的Invidious站點。</p>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-df97fcb920.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-df97fcb920.webp" medium="image"/>
    <pubDate>Wed, 03 Sep 2025 21:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[如何架設「Whoogle」搜尋引擎，代理Google搜尋，防範隱私被Google窺探]]></title>
    <link>https://ivonblog.com/posts/whoogle-setup/</link>
    <itunes:title><![CDATA[如何架設「Whoogle」搜尋引擎，代理Google搜尋，防範隱私被Google窺探]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/whoogle-setup/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-37d425b31d.webp"></a></p>
<p>在找尋Google替代品時，可能有人會聽過<a href="https://www.startpage.com" target="_blank">Startpage</a>這家荷蘭公司，他們背後是使用Google代理搜尋的服務，但會過濾掉搜尋者訊息後再回傳結果。雖說如此，Startpage的頁面不時會有驗證碼，還會有他們自己的廣告，且Startpage在台灣的回應速度有點慢。</p><p>那麼可不可以自架這類Google代理搜尋引擎呢？元搜尋引擎「Whoogle」由此而生，以Python和Flask寫成。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-53249700b5.webp"><p>這個服務界面很簡潔，適合單純想搜尋網頁的用戶使用，它就只會回傳網頁列表而已，像維基百科資訊卡、AI生成的回答、推薦商品等資訊……通通都會消失，或者被大幅簡化！</p><p>使用Whooogle能夠避免被追蹤IP（需要Tor），阻擋廣告，並防止AMP網頁出現。</p><p>Whoogle尚提供自動重新導向社群媒體到隱私前端的功能，例如Youtube連結自動導向到Invidious實例。還可以封鎖特定網域不要出現在搜尋結果，過濾掉討人厭的內容農場！</p><p>跟包含多個搜尋引擎結果的<a href="https://ivonblog.com/posts/searxng-instances-replace-google-search/" target="_blank">SearXNG</a>比起來，Whoogle就是只針對Google搜尋的代理服務，因為只搜尋一個搜尋引擎的內容，執行速度較快。 <del>畢竟非中國的搜尋引擎，中文搜尋品質也沒有能跟Google較量的吧，沒有必要看Google以外的結果。</del></p><p>還不想自己架設的，可以先到作者列出的<a href="https://github.com/benbusby/whoogle-search#public-instances" target="_blank">公共Whoogle實例</a>玩看看。</p><p>本文Ivon將探討如何在個人電腦上用Docker跑Whoogle，並且將其整合至瀏覽器搜尋框。Android手機上若熟練使用<a href="https://ivonblog.com/posts/how-to-use-termux/" target="_blank">Termux</a>的話用Python跑也是可以的。</p><h2>1. 以Docker安裝Whoogle<span><a href="#1-%E4%BB%A5docker%E5%AE%89%E8%A3%9Dwhoogle" aria-label="定位點">#</a></span></h2><ol><li><p>安裝<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">Docker</a></p></li><li><p>新增資料目錄</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>mkdir ~/whoogle
</span></span><span><span>
</span></span><span><span><span>cd</span> whoogle
</span></span><span><span>
</span></span><span><span>vim docker-compose.yml
</span></span></code></pre></div><ol start="3"><li>參考<a href="https://github.com/benbusby/whoogle-search" target="_blank">Github說明</a>，填入以下內容，部署Whoogle容器，設定開機自動啟動。Whoogle的設定檔透過環境變數控制。</li></ol><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>whoogle-search</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>benbusby/whoogle-search</span><span>
</span></span></span><span><span><span>    </span><span>container_name</span><span>:</span><span> </span><span>whoogle-search</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span>pids_limit</span><span>:</span><span> </span><span>50</span><span>
</span></span></span><span><span><span>    </span><span>mem_limit</span><span>:</span><span> </span><span>256mb</span><span>
</span></span></span><span><span><span>    </span><span>memswap_limit</span><span>:</span><span> </span><span>256mb</span><span>
</span></span></span><span><span><span>    </span><span>user</span><span>:</span><span> </span><span>whoogle</span><span>
</span></span></span><span><span><span>    </span><span>security_opt</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>no</span>-<span>new-privileges</span><span>
</span></span></span><span><span><span>    </span><span>cap_drop</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>ALL</span><span>
</span></span></span><span><span><span>    </span><span>tmpfs</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>/config/:size=10M,uid=927,gid=927,mode=1700</span><span>
</span></span></span><span><span><span>      </span>- <span>/var/lib/tor/:size=15M,uid=927,gid=927,mode=1700</span><span>
</span></span></span><span><span><span>      </span>- <span>/run/tor/:size=1M,uid=927,gid=927,mode=1700</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>5000</span><span>:</span><span>5000</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_USER=</span><span> </span><span># 啟用基本的網頁登入帳號密碼，不填就任何人都能存取網頁</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_PASS= </span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_SAFE=0</span><span> </span><span># 關閉安全搜尋</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_DISABLE=0</span><span> </span><span># 允許使用者從網頁介面變更設定</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_NEAR=taipei</span><span> </span><span># 設定最近地區的搜尋結果</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_COUNTRY=TW</span><span> </span><span># 設定國家</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_LANGUAGE=lang_zh-TW</span><span> </span><span># 設定介面語言</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_SEARCH_LANGUAGE=lang_zh-TW</span><span> </span><span># 設定搜尋語言</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_ALT_YT=https://invidious.nerdvpn.de</span><span> </span><span># 特定網域重新導向，例如Youtube連結自動導向到Invidious實例</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_BLOCK=pinterest.com</span><span> </span><span># 不想出現在搜尋結果的網域，用逗號分隔</span><span>
</span></span></span></code></pre></div><ol start="4"><li>啟動容器</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>docker compose up -d
</span></span></code></pre></div><ol start="5"><li>開啟瀏覽器，輸入<code>http://localhost:5000</code>或<code>http://伺服器IP:5000</code>開始搜尋。<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-2ecb17ff56.webp"></li></ol><h2>2. Whoogle與真正的Google搜尋結果比較<span><a href="#2-whoogle%E8%88%87%E7%9C%9F%E6%AD%A3%E7%9A%84google%E6%90%9C%E5%B0%8B%E7%B5%90%E6%9E%9C%E6%AF%94%E8%BC%83" aria-label="定位點">#</a></span></h2><p>Whoogle的User agent是隨機生成的。</p><p>Whoogle介面有點類似舊版的Google手機版介面，跟原版Google的比起來，搜尋時得到的資訊沒有那麼搶眼了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e4845f61d7.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-0b7b20a546.webp"><p>再以搜尋「大義覺迷錄」這本書來說，Google和Whoogle的搜尋結果沒有差異，就是Whoogle的界面簡潔了許多，維基百科資訊卡變小，且不能預覽圖片縮圖。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-c11d50de42.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-c906a6de35.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7443a05192.webp"><h2>3. 將Whoogle整合至瀏覽器搜尋框<span><a href="#3-%E5%B0%87whoogle%E6%95%B4%E5%90%88%E8%87%B3%E7%80%8F%E8%A6%BD%E5%99%A8%E6%90%9C%E5%B0%8B%E6%A1%86" aria-label="定位點">#</a></span></h2><p>大部分瀏覽器都支援自訂搜尋網址的功能，手動加入的網址為：<code>http[s]://whoogle網址/search?q=5s</code></p><p>以Chromium為例，Whoogle只要有搜尋過一次，就會出現在瀏覽器的設定→搜尋引擎裡面，之後把它啟用，設為預設搜尋引擎就可以了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-127a887935.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6fc04c9c08.webp"><p>Firefox則是在Whoogle首頁，對網址按下右鍵加入Whoogle搜尋引擎。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-883495fa83.webp">之後於設定中，設為預設搜尋引擎。<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-80d3dd2ba3.webp"><h2>參考資料<span><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99" aria-label="定位點">#</a></span></h2><ul><li><a href="https://github.com/benbusby/whoogle-search" target="_blank">benbusby/whoogle-search: A self-hosted, ad-free, privacy-respecting metasearch engine - Github</a></li><li><a href="https://bitlaunch.io/blog/how-to-host-your-own-whoogle-instance/" target="_blank">How to host your own Whoogle instance - BitLaunch</a></li></ul>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/whoogle-setup/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-37d425b31d.webp"></a></p>
<p>在找尋Google替代品時，可能有人會聽過<a href="https://www.startpage.com" target="_blank">Startpage</a>這家荷蘭公司，他們背後是使用Google代理搜尋的服務，但會過濾掉搜尋者訊息後再回傳結果。雖說如此，Startpage的頁面不時會有驗證碼，還會有他們自己的廣告，且Startpage在台灣的回應速度有點慢。</p><p>那麼可不可以自架這類Google代理搜尋引擎呢？元搜尋引擎「Whoogle」由此而生，以Python和Flask寫成。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-53249700b5.webp"><p>這個服務界面很簡潔，適合單純想搜尋網頁的用戶使用，它就只會回傳網頁列表而已，像維基百科資訊卡、AI生成的回答、推薦商品等資訊……通通都會消失，或者被大幅簡化！</p><p>使用Whooogle能夠避免被追蹤IP（需要Tor），阻擋廣告，並防止AMP網頁出現。</p><p>Whoogle尚提供自動重新導向社群媒體到隱私前端的功能，例如Youtube連結自動導向到Invidious實例。還可以封鎖特定網域不要出現在搜尋結果，過濾掉討人厭的內容農場！</p><p>跟包含多個搜尋引擎結果的<a href="https://ivonblog.com/posts/searxng-instances-replace-google-search/" target="_blank">SearXNG</a>比起來，Whoogle就是只針對Google搜尋的代理服務，因為只搜尋一個搜尋引擎的內容，執行速度較快。 <del>畢竟非中國的搜尋引擎，中文搜尋品質也沒有能跟Google較量的吧，沒有必要看Google以外的結果。</del></p><p>還不想自己架設的，可以先到作者列出的<a href="https://github.com/benbusby/whoogle-search#public-instances" target="_blank">公共Whoogle實例</a>玩看看。</p><p>本文Ivon將探討如何在個人電腦上用Docker跑Whoogle，並且將其整合至瀏覽器搜尋框。Android手機上若熟練使用<a href="https://ivonblog.com/posts/how-to-use-termux/" target="_blank">Termux</a>的話用Python跑也是可以的。</p><h2>1. 以Docker安裝Whoogle<span><a href="#1-%E4%BB%A5docker%E5%AE%89%E8%A3%9Dwhoogle" aria-label="定位點">#</a></span></h2><ol><li><p>安裝<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">Docker</a></p></li><li><p>新增資料目錄</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>mkdir ~/whoogle
</span></span><span><span>
</span></span><span><span><span>cd</span> whoogle
</span></span><span><span>
</span></span><span><span>vim docker-compose.yml
</span></span></code></pre></div><ol start="3"><li>參考<a href="https://github.com/benbusby/whoogle-search" target="_blank">Github說明</a>，填入以下內容，部署Whoogle容器，設定開機自動啟動。Whoogle的設定檔透過環境變數控制。</li></ol><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>whoogle-search</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>benbusby/whoogle-search</span><span>
</span></span></span><span><span><span>    </span><span>container_name</span><span>:</span><span> </span><span>whoogle-search</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span>pids_limit</span><span>:</span><span> </span><span>50</span><span>
</span></span></span><span><span><span>    </span><span>mem_limit</span><span>:</span><span> </span><span>256mb</span><span>
</span></span></span><span><span><span>    </span><span>memswap_limit</span><span>:</span><span> </span><span>256mb</span><span>
</span></span></span><span><span><span>    </span><span>user</span><span>:</span><span> </span><span>whoogle</span><span>
</span></span></span><span><span><span>    </span><span>security_opt</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>no</span>-<span>new-privileges</span><span>
</span></span></span><span><span><span>    </span><span>cap_drop</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>ALL</span><span>
</span></span></span><span><span><span>    </span><span>tmpfs</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>/config/:size=10M,uid=927,gid=927,mode=1700</span><span>
</span></span></span><span><span><span>      </span>- <span>/var/lib/tor/:size=15M,uid=927,gid=927,mode=1700</span><span>
</span></span></span><span><span><span>      </span>- <span>/run/tor/:size=1M,uid=927,gid=927,mode=1700</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>5000</span><span>:</span><span>5000</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_USER=</span><span> </span><span># 啟用基本的網頁登入帳號密碼，不填就任何人都能存取網頁</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_PASS= </span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_SAFE=0</span><span> </span><span># 關閉安全搜尋</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_DISABLE=0</span><span> </span><span># 允許使用者從網頁介面變更設定</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_NEAR=taipei</span><span> </span><span># 設定最近地區的搜尋結果</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_COUNTRY=TW</span><span> </span><span># 設定國家</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_LANGUAGE=lang_zh-TW</span><span> </span><span># 設定介面語言</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_SEARCH_LANGUAGE=lang_zh-TW</span><span> </span><span># 設定搜尋語言</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_ALT_YT=https://invidious.nerdvpn.de</span><span> </span><span># 特定網域重新導向，例如Youtube連結自動導向到Invidious實例</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_BLOCK=pinterest.com</span><span> </span><span># 不想出現在搜尋結果的網域，用逗號分隔</span><span>
</span></span></span></code></pre></div><ol start="4"><li>啟動容器</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>docker compose up -d
</span></span></code></pre></div><ol start="5"><li>開啟瀏覽器，輸入<code>http://localhost:5000</code>或<code>http://伺服器IP:5000</code>開始搜尋。<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-2ecb17ff56.webp"></li></ol><h2>2. Whoogle與真正的Google搜尋結果比較<span><a href="#2-whoogle%E8%88%87%E7%9C%9F%E6%AD%A3%E7%9A%84google%E6%90%9C%E5%B0%8B%E7%B5%90%E6%9E%9C%E6%AF%94%E8%BC%83" aria-label="定位點">#</a></span></h2><p>Whoogle的User agent是隨機生成的。</p><p>Whoogle介面有點類似舊版的Google手機版介面，跟原版Google的比起來，搜尋時得到的資訊沒有那麼搶眼了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e4845f61d7.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-0b7b20a546.webp"><p>再以搜尋「大義覺迷錄」這本書來說，Google和Whoogle的搜尋結果沒有差異，就是Whoogle的界面簡潔了許多，維基百科資訊卡變小，且不能預覽圖片縮圖。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-c11d50de42.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-c906a6de35.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7443a05192.webp"><h2>3. 將Whoogle整合至瀏覽器搜尋框<span><a href="#3-%E5%B0%87whoogle%E6%95%B4%E5%90%88%E8%87%B3%E7%80%8F%E8%A6%BD%E5%99%A8%E6%90%9C%E5%B0%8B%E6%A1%86" aria-label="定位點">#</a></span></h2><p>大部分瀏覽器都支援自訂搜尋網址的功能，手動加入的網址為：<code>http[s]://whoogle網址/search?q=5s</code></p><p>以Chromium為例，Whoogle只要有搜尋過一次，就會出現在瀏覽器的設定→搜尋引擎裡面，之後把它啟用，設為預設搜尋引擎就可以了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-127a887935.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6fc04c9c08.webp"><p>Firefox則是在Whoogle首頁，對網址按下右鍵加入Whoogle搜尋引擎。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-883495fa83.webp">之後於設定中，設為預設搜尋引擎。<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-80d3dd2ba3.webp"><h2>參考資料<span><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99" aria-label="定位點">#</a></span></h2><ul><li><a href="https://github.com/benbusby/whoogle-search" target="_blank">benbusby/whoogle-search: A self-hosted, ad-free, privacy-respecting metasearch engine - Github</a></li><li><a href="https://bitlaunch.io/blog/how-to-host-your-own-whoogle-instance/" target="_blank">How to host your own Whoogle instance - BitLaunch</a></li></ul>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/whoogle-setup/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-37d425b31d.webp"></a></p>
<p>在找尋Google替代品時，可能有人會聽過<a href="https://www.startpage.com" target="_blank">Startpage</a>這家荷蘭公司，他們背後是使用Google代理搜尋的服務，但會過濾掉搜尋者訊息後再回傳結果。雖說如此，Startpage的頁面不時會有驗證碼，還會有他們自己的廣告，且Startpage在台灣的回應速度有點慢。</p><p>那麼可不可以自架這類Google代理搜尋引擎呢？元搜尋引擎「Whoogle」由此而生，以Python和Flask寫成。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-53249700b5.webp"><p>這個服務界面很簡潔，適合單純想搜尋網頁的用戶使用，它就只會回傳網頁列表而已，像維基百科資訊卡、AI生成的回答、推薦商品等資訊……通通都會消失，或者被大幅簡化！</p><p>使用Whooogle能夠避免被追蹤IP（需要Tor），阻擋廣告，並防止AMP網頁出現。</p><p>Whoogle尚提供自動重新導向社群媒體到隱私前端的功能，例如Youtube連結自動導向到Invidious實例。還可以封鎖特定網域不要出現在搜尋結果，過濾掉討人厭的內容農場！</p><p>跟包含多個搜尋引擎結果的<a href="https://ivonblog.com/posts/searxng-instances-replace-google-search/" target="_blank">SearXNG</a>比起來，Whoogle就是只針對Google搜尋的代理服務，因為只搜尋一個搜尋引擎的內容，執行速度較快。 <del>畢竟非中國的搜尋引擎，中文搜尋品質也沒有能跟Google較量的吧，沒有必要看Google以外的結果。</del></p><p>還不想自己架設的，可以先到作者列出的<a href="https://github.com/benbusby/whoogle-search#public-instances" target="_blank">公共Whoogle實例</a>玩看看。</p><p>本文Ivon將探討如何在個人電腦上用Docker跑Whoogle，並且將其整合至瀏覽器搜尋框。Android手機上若熟練使用<a href="https://ivonblog.com/posts/how-to-use-termux/" target="_blank">Termux</a>的話用Python跑也是可以的。</p><h2>1. 以Docker安裝Whoogle<span><a href="#1-%E4%BB%A5docker%E5%AE%89%E8%A3%9Dwhoogle" aria-label="定位點">#</a></span></h2><ol><li><p>安裝<a href="https://ivonblog.com/posts/install-docker-engine-on-linux/" target="_blank">Docker</a></p></li><li><p>新增資料目錄</p></li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>mkdir ~/whoogle
</span></span><span><span>
</span></span><span><span><span>cd</span> whoogle
</span></span><span><span>
</span></span><span><span>vim docker-compose.yml
</span></span></code></pre></div><ol start="3"><li>參考<a href="https://github.com/benbusby/whoogle-search" target="_blank">Github說明</a>，填入以下內容，部署Whoogle容器，設定開機自動啟動。Whoogle的設定檔透過環境變數控制。</li></ol><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>services</span><span>:</span><span>
</span></span></span><span><span><span>  </span><span>whoogle-search</span><span>:</span><span>
</span></span></span><span><span><span>    </span><span>image</span><span>:</span><span> </span><span>benbusby/whoogle-search</span><span>
</span></span></span><span><span><span>    </span><span>container_name</span><span>:</span><span> </span><span>whoogle-search</span><span>
</span></span></span><span><span><span>    </span><span>restart</span><span>:</span><span> </span><span>unless-stopped</span><span>
</span></span></span><span><span><span>    </span><span>pids_limit</span><span>:</span><span> </span><span>50</span><span>
</span></span></span><span><span><span>    </span><span>mem_limit</span><span>:</span><span> </span><span>256mb</span><span>
</span></span></span><span><span><span>    </span><span>memswap_limit</span><span>:</span><span> </span><span>256mb</span><span>
</span></span></span><span><span><span>    </span><span>user</span><span>:</span><span> </span><span>whoogle</span><span>
</span></span></span><span><span><span>    </span><span>security_opt</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>no</span>-<span>new-privileges</span><span>
</span></span></span><span><span><span>    </span><span>cap_drop</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>ALL</span><span>
</span></span></span><span><span><span>    </span><span>tmpfs</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>/config/:size=10M,uid=927,gid=927,mode=1700</span><span>
</span></span></span><span><span><span>      </span>- <span>/var/lib/tor/:size=15M,uid=927,gid=927,mode=1700</span><span>
</span></span></span><span><span><span>      </span>- <span>/run/tor/:size=1M,uid=927,gid=927,mode=1700</span><span>
</span></span></span><span><span><span>    </span><span>ports</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>5000</span><span>:</span><span>5000</span><span>
</span></span></span><span><span><span>    </span><span>environment</span><span>:</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_USER=</span><span> </span><span># 啟用基本的網頁登入帳號密碼，不填就任何人都能存取網頁</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_PASS= </span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_SAFE=0</span><span> </span><span># 關閉安全搜尋</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_DISABLE=0</span><span> </span><span># 允許使用者從網頁介面變更設定</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_NEAR=taipei</span><span> </span><span># 設定最近地區的搜尋結果</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_COUNTRY=TW</span><span> </span><span># 設定國家</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_LANGUAGE=lang_zh-TW</span><span> </span><span># 設定介面語言</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_SEARCH_LANGUAGE=lang_zh-TW</span><span> </span><span># 設定搜尋語言</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_ALT_YT=https://invidious.nerdvpn.de</span><span> </span><span># 特定網域重新導向，例如Youtube連結自動導向到Invidious實例</span><span>
</span></span></span><span><span><span>      </span>- <span>WHOOGLE_CONFIG_BLOCK=pinterest.com</span><span> </span><span># 不想出現在搜尋結果的網域，用逗號分隔</span><span>
</span></span></span></code></pre></div><ol start="4"><li>啟動容器</li></ol><div><pre tabindex="0"><code data-lang="bash"><span><span>docker compose up -d
</span></span></code></pre></div><ol start="5"><li>開啟瀏覽器，輸入<code>http://localhost:5000</code>或<code>http://伺服器IP:5000</code>開始搜尋。<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-2ecb17ff56.webp"></li></ol><h2>2. Whoogle與真正的Google搜尋結果比較<span><a href="#2-whoogle%E8%88%87%E7%9C%9F%E6%AD%A3%E7%9A%84google%E6%90%9C%E5%B0%8B%E7%B5%90%E6%9E%9C%E6%AF%94%E8%BC%83" aria-label="定位點">#</a></span></h2><p>Whoogle的User agent是隨機生成的。</p><p>Whoogle介面有點類似舊版的Google手機版介面，跟原版Google的比起來，搜尋時得到的資訊沒有那麼搶眼了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e4845f61d7.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-0b7b20a546.webp"><p>再以搜尋「大義覺迷錄」這本書來說，Google和Whoogle的搜尋結果沒有差異，就是Whoogle的界面簡潔了許多，維基百科資訊卡變小，且不能預覽圖片縮圖。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-c11d50de42.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-c906a6de35.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-7443a05192.webp"><h2>3. 將Whoogle整合至瀏覽器搜尋框<span><a href="#3-%E5%B0%87whoogle%E6%95%B4%E5%90%88%E8%87%B3%E7%80%8F%E8%A6%BD%E5%99%A8%E6%90%9C%E5%B0%8B%E6%A1%86" aria-label="定位點">#</a></span></h2><p>大部分瀏覽器都支援自訂搜尋網址的功能，手動加入的網址為：<code>http[s]://whoogle網址/search?q=5s</code></p><p>以Chromium為例，Whoogle只要有搜尋過一次，就會出現在瀏覽器的設定→搜尋引擎裡面，之後把它啟用，設為預設搜尋引擎就可以了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-127a887935.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6fc04c9c08.webp"><p>Firefox則是在Whoogle首頁，對網址按下右鍵加入Whoogle搜尋引擎。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-883495fa83.webp">之後於設定中，設為預設搜尋引擎。<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-80d3dd2ba3.webp"><h2>參考資料<span><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99" aria-label="定位點">#</a></span></h2><ul><li><a href="https://github.com/benbusby/whoogle-search" target="_blank">benbusby/whoogle-search: A self-hosted, ad-free, privacy-respecting metasearch engine - Github</a></li><li><a href="https://bitlaunch.io/blog/how-to-host-your-own-whoogle-instance/" target="_blank">How to host your own Whoogle instance - BitLaunch</a></li></ul>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-37d425b31d.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-37d425b31d.webp" medium="image"/>
    <pubDate>Wed, 03 Sep 2025 17:00:00 +0800</pubDate>
  </item><item>
    <title><![CDATA[跨平台桌寵軟體 XR Animator，讓MMD角色在桌面動起來！支援動態捕捉]]></title>
    <link>https://ivonblog.com/posts/xr-animator/</link>
    <itunes:title><![CDATA[跨平台桌寵軟體 XR Animator，讓MMD角色在桌面動起來！支援動態捕捉]]></itunes:title>
    <itunes:author><![CDATA[infoivonblog.nkfjt@aleeas.com (Ivon Huang)]]></itunes:author>
    <itunes:summary>
      <![CDATA[<p><a href="https://ivonblog.com/posts/xr-animator/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fb4e19772c.webp"></a></p>
<p>XR Animator是一個支援Linux、Windows、macOS的開源桌寵軟體，可以在桌面放3D模型，讓他與你打招呼。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-2a698d3560.webp"><p>內建動態捕捉技術，能夠透過電腦鏡頭，讓3D模型跟著你的身體移動，能夠作為實況主直播時候的虛擬形象工具，算是一種廉價版VTuber吧。</p><p>我個人認為，這個軟體可以作為<a href="https://store.steampowered.com/app/3301060/Desktop_Mate/" target="_blank">Desktop Mate</a>的Linux版替代品。因為它無法使用Steam Proton轉譯執行，而XR Animator是原生的Electron程式。</p><p>此外，XR Animator提供網頁版，能夠在Android與iOS手機上使用。透過AR技術，讓3D人物出現在真實世界，跟她們互動！</p><div><iframe src="https://www.youtube.com/embed/BRVQ2VWp-p0" allowfullscreen="" frameborder="0"></iframe></div><h2>1. 準備3D模型<span><a href="#1-%E6%BA%96%E5%82%993d%E6%A8%A1%E5%9E%8B" aria-label="定位點">#</a></span></h2><p>XR Animator的模型支援.pmx與.vrm格式的3D模型。動作檔則是.vmd與.fbx格式。</p><p>要取得模型，最好的來源就是到<a href="https://3d.nicovideo.jp/" target="_blank">ニコニ立体</a>下載了。</p><p>模型下載後不需要解壓縮，請維持.zip檔的形式。</p><h2>2. 安裝XR Animator<span><a href="#2-%E5%AE%89%E8%A3%9Dxr-animator" aria-label="定位點">#</a></span></h2><p>到<a href="https://github.com/ButzYung/SystemAnimatorOnline/releases" target="_blank">Github</a>，依照作業系統下載壓縮檔。</p><p>例如Ubuntu就是將檔案解壓縮之後，使用指令賦予執行權限：</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span>cd</span> <span>"XR-Animator_v0.30.0_linux-x64/XR Animator - electron-v33.2.0-linux-x64_SA/"</span>
</span></span><span><span>
</span></span><span><span>chmod +x electron
</span></span></code></pre></div><p>接著點兩下<code>electron</code>啟動程式。</p><h2>3. 基本用法<span><a href="#3-%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95" aria-label="定位點">#</a></span></h2><p>初始啟動的時候，將含有.pmx的.zip檔拖曳進視窗，載入模型。或者直接按Start，載入內建模型。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-12452bb76d.webp"><p>現在可以跟人物互動了，比如點一下腳部就會跌倒～ 將鏡頭轉到頭部就會給你一個吻。點二下重置鏡頭。右鍵拖曳視窗位置。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b25899ded3.webp"><p>點下方的姿勢按鈕能夠切換許多動作～還能將動作儲存起來。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b905899c6a.webp"><p>系統匣的選單也有很多光影選項能開，不過這就會額外耗費顯示卡計算資源了，沒有獨顯得別開太高級的光影選項。點選Always on Top將視窗永遠置頂。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f747984e4d.webp"><h2>4. 設定動作捕捉<span><a href="#4-%E8%A8%AD%E5%AE%9A%E5%8B%95%E4%BD%9C%E6%8D%95%E6%8D%89" aria-label="定位點">#</a></span></h2><p>可以使用攝像頭或者傳入單張照片進行動態捕捉，讓3D人物做出想要的姿勢。</p><p>VRM動作捕捉的資料能夠與其他軟體共享，不過似乎限定Windows系統使用的樣子。</p><p>我這邊只有要用上半身動態捕捉，因此先點一下XR Animator的工具列，按姿勢，調整為上半身動態捕捉。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e16eeb52b9.webp"><p>然後再按一下動態捕捉，設定身體部分</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a4fee6224c.webp"><p>這樣人物就會根據你的臉部表情與手部動作跟著作動了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-de43aeae19.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-978ca807a8.webp"><h2>5. 在手機上使用網頁版AR<span><a href="#5-%E5%9C%A8%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%BD%BF%E7%94%A8%E7%B6%B2%E9%A0%81%E7%89%88ar" aria-label="定位點">#</a></span></h2><p>因為需要用到智慧型手機的AR功能，所以Android手機最好用Chrome，iPhone則是得用Safari。</p><p>用手機打開這個網頁：<a href="https://sao.animetheme.com/XR_Animator.html" target="_blank">https://sao.animetheme.com/XR_Animator.html</a></p><p>載入模型的用法跟電腦版一樣，點一下左上角的手機符號開啟AR模式。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-dee06707d7.webp"></p><p>讓鏡頭掃描一下平面，放置人物，二指縮放
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-cac79e744a.webp"></p><p>現在你能夠跟人物互動了～！小心走太近會撞倒她。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6e8940b6b3.webp"></p><p>工具列裡面有接球遊戲，至少要站離模型5公尺遠才能玩！
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ff771cc373.webp"></p>]]>
    </itunes:summary>
    <description>
      <![CDATA[<p><a href="https://ivonblog.com/posts/xr-animator/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fb4e19772c.webp"></a></p>
<p>XR Animator是一個支援Linux、Windows、macOS的開源桌寵軟體，可以在桌面放3D模型，讓他與你打招呼。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-2a698d3560.webp"><p>內建動態捕捉技術，能夠透過電腦鏡頭，讓3D模型跟著你的身體移動，能夠作為實況主直播時候的虛擬形象工具，算是一種廉價版VTuber吧。</p><p>我個人認為，這個軟體可以作為<a href="https://store.steampowered.com/app/3301060/Desktop_Mate/" target="_blank">Desktop Mate</a>的Linux版替代品。因為它無法使用Steam Proton轉譯執行，而XR Animator是原生的Electron程式。</p><p>此外，XR Animator提供網頁版，能夠在Android與iOS手機上使用。透過AR技術，讓3D人物出現在真實世界，跟她們互動！</p><div><iframe src="https://www.youtube.com/embed/BRVQ2VWp-p0" allowfullscreen="" frameborder="0"></iframe></div><h2>1. 準備3D模型<span><a href="#1-%E6%BA%96%E5%82%993d%E6%A8%A1%E5%9E%8B" aria-label="定位點">#</a></span></h2><p>XR Animator的模型支援.pmx與.vrm格式的3D模型。動作檔則是.vmd與.fbx格式。</p><p>要取得模型，最好的來源就是到<a href="https://3d.nicovideo.jp/" target="_blank">ニコニ立体</a>下載了。</p><p>模型下載後不需要解壓縮，請維持.zip檔的形式。</p><h2>2. 安裝XR Animator<span><a href="#2-%E5%AE%89%E8%A3%9Dxr-animator" aria-label="定位點">#</a></span></h2><p>到<a href="https://github.com/ButzYung/SystemAnimatorOnline/releases" target="_blank">Github</a>，依照作業系統下載壓縮檔。</p><p>例如Ubuntu就是將檔案解壓縮之後，使用指令賦予執行權限：</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span>cd</span> <span>"XR-Animator_v0.30.0_linux-x64/XR Animator - electron-v33.2.0-linux-x64_SA/"</span>
</span></span><span><span>
</span></span><span><span>chmod +x electron
</span></span></code></pre></div><p>接著點兩下<code>electron</code>啟動程式。</p><h2>3. 基本用法<span><a href="#3-%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95" aria-label="定位點">#</a></span></h2><p>初始啟動的時候，將含有.pmx的.zip檔拖曳進視窗，載入模型。或者直接按Start，載入內建模型。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-12452bb76d.webp"><p>現在可以跟人物互動了，比如點一下腳部就會跌倒～ 將鏡頭轉到頭部就會給你一個吻。點二下重置鏡頭。右鍵拖曳視窗位置。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b25899ded3.webp"><p>點下方的姿勢按鈕能夠切換許多動作～還能將動作儲存起來。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b905899c6a.webp"><p>系統匣的選單也有很多光影選項能開，不過這就會額外耗費顯示卡計算資源了，沒有獨顯得別開太高級的光影選項。點選Always on Top將視窗永遠置頂。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f747984e4d.webp"><h2>4. 設定動作捕捉<span><a href="#4-%E8%A8%AD%E5%AE%9A%E5%8B%95%E4%BD%9C%E6%8D%95%E6%8D%89" aria-label="定位點">#</a></span></h2><p>可以使用攝像頭或者傳入單張照片進行動態捕捉，讓3D人物做出想要的姿勢。</p><p>VRM動作捕捉的資料能夠與其他軟體共享，不過似乎限定Windows系統使用的樣子。</p><p>我這邊只有要用上半身動態捕捉，因此先點一下XR Animator的工具列，按姿勢，調整為上半身動態捕捉。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e16eeb52b9.webp"><p>然後再按一下動態捕捉，設定身體部分</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a4fee6224c.webp"><p>這樣人物就會根據你的臉部表情與手部動作跟著作動了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-de43aeae19.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-978ca807a8.webp"><h2>5. 在手機上使用網頁版AR<span><a href="#5-%E5%9C%A8%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%BD%BF%E7%94%A8%E7%B6%B2%E9%A0%81%E7%89%88ar" aria-label="定位點">#</a></span></h2><p>因為需要用到智慧型手機的AR功能，所以Android手機最好用Chrome，iPhone則是得用Safari。</p><p>用手機打開這個網頁：<a href="https://sao.animetheme.com/XR_Animator.html" target="_blank">https://sao.animetheme.com/XR_Animator.html</a></p><p>載入模型的用法跟電腦版一樣，點一下左上角的手機符號開啟AR模式。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-dee06707d7.webp"></p><p>讓鏡頭掃描一下平面，放置人物，二指縮放
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-cac79e744a.webp"></p><p>現在你能夠跟人物互動了～！小心走太近會撞倒她。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6e8940b6b3.webp"></p><p>工具列裡面有接球遊戲，至少要站離模型5公尺遠才能玩！
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ff771cc373.webp"></p>]]>
    </description>
    <content:encoded><![CDATA[<p><a href="https://ivonblog.com/posts/xr-animator/featured.webp" target="_blank"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fb4e19772c.webp"></a></p>
<p>XR Animator是一個支援Linux、Windows、macOS的開源桌寵軟體，可以在桌面放3D模型，讓他與你打招呼。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-2a698d3560.webp"><p>內建動態捕捉技術，能夠透過電腦鏡頭，讓3D模型跟著你的身體移動，能夠作為實況主直播時候的虛擬形象工具，算是一種廉價版VTuber吧。</p><p>我個人認為，這個軟體可以作為<a href="https://store.steampowered.com/app/3301060/Desktop_Mate/" target="_blank">Desktop Mate</a>的Linux版替代品。因為它無法使用Steam Proton轉譯執行，而XR Animator是原生的Electron程式。</p><p>此外，XR Animator提供網頁版，能夠在Android與iOS手機上使用。透過AR技術，讓3D人物出現在真實世界，跟她們互動！</p><div><iframe src="https://www.youtube.com/embed/BRVQ2VWp-p0" allowfullscreen="" frameborder="0"></iframe></div><h2>1. 準備3D模型<span><a href="#1-%E6%BA%96%E5%82%993d%E6%A8%A1%E5%9E%8B" aria-label="定位點">#</a></span></h2><p>XR Animator的模型支援.pmx與.vrm格式的3D模型。動作檔則是.vmd與.fbx格式。</p><p>要取得模型，最好的來源就是到<a href="https://3d.nicovideo.jp/" target="_blank">ニコニ立体</a>下載了。</p><p>模型下載後不需要解壓縮，請維持.zip檔的形式。</p><h2>2. 安裝XR Animator<span><a href="#2-%E5%AE%89%E8%A3%9Dxr-animator" aria-label="定位點">#</a></span></h2><p>到<a href="https://github.com/ButzYung/SystemAnimatorOnline/releases" target="_blank">Github</a>，依照作業系統下載壓縮檔。</p><p>例如Ubuntu就是將檔案解壓縮之後，使用指令賦予執行權限：</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span>cd</span> <span>"XR-Animator_v0.30.0_linux-x64/XR Animator - electron-v33.2.0-linux-x64_SA/"</span>
</span></span><span><span>
</span></span><span><span>chmod +x electron
</span></span></code></pre></div><p>接著點兩下<code>electron</code>啟動程式。</p><h2>3. 基本用法<span><a href="#3-%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95" aria-label="定位點">#</a></span></h2><p>初始啟動的時候，將含有.pmx的.zip檔拖曳進視窗，載入模型。或者直接按Start，載入內建模型。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-12452bb76d.webp"><p>現在可以跟人物互動了，比如點一下腳部就會跌倒～ 將鏡頭轉到頭部就會給你一個吻。點二下重置鏡頭。右鍵拖曳視窗位置。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b25899ded3.webp"><p>點下方的姿勢按鈕能夠切換許多動作～還能將動作儲存起來。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-b905899c6a.webp"><p>系統匣的選單也有很多光影選項能開，不過這就會額外耗費顯示卡計算資源了，沒有獨顯得別開太高級的光影選項。點選Always on Top將視窗永遠置頂。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-f747984e4d.webp"><h2>4. 設定動作捕捉<span><a href="#4-%E8%A8%AD%E5%AE%9A%E5%8B%95%E4%BD%9C%E6%8D%95%E6%8D%89" aria-label="定位點">#</a></span></h2><p>可以使用攝像頭或者傳入單張照片進行動態捕捉，讓3D人物做出想要的姿勢。</p><p>VRM動作捕捉的資料能夠與其他軟體共享，不過似乎限定Windows系統使用的樣子。</p><p>我這邊只有要用上半身動態捕捉，因此先點一下XR Animator的工具列，按姿勢，調整為上半身動態捕捉。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-e16eeb52b9.webp"><p>然後再按一下動態捕捉，設定身體部分</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-a4fee6224c.webp"><p>這樣人物就會根據你的臉部表情與手部動作跟著作動了。</p><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-de43aeae19.webp"><img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-978ca807a8.webp"><h2>5. 在手機上使用網頁版AR<span><a href="#5-%E5%9C%A8%E6%89%8B%E6%A9%9F%E4%B8%8A%E4%BD%BF%E7%94%A8%E7%B6%B2%E9%A0%81%E7%89%88ar" aria-label="定位點">#</a></span></h2><p>因為需要用到智慧型手機的AR功能，所以Android手機最好用Chrome，iPhone則是得用Safari。</p><p>用手機打開這個網頁：<a href="https://sao.animetheme.com/XR_Animator.html" target="_blank">https://sao.animetheme.com/XR_Animator.html</a></p><p>載入模型的用法跟電腦版一樣，點一下左上角的手機符號開啟AR模式。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-dee06707d7.webp"></p><p>讓鏡頭掃描一下平面，放置人物，二指縮放
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-cac79e744a.webp"></p><p>現在你能夠跟人物互動了～！小心走太近會撞倒她。
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-6e8940b6b3.webp"></p><p>工具列裡面有接球遊戲，至少要站離模型5公尺遠才能玩！
<img src="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-ff771cc373.webp"></p>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fb4e19772c.webp"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext-20240420/file-cache/ivonblog.com-fb4e19772c.webp" medium="image"/>
    <pubDate>Wed, 03 Sep 2025 12:00:00 +0800</pubDate>
  </item></channel>
</rss>